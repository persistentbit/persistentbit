package com.mycompany.db.generated.persistenttest.myschema;

import java.lang.Override;
import com.mycompany.db.generated.persistenttest.myschema.InvoiceLine;
import com.persistentbit.sql.dsl.generic.updates.Update;
import com.persistentbit.sql.dsl.generic.inserts.Insert;
import com.persistentbit.sql.dsl.generic.inserts.InsertResult;
import com.persistentbit.sql.dsl.generic.expressions.DExprTable;
import com.persistentbit.sql.dsl.generic.query.Query;
import com.persistentbit.collections.PList;
import com.persistentbit.result.Result;
import com.persistentbit.sql.dsl.exprcontext.DbTableContext;
import com.persistentbit.code.annotations.Nullable;
import com.persistentbit.sql.work.DbWork;
import com.persistentbit.sql.dsl.exprcontext.DbContext;
import java.lang.String;

public class TInvoiceLineTable extends TInvoiceLine implements DExprTable<InvoiceLine> {
	
	
	public TInvoiceLineTable(DbTableContext tableContext){
		super(tableContext.createExprLong("id"),tableContext.createExprLong("invoice_id"),tableContext.createExprString("product"));
		this._tableContext = tableContext;
		this._insertFieldNames = PList.val("id", "invoice_id", "product");
		this._autoGenKeyFieldNames = PList.val("id");
	}
	public  TInvoiceLineTable	alias(String tableAlias){
		return new TInvoiceLineTable(_tableContext.withTableAlias(tableAlias));
	}
	@Override
	public  Query	query(){
		return _tableContext.createQuery(this);
	}
	@Override
	public  TInvoiceLine	all(){
		return this;
	}
	public  TInvoiceLine	val(InvoiceLine v){
		DbContext db = _tableContext.getDbContext();
		return new TInvoiceLine(
			db.val(v.getId()), db.val(v.getInvoiceId()), db.val(v.getProduct().orElse(null))
		);
	}
	public  Update	update(){
		return new Update(_tableContext.getDbContext(),this);
	}
	public  DbWork<Integer>	update(InvoiceLine record){
		DbContext db = _tableContext.getDbContext();
		return update()
			.set(this.invoiceId, db.val(record.getInvoiceId()))
			.set(this.product, db.val(record.getProduct().orElse(null)))
			.where(this.id.eq(db.val(record.getId())));
	}
	public  DbWork<InvoiceLine>	insert(InvoiceLine record){
		return new Insert(_tableContext.getDbContext(),this)
			.row(val(record))
			.withAutoGenerated(id)
			.map(insertResult -> {
				PList keys = insertResult.getAutoGenKeys().head();
				return record
					.withId((long)keys.get(0))
				;
			});
	}
}
