-->> ALL


CREATE SCHEMA IF NOT EXISTS goatada_test;

CREATE TABLE goatada_test.AGGR_C_FI_BOND_A
(
  AGGR_C_FI_BOND_PK              INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  BOND_TYPE_CD                   VARCHAR(35)     NULL,
  COLLATERAL_TYPE_CD             VARCHAR(35)     NULL,
  FIRSTPAYDATE                   DATETIME(6)     NULL,
  INFLATION_PROTECTION_FACTOR    DECIMAL(30, 10) NULL,
  INTEREST_RATE_TYPE_CD          VARCHAR(35)     NULL,
  KIND_OF_INTEREST_CD            VARCHAR(35)     NULL,
  LASTPAYDATE                    DATETIME(6)     NULL,
  PERPETUAL_CD                   VARCHAR(35)     NULL,
  PRINCIPAL_OR_COUPON_CD         VARCHAR(35)     NULL,
  REPAYMENT_HIERARCHY_CD         VARCHAR(35)     NULL,
  FI_BOND_BONDTYPE_UUID          VARCHAR(40)     NULL,
  FI_BOND_COLLATERALTYPE_UUID    VARCHAR(40)     NULL,
  FI_BOND_FIRSTPAYDATE_UUID      VARCHAR(40)     NULL,
  FI_BOND_INFLPROTFACTOR_UUID    VARCHAR(40)     NULL,
  FI_BOND_INTERESTRATETYPE_UUID  VARCHAR(40)     NULL,
  FI_BOND_KINDOFINTEREST_UUID    VARCHAR(40)     NULL,
  FI_BOND_LASTPAYDATE_UUID       VARCHAR(40)     NULL,
  FI_BOND_PERPETUAL_UUID         VARCHAR(40)     NULL,
  FI_BOND_PRINCIPALORCOUPON_UUID VARCHAR(40)     NULL,
  FI_BOND_REPAYHIERARCHY_UUID    VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_BOND_BONDTYPE           DATE            NULL,
  ADR_FI_BOND_COLLATERALTYPE     DATE            NULL,
  ADR_FI_BOND_FIRSTPAYDATE       DATE            NULL,
  ADR_FI_BOND_INFLPROTFACTOR     DATE            NULL,
  ADR_FI_BOND_INTERESTRATETYPE   DATE            NULL,
  ADR_FI_BOND_KINDOFINTEREST     DATE            NULL,
  ADR_FI_BOND_LASTPAYDATE        DATE            NULL,
  ADR_FI_BOND_PERPETUAL          DATE            NULL,
  ADR_FI_BOND_PRINCIPALORCOUPON  DATE            NULL,
  ADR_FI_BOND_REPAYHIERARCHY     DATE            NULL,
  FINALREDEMPRC_VALUE            DECIMAL(20, 10) NULL,
  FINALREDEMPRC_UNITQUANT        DECIMAL(30, 10) NULL,
  FINALREDEMPRC_FORMULA          VARCHAR(35)     NULL,
  FINALREDEMPRC_QUOTTYPE         VARCHAR(35)     NULL,
  FINALREDEMPRC_CRNCY            VARCHAR(35)     NULL,
  FI_BOND_FINALREDEMPRC_UUID     VARCHAR(40)     NULL,
  ADR_FI_BOND_FINALREDEMPRC      DATE            NULL,
  BORROWER_TYPE_CD               VARCHAR(35)     NULL,
  FI_BOND_BORROWERTYPE_UUID      VARCHAR(40)     NULL,
  ADR_FI_BOND_BORROWERTYPE       DATE            NULL,
  SYNDICATION_TYPE_CD            VARCHAR(35)     NULL,
  FI_BOND_SYNDICATIONTYPE_UUID   VARCHAR(40)     NULL,
  ADR_FI_BOND_SYNDICATIONTYPE    DATE            NULL,
  IRREGFIRST_CD                  VARCHAR(35)     NULL,
  IRREGLAST_CD                   VARCHAR(35)     NULL,
  FI_BOND_IRREGFIRST_UUID        VARCHAR(40)     NULL,
  FI_BOND_IRREGLAST_UUID         VARCHAR(40)     NULL,
  ADR_FI_BOND_IRREGFIRST         DATE            NULL,
  ADR_FI_BOND_IRREGLAST          DATE            NULL,
  NEXTPAYDATE                    DATE            NULL,
  FI_BOND_NEXTPAYDATE_UUID       VARCHAR(40)     NULL,
  ADR_FI_BOND_NEXTPAYDATE        DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_BOND_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_BOND_A
  ON goatada_test.AGGR_C_FI_BOND_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_BTV_A
(
  AGGR_C_FI_BTV_PK   INT         NOT NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL,
  APPLICABILITY_DATE DATE        NULL,
  PROVIDER_CD        VARCHAR(35) NULL,
  BTV_TYPE_CD        VARCHAR(35) NULL,
  SUBJECT_ID         VARCHAR(10) NULL,
  CURRENCY_CD        VARCHAR(35) NULL,
  EXCHANGE_CD        VARCHAR(35) NULL,
  FI_BTV_BTV_UUID    VARCHAR(40) NULL,
  MODIFIED_DATE_TIME DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            INT         NULL,
  ADR_FI_BTV_BTV     DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_BTV_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_BTV_A
  ON goatada_test.AGGR_C_FI_BTV_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_CLASSIFY_A
(
  AGGR_C_FI_CLASSIFY_PK  INT         NOT NULL,
  REVISION_NUMBER        INT         NOT NULL,
  REVISION_TYPE          INT         NULL,
  APPLICABILITY_DATE     DATE        NULL,
  PROVIDER_CD            VARCHAR(35) NULL,
  CLASSIFICATION_TYPE_CD VARCHAR(35) NULL,
  SUBJECT_ID             VARCHAR(10) NULL,
  CLASSIFICATION_CD      VARCHAR(35) NULL,
  UUID                   VARCHAR(40) NULL,
  MODIFIED_DATE_TIME     DATETIME(6) NULL,
  USER_ID                VARCHAR(10) NULL,
  VERSION                INT         NULL,
  ADR                    DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_CLASSIFY_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_CLASSIFY_A
  ON goatada_test.AGGR_C_FI_CLASSIFY_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_DENOM_A
(
  AGGR_C_FI_DENOM_PK INT             NOT NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL,
  APPLICABILITY_DATE DATE            NULL,
  PROVIDER_CD        VARCHAR(35)     NULL,
  SEQUENCE_NO        INT             NULL,
  SUBJECT_ID         VARCHAR(10)     NULL,
  QUOTATIONTYPE_CD   VARCHAR(35)     NULL,
  UNITQUANTITY       DECIMAL(30, 10) NULL,
  VALUE              DECIMAL(30, 10) NULL,
  FI_DENOM_ITEM_UUID VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            INT             NULL,
  ADR_FI_DENOM_ITEM  DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_DENOM_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_DENOM_A
  ON goatada_test.AGGR_C_FI_DENOM_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_DEPOSITORY_A
(
  AGGR_C_FI_DEPOSITORY_PK INT         NOT NULL,
  REVISION_NUMBER         INT         NOT NULL,
  REVISION_TYPE           INT         NULL,
  APPLICABILITY_DATE      DATE        NULL,
  PROVIDER_CD             VARCHAR(35) NULL,
  DEPOSITORY_TYPE_CD      VARCHAR(35) NULL,
  SUBJECT_ID              VARCHAR(10) NULL,
  VALUE_CD                VARCHAR(35) NULL,
  FI_DEPOSITORY_INFO_UUID VARCHAR(40) NULL,
  MODIFIED_DATE_TIME      DATETIME(6) NULL,
  USER_ID                 VARCHAR(10) NULL,
  VERSION                 INT         NULL,
  ADR_FI_DEPOSITORY_INFO  DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_DEPOSITORY_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_DEPOSITOR_AY
  ON goatada_test.AGGR_C_FI_DEPOSITORY_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_DERIV_A
(
  AGGR_C_FI_DERIV_PK             INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  CASH_SETTLEMENT_INDICATOR_CD   VARCHAR(35)     NULL,
  CHEAPEST_TO_DELIVERY_INSTR     VARCHAR(10)     NULL,
  CLASS_CURRENCY_CD              VARCHAR(35)     NULL,
  CONTRACT_FREQ_PERIOD_CD        VARCHAR(35)     NULL,
  COVERAGE_MARGIN_PERCENT        DECIMAL(30, 10) NULL,
  EXERCISE_TYPE_CD               VARCHAR(35)     NULL,
  EXPIRY_DATE                    DATETIME(6)     NULL,
  FIRST_DELIVERY_DATE            DATETIME(6)     NULL,
  FIRST_NOTIFICATION_DATE        DATETIME(6)     NULL,
  FIRST_TRADE_DATE               DATETIME(6)     NULL,
  KNOCKOUT_INDICATOR_CD          VARCHAR(35)     NULL,
  LAST_DELIVERY_DATE             DATETIME(6)     NULL,
  LAST_NOTIFICATION_DATE         DATETIME(6)     NULL,
  LAST_TRADE_DATE                DATETIME(6)     NULL,
  MIN_TRADING_QTY                DECIMAL(30, 10) NULL,
  PUTCALL_CD                     VARCHAR(35)     NULL,
  REAL_CONTRACT_INDICATOR_CD     VARCHAR(35)     NULL,
  STRIKEPRICE_CURRENCY_CD        VARCHAR(35)     NULL,
  STRIKEPRICE_QUOTATION_CD       VARCHAR(35)     NULL,
  STRIKEPRICE_QUOTATION_UNIT_QTY DECIMAL(30, 10) NULL,
  STRIKEPRICE_VALUE              DECIMAL(30, 10) NULL,
  TICK_SIZE_VALUE                DECIMAL(30, 10) NULL,
  TICK_VALUE                     DECIMAL(30, 10) NULL,
  UNIT_OF_TRADE_VALUE            DECIMAL(30, 10) NULL,
  FI_DERIV_CASHSETTLEMENT_UUID   VARCHAR(40)     NULL,
  FI_DERIV_CHEAPST2DELIVER_UUID  VARCHAR(40)     NULL,
  FI_DERIV_CLASSCURRENCY_UUID    VARCHAR(40)     NULL,
  FI_DERIV_CONTRACTFREQ_UUID     VARCHAR(40)     NULL,
  FI_DERIV_COVERMARGIN_PCT_UUID  VARCHAR(40)     NULL,
  FI_DERIV_EXERCISETYPE_UUID     VARCHAR(40)     NULL,
  FI_DERIV_EXPIRY_DATE_UUID      VARCHAR(40)     NULL,
  FI_DERIV_FIRST_TRADE_DATE_UUID VARCHAR(40)     NULL,
  FI_DERIV_FRST_DELIV_DAT_UUID   VARCHAR(40)     NULL,
  FI_DERIV_FRST_NOTIF_DAT_UUID   VARCHAR(40)     NULL,
  FI_DERIV_KNOCKOUT_UUID         VARCHAR(40)     NULL,
  FI_DERIV_LAST_DELIV_DAT_UUID   VARCHAR(40)     NULL,
  FI_DERIV_LAST_NOTIF_DAT_UUID   VARCHAR(40)     NULL,
  FI_DERIV_LAST_TRADE_DATE_UUID  VARCHAR(40)     NULL,
  FI_DERIV_MIN_TRADE_QUANT_UUID  VARCHAR(40)     NULL,
  FI_DERIV_NBR_UNDERLYING_UUID   VARCHAR(40)     NULL,
  FI_DERIV_PUTCALL_UUID          VARCHAR(40)     NULL,
  FI_DERIV_REALCONTRACT_UUID     VARCHAR(40)     NULL,
  FI_DERIV_STRIKEPRICE_UUID      VARCHAR(40)     NULL,
  FI_DERIV_TICKSIZE_VALUE_UUID   VARCHAR(40)     NULL,
  FI_DERIV_TICK_VALUE_UUID       VARCHAR(40)     NULL,
  FI_DERIV_TRADEUNIT_UUID        VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_DERIV_CASHSETTLEMENT    DATE            NULL,
  ADR_FI_DERIV_CHEAPST2DELIVER   DATE            NULL,
  ADR_FI_DERIV_CLASSCURRENCY     DATE            NULL,
  ADR_FI_DERIV_CONTRACTFREQ      DATE            NULL,
  ADR_FI_DERIV_COVERMARGIN_PCT   DATE            NULL,
  ADR_FI_DERIV_EXERCISETYPE      DATE            NULL,
  ADR_FI_DERIV_EXPIRY_DATE       DATE            NULL,
  ADR_FI_DERIV_FIRST_TRADE_DATE  DATE            NULL,
  ADR_FI_DERIV_FRST_DELIV_DAT    DATE            NULL,
  ADR_FI_DERIV_FRST_NOTIF_DAT    DATE            NULL,
  ADR_FI_DERIV_KNOCKOUT          DATE            NULL,
  ADR_FI_DERIV_LAST_DELIV_DAT    DATE            NULL,
  ADR_FI_DERIV_LAST_NOTIF_DAT    DATE            NULL,
  ADR_FI_DERIV_LAST_TRADE_DATE   DATE            NULL,
  ADR_FI_DERIV_MIN_TRADE_QUANT   DATE            NULL,
  ADR_FI_DERIV_NBR_UNDERLYING    DATE            NULL,
  ADR_FI_DERIV_PUTCALL           DATE            NULL,
  ADR_FI_DERIV_REALCONTRACT      DATE            NULL,
  ADR_FI_DERIV_STRIKEPRICE       DATE            NULL,
  ADR_FI_DERIV_TICKSIZE_VALUE    DATE            NULL,
  ADR_FI_DERIV_TICK_VALUE        DATE            NULL,
  ADR_FI_DERIV_TRADEUNIT         DATE            NULL,
  UNDERL_ASSETINFO_CD            VARCHAR(35)     NULL,
  FI_DERIV_UNDERL_ASSETINFO_UUID VARCHAR(40)     NULL,
  ADR_FI_DERIV_UNDERL_ASSETINFO  DATE            NULL,
  WARRANT_TYPE_CD                VARCHAR(35)     NULL,
  FI_DERIV_WARRANT_TYPE_UUID     VARCHAR(40)     NULL,
  ADR_FI_DERIV_WARRANT_TYPE      DATE            NULL,
  NUM_UNDERLYING_FROM            DECIMAL(20, 10) NULL,
  NUM_UNDERLYING_TO              DECIMAL(20, 10) NULL,
  PRIMARY KEY (AGGR_C_FI_DERIV_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_DERIV_A
  ON goatada_test.AGGR_C_FI_DERIV_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_EQUITY_A
(
  AGGR_C_FI_EQUITY_PK          INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  APPLICABILITY_DATE           DATE        NULL,
  PROVIDER_CD                  VARCHAR(35) NULL,
  SUBJECT_ID                   VARCHAR(10) NULL,
  CERTIFICATE_TYPE_CD          VARCHAR(35) NULL,
  DIV_PAYFREQUENCY             VARCHAR(35) NULL,
  DIV_SPECIALFREQUENCY_CD      VARCHAR(35) NULL,
  FI_EQTY_CERTIFICATETYPE_UUID VARCHAR(40) NULL,
  FI_EQTY_DIV_PAYFREQ_UUID     VARCHAR(40) NULL,
  MODIFIED_DATE_TIME           DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  ADR_FI_EQTY_CERTIFICATETYPE  DATE        NULL,
  ADR_FI_EQTY_DIV_PAYFREQ      DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_EQUITY_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_EQUITY_A
  ON goatada_test.AGGR_C_FI_EQUITY_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_FISCALLEGAL_A
(
  AGGR_C_FI_FISCALLEGAL_PK INT         NOT NULL,
  REVISION_NUMBER          INT         NOT NULL,
  REVISION_TYPE            INT         NULL,
  APPLICABILITY_DATE       DATE        NULL,
  PROVIDER_CD              VARCHAR(35) NULL,
  FISCAL_LEGAL_TYPE_CD     VARCHAR(35) NULL,
  SUBJECT_ID               VARCHAR(10) NULL,
  FISCAL_CODE              VARCHAR(35) NULL,
  UUID                     VARCHAR(40) NULL,
  MODIFIED_DATE_TIME       DATETIME(6) NULL,
  USER_ID                  VARCHAR(10) NULL,
  VERSION                  INT         NULL,
  ADR                      DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_FISCALLEGAL_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_FISCALLEGAL_A
  ON goatada_test.AGGR_C_FI_FISCALLEGAL_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_FI_RELATION_A
(
  AGGR_C_FI_FI_RELATION_PK      INT             NOT NULL,
  REVISION_NUMBER               INT             NOT NULL,
  REVISION_TYPE                 INT             NULL,
  APPLICABILITY_DATE            DATE            NULL,
  PROVIDER_CD                   VARCHAR(35)     NULL,
  RELATED_INSTRUMENT_ID         VARCHAR(10)     NULL,
  SUBJECT_ID                    VARCHAR(10)     NULL,
  CONVERTIBLE_AMOUNT            DECIMAL(30, 10) NULL,
  CONVERTIBLE_FIRST_DATE        DATETIME(6)     NULL,
  CONVERTIBLE_LAST_DATE         DATETIME(6)     NULL,
  DELIV_BOND_CONVERSION_FROM    DECIMAL(30, 10) NULL,
  DELIV_BOND_CONVERSION_TO      DECIMAL(30, 10) NULL,
  INDEX_PARTICIPATION_PCT       DECIMAL(30, 10) NULL,
  RELATION_TYPE_CD              VARCHAR(35)     NULL,
  UNDERLYING_EXCHANGE_CD        VARCHAR(35)     NULL,
  FI_FI_REL_CONVERTIBLEAMT_UUID VARCHAR(40)     NULL,
  FI_FI_REL_CONV_FACTOR_UUID    VARCHAR(40)     NULL,
  FI_FI_REL_CONV_FIRSTDATE_UUID VARCHAR(40)     NULL,
  FI_FI_REL_CONV_LASTDATE_UUID  VARCHAR(40)     NULL,
  FI_FI_REL_INDEXPART_PCT_UUID  VARCHAR(40)     NULL,
  FI_FI_REL_UNDEREXCHANGE_UUID  VARCHAR(40)     NULL,
  FI_FI_REL_VALID_UUID          VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME            DATETIME(6)     NULL,
  USER_ID                       VARCHAR(10)     NULL,
  VALIDITY_CD                   VARCHAR(35)     NULL,
  VERSION                       INT             NULL,
  ADR_FI_FI_REL_CONVERTIBLEAMT  DATE            NULL,
  ADR_FI_FI_REL_CONV_FACTOR     DATE            NULL,
  ADR_FI_FI_REL_CONV_FIRSTDATE  DATE            NULL,
  ADR_FI_FI_REL_CONV_LASTDATE   DATE            NULL,
  ADR_FI_FI_REL_INDEXPART_PCT   DATE            NULL,
  ADR_FI_FI_REL_UNDEREXCHANGE   DATE            NULL,
  ADR_FI_FI_REL_VALID           DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_FI_RELATION_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_FI_RELATION1_A
  ON goatada_test.AGGR_C_FI_FI_RELATION_A (RELATED_INSTRUMENT_ID);

CREATE INDEX goatada_test.FK_AGGR_C_FI_FI_RELATION2_A
  ON goatada_test.AGGR_C_FI_FI_RELATION_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_FUND_A
(
  AGGR_C_FI_FUND_PK              INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  CAPITAL_PROTECTION_CD          VARCHAR(35)     NULL,
  CAPITAL_PROTECTION_PERCENTAGE  DECIMAL(30, 10) NULL,
  FUND_COMPOSITION_CD            VARCHAR(35)     NULL,
  FUND_OPENCLOSED_CD             VARCHAR(35)     NULL,
  FUND_TYPE_CD                   VARCHAR(35)     NULL,
  FI_FUND_CAPITALPROTECTION_UUID VARCHAR(40)     NULL,
  FI_FUND_COMPOSITIONCODE_UUID   VARCHAR(40)     NULL,
  FI_FUND_OPENCLOSEDCODE_UUID    VARCHAR(40)     NULL,
  FI_FUND_TYPECODE_UUID          VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_FUND_CAPITALPROTECTION  DATE            NULL,
  ADR_FI_FUND_COMPOSITIONCODE    DATE            NULL,
  ADR_FI_FUND_OPENCLOSEDCODE     DATE            NULL,
  ADR_FI_FUND_TYPECODE           DATE            NULL,
  FUND_UCITS_CD                  VARCHAR(35)     NULL,
  FI_FUND_UCITS_UUID             VARCHAR(40)     NULL,
  FUND_SRRI_CD                   VARCHAR(35)     NULL,
  FI_FUND_SRRI_UUID              VARCHAR(40)     NULL,
  FUND_NAVCALCULFREQ_CD          VARCHAR(35)     NULL,
  FI_FUND_NAVCALCULFREQ_UUID     VARCHAR(40)     NULL,
  ADR_FI_FUND_UCITS              DATE            NULL,
  ADR_FI_FUND_SRRI               DATE            NULL,
  ADR_FI_FUND_NAVCALCULFREQ      DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_FUND_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_FUND_A
  ON goatada_test.AGGR_C_FI_FUND_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_GUARANTEE_FP_A
(
  AGGR_C_FI_GUARANTEE_FP_PK INT         NOT NULL,
  REVISION_NUMBER           INT         NOT NULL,
  REVISION_TYPE             INT         NULL,
  APPLICABILITY_DATE        DATE        NULL,
  PROVIDER_CD               VARCHAR(35) NULL,
  GUARANTEE_CD              VARCHAR(35) NULL,
  PARTY_ID                  VARCHAR(10) NULL,
  SUBJECT_ID                VARCHAR(10) NULL,
  GUARANTEE_VALID_CD        VARCHAR(35) NULL,
  FI_GUARANTEE_TYPE_UUID    VARCHAR(40) NULL,
  MODIFIED_DATE_TIME        DATETIME(6) NULL,
  USER_ID                   VARCHAR(10) NULL,
  VERSION                   INT         NULL,
  ADR_FI_GUARANTEE_TYPE     DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_GUARANTEE_FP_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_GUARANTEE_FP1_A
  ON goatada_test.AGGR_C_FI_GUARANTEE_FP_A (PARTY_ID);

CREATE INDEX goatada_test.FK_AGGR_C_FI_GUARANTEE_FP2_A
  ON goatada_test.AGGR_C_FI_GUARANTEE_FP_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_ISSUE_A
(
  AGGR_C_FI_ISSUE_PK             INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  AUCTIONDATE                    DATE            NULL,
  CPP_CD                         VARCHAR(35)     NULL,
  ENTITLEMENTDATE                DATE            NULL,
  INCRTRADEQTY_VALUE             DECIMAL(30, 10) NULL,
  INTERESTACCRUALSTARTDATE       DATE            NULL,
  ISSUEDAMOUNT_CURRENCY_CD       VARCHAR(35)     NULL,
  ISSUEDAMOUNT_METHOD_CD         VARCHAR(35)     NULL,
  ISSUEDAMOUNT_UNITQUANTITY      DECIMAL(30, 10) NULL,
  ISSUEDAMOUNT_VALUE             DECIMAL(30, 10) NULL,
  ISSUEPRICE_CURRENCY_CD         VARCHAR(35)     NULL,
  ISSUEPRICE_METHOD_CD           VARCHAR(35)     NULL,
  ISSUEPRICE_UNITQUANTITY        DECIMAL(30, 10) NULL,
  ISSUEPRICE_VALUE               DECIMAL(30, 10) NULL,
  ISSUE_DATE                     DATETIME(6)     NULL,
  MINTRADEQTY_CURRENCY_CD        VARCHAR(35)     NULL,
  MINTRADEQTY_METHOD_CD          VARCHAR(35)     NULL,
  MINTRADEQTY_UNITQUANTITY       DECIMAL(30, 10) NULL,
  MINTRADEQTY_VALUE              DECIMAL(30, 10) NULL,
  NBR_SEC                        DECIMAL(30, 10) NULL,
  SUBSCRIPTIONENDDATE            DATE            NULL,
  SUBSCRIPTIONSTARTDATE          DATE            NULL,
  FI_ISSUE_AUCTIONDATE_UUID      VARCHAR(40)     NULL,
  FI_ISSUE_CPP_UUID              VARCHAR(40)     NULL,
  FI_ISSUE_ENTITLEMENTDATE_UUID  VARCHAR(40)     NULL,
  FI_ISSUE_INCRTRADEQTY_UUID     VARCHAR(40)     NULL,
  FI_ISSUE_INTACCRSTARTDATE_UUID VARCHAR(40)     NULL,
  FI_ISSUE_ISSUEDAMOUNT_UUID     VARCHAR(40)     NULL,
  FI_ISSUE_ISSUEDATE_UUID        VARCHAR(40)     NULL,
  FI_ISSUE_MINTRADEQTY_UUID      VARCHAR(40)     NULL,
  FI_ISSUE_NBR_SEC_UUID          VARCHAR(40)     NULL,
  FI_ISSUE_PRICE_UUID            VARCHAR(40)     NULL,
  FI_ISSUE_SUBSCRENDDATE_UUID    VARCHAR(40)     NULL,
  FI_ISSUE_SUBSCRSTARTDATE_UUID  VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_ISSUE_AUCTIONDATE       DATE            NULL,
  ADR_FI_ISSUE_CPP               DATE            NULL,
  ADR_FI_ISSUE_ENTITLEMENTDATE   DATE            NULL,
  ADR_FI_ISSUE_INCRTRADEQTY      DATE            NULL,
  ADR_FI_ISSUE_INTACCRSTARTDATE  DATE            NULL,
  ADR_FI_ISSUE_ISSUEDAMOUNT      DATE            NULL,
  ADR_FI_ISSUE_ISSUEDATE         DATE            NULL,
  ADR_FI_ISSUE_MINTRADEQTY       DATE            NULL,
  ADR_FI_ISSUE_NBR_SEC           DATE            NULL,
  ADR_FI_ISSUE_PRICE             DATE            NULL,
  ADR_FI_ISSUE_SUBSCRENDDATE     DATE            NULL,
  ADR_FI_ISSUE_SUBSCRSTARTDATE   DATE            NULL,
  ISSUED_NBR_OF_INSTR            BIGINT          NULL,
  FI_ISSUE_ISSUEDNBRINSTR_UUID   VARCHAR(40)     NULL,
  ADR_FI_ISSUE_ISSUEDNBRINSTR    DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_ISSUE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_ISSUE_A
  ON goatada_test.AGGR_C_FI_ISSUE_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_LISTING_A
(
  AGGR_C_FI_LISTING_PK           INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  CURRENCY_CD                    VARCHAR(35)     NULL,
  EXCHANGE_CD                    VARCHAR(35)     NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  LISTING_VALID_CD               VARCHAR(35)     NULL,
  MIFIDMARKETCATEGORY_CD         VARCHAR(35)     NULL,
  PRICECALCULATION_CD            VARCHAR(35)     NULL,
  QUOTATIONENDDATE               DATE            NULL,
  QUOTATIONSTARTDATE             DATE            NULL,
  QUOTATION_METHOD_CD            VARCHAR(35)     NULL,
  QUOTATION_UNITQUANTITY         DECIMAL(30, 10) NULL,
  ROUNDLOT                       DECIMAL(30, 10) NULL,
  SUSPENSIONINDICATOR_CD         VARCHAR(35)     NULL,
  FI_LISTING_LISTING_VALID_UUID  VARCHAR(40)     NULL,
  FI_LISTING_MIFIDMKTCAT_UUID    VARCHAR(40)     NULL,
  FI_LISTING_PRICECALCUL_UUID    VARCHAR(40)     NULL,
  FI_LISTING_QUOTATION_UUID      VARCHAR(40)     NULL,
  FI_LISTING_QUOTENDDATE_UUID    VARCHAR(40)     NULL,
  FI_LISTING_QUOTSTARTDATE_UUID  VARCHAR(40)     NULL,
  FI_LISTING_ROUNDLOT_UUID       VARCHAR(40)     NULL,
  FI_LISTING_SUSPENSIONFLAG_UUID VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_LISTING_LISTING_VALID   DATE            NULL,
  ADR_FI_LISTING_MIFIDMKTCAT     DATE            NULL,
  ADR_FI_LISTING_PRICECALCUL     DATE            NULL,
  ADR_FI_LISTING_QUOTATION       DATE            NULL,
  ADR_FI_LISTING_QUOTENDDATE     DATE            NULL,
  ADR_FI_LISTING_QUOTSTARTDATE   DATE            NULL,
  ADR_FI_LISTING_ROUNDLOT        DATE            NULL,
  ADR_FI_LISTING_SUSPENSIONFLAG  DATE            NULL,
  MIN_TRADE_QTY                  VARCHAR(35)     NULL,
  FI_LISTING_MINTRADEQTY_UUID    VARCHAR(40)     NULL,
  ADR_FI_LISTING_MINTRADEQTY     DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_LISTING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_LISTING_A
  ON goatada_test.AGGR_C_FI_LISTING_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_MIFID_A
(
  AGGR_C_FI_MIFID_PK  INT             NOT NULL,
  REVISION_NUMBER     INT             NOT NULL,
  REVISION_TYPE       INT             NULL,
  MIFID_SCORE_TYPE_CD VARCHAR(35)     NULL,
  COUNTRY_CD          VARCHAR(35)     NULL,
  SUBJECT_ID          VARCHAR(12)     NULL,
  APPLICABILITY_DATE  DATE            NULL,
  PROVIDER_CD         VARCHAR(35)     NULL,
  REPORTER            VARCHAR(100)    NULL,
  SCORE_CD            VARCHAR(35)     NULL,
  ADR                 DATE            NULL,
  UUID                VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME  TIME            NULL,
  USER_ID             VARCHAR(10)     NULL,
  VERSION             INT DEFAULT '0' NULL,
  PRIMARY KEY (AGGR_C_FI_MIFID_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_MIFID_A
  ON goatada_test.AGGR_C_FI_MIFID_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVTDET_A
(
  AGGR_C_FI_PAYEVTDET_PK        INT             NOT NULL,
  REVISION_NUMBER               INT             NOT NULL,
  REVISION_TYPE                 INT             NULL,
  APPLICABILITY_DATE            DATE            NULL,
  PROVIDER_CD                   VARCHAR(35)     NULL,
  PAYMENT_EVENT_ID              INT             NULL,
  SEQUENCE_NO                   INT             NULL,
  SUBJECT_ID                    VARCHAR(10)     NULL,
  AMTINV1_CURRENCY_CD           VARCHAR(35)     NULL,
  AMTINV1_INSTRUMENT            VARCHAR(10)     NULL,
  AMTINV1_QUOTATIONTYPE_CD      VARCHAR(35)     NULL,
  AMTINV1_UNITQUANTITY          DECIMAL(30, 10) NULL,
  AMTINV1_VALUE                 DECIMAL(30, 10) NULL,
  AMTINV2_CURRENCY_CD           VARCHAR(35)     NULL,
  AMTINV2_INSTRUMENT            VARCHAR(10)     NULL,
  AMTINV2_QUOTATIONTYPE_CD      VARCHAR(35)     NULL,
  AMTINV2_UNITQUANTITY          DECIMAL(30, 10) NULL,
  AMTINV2_VALUE                 DECIMAL(30, 10) NULL,
  AMTVAL1_AMTTYPE_CD            VARCHAR(35)     NULL,
  AMTVAL1_CURRENCY_CD           VARCHAR(35)     NULL,
  AMTVAL1_QUOTATIONTYPE_CD      VARCHAR(35)     NULL,
  AMTVAL1_UNITQUANTITY          VARCHAR(35)     NULL,
  AMTVAL1_VALUE                 DECIMAL(30, 10) NULL,
  AMTVAL2_AMTTYPE_CD            VARCHAR(35)     NULL,
  AMTVAL2_CURRENCY_CD           VARCHAR(35)     NULL,
  AMTVAL2_QUOTATIONTYPE_CD      VARCHAR(35)     NULL,
  AMTVAL2_UNITQUANTITY          VARCHAR(35)     NULL,
  AMTVAL2_VALUE                 DECIMAL(30, 10) NULL,
  DEFAULT_CHOICE_CD             VARCHAR(35)     NULL,
  INSTRPAYMNT_CONVERSION_FROM   DECIMAL(30, 10) NULL,
  INSTRPAYMNT_CONVERSION_TO     DECIMAL(30, 10) NULL,
  INSTRPAYMNT_INSTRUMENT        VARCHAR(10)     NULL,
  FI_PAYEVTDET_AMOUNT_UUID      VARCHAR(40)     NULL,
  FI_PAYEVTDET_AMT2_UUID        VARCHAR(40)     NULL,
  FI_PAYEVTDET_DEFAULT_UUID     VARCHAR(40)     NULL,
  FI_PAYEVTDET_INSTRPAYMNT_UUID VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME            DATETIME(6)     NULL,
  USER_ID                       VARCHAR(10)     NULL,
  SET_ID                        VARCHAR(40)     NULL,
  VERSION                       INT             NULL,
  ADR_FI_PAYEVTDET_AMOUNT       DATE            NULL,
  ADR_FI_PAYEVTDET_AMT2         DATE            NULL,
  ADR_FI_PAYEVTDET_DEFAULT      DATE            NULL,
  ADR_FI_PAYEVTDET_INSTRPAYMNT  DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVTDET_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_C_FI_PAYEVTDET_IDX1_A
  ON goatada_test.AGGR_C_FI_PAYEVTDET_A (AMTINV1_INSTRUMENT);

CREATE INDEX goatada_test.AGGR_C_FI_PAYEVTDET_IDX2_A
  ON goatada_test.AGGR_C_FI_PAYEVTDET_A (AMTINV2_INSTRUMENT);

CREATE INDEX goatada_test.AGGR_C_FI_PAYEVTDET_IDX3_A
  ON goatada_test.AGGR_C_FI_PAYEVTDET_A (INSTRPAYMNT_INSTRUMENT);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVTDET_A
  ON goatada_test.AGGR_C_FI_PAYEVTDET_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_A
(
  AGGR_C_FI_PAYEVT_PK            INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  APPLICABILITY_DATE             DATE        NULL,
  PROVIDER_CD                    VARCHAR(35) NULL,
  PAYMENT_EVENT_ID               INT         NULL,
  SUBJECT_ID                     VARCHAR(10) NULL,
  PAYANNOUNCEDATE                DATE        NULL,
  PAYPAYDATE                     DATE        NULL,
  PAYRECDATE                     DATE        NULL,
  TYPE_CD                        VARCHAR(35) NULL,
  VALIDITY_CD                    VARCHAR(35) NULL,
  FI_PAYEVT_PAYANNOUNCEDATE_UUID VARCHAR(40) NULL,
  FI_PAYEVT_PAYPAYDATE_UUID      VARCHAR(40) NULL,
  FI_PAYEVT_PAYRECDATE_UUID      VARCHAR(40) NULL,
  FI_PAYEVT_TYPE_UUID            VARCHAR(40) NULL,
  FI_PAYEVT_VALID_UUID           VARCHAR(40) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  DETAIL_SETID                   VARCHAR(40) NULL,
  FI_PAYEVT_DETSETID_UUID        VARCHAR(40) NULL,
  VERSION                        INT         NULL,
  ADR_FI_PAYEVT_DETSETID         DATE        NULL,
  ADR_FI_PAYEVT_PAYANNOUNCEDATE  DATE        NULL,
  ADR_FI_PAYEVT_PAYPAYDATE       DATE        NULL,
  ADR_FI_PAYEVT_PAYRECDATE       DATE        NULL,
  ADR_FI_PAYEVT_TYPE             DATE        NULL,
  ADR_FI_PAYEVT_VALID            DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_A
  ON goatada_test.AGGR_C_FI_PAYEVT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_AMO_A
(
  AGGR_C_FI_PAYEVT_AMO_PK      INT             NOT NULL,
  REVISION_NUMBER              INT             NOT NULL,
  REVISION_TYPE                INT             NULL,
  APPLICABILITY_DATE           DATE            NULL,
  PROVIDER_CD                  VARCHAR(35)     NULL,
  PAYMENT_EVENT_ID             INT             NULL,
  SUBJECT_ID                   VARCHAR(10)     NULL,
  AMORTIZATION_TYPE_CD         VARCHAR(35)     NULL,
  POOLFACTOR                   DECIMAL(30, 10) NULL,
  FI_PAYEVTAMO_POOLFACTOR_UUID VARCHAR(40)     NULL,
  FI_PAYEVTAMO_TYPE_UUID       VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME           DATETIME(6)     NULL,
  USER_ID                      VARCHAR(10)     NULL,
  VERSION                      INT             NULL,
  ADR_FI_PAYEVTAMO_POOLFACTOR  DATE            NULL,
  ADR_FI_PAYEVTAMO_TYPE        DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_AMO_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_AMO_A
  ON goatada_test.AGGR_C_FI_PAYEVT_AMO_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_CALPUT_A
(
  AGGR_C_FI_PAYEVT_CALPUT_PK  INT             NOT NULL,
  REVISION_NUMBER             INT             NOT NULL,
  REVISION_TYPE               INT             NULL,
  APPLICABILITY_DATE          DATE            NULL,
  PROVIDER_CD                 VARCHAR(35)     NULL,
  PAYMENT_EVENT_ID            INT             NULL,
  SUBJECT_ID                  VARCHAR(10)     NULL,
  CALPUT_TYPE_CD              VARCHAR(35)     NULL,
  CURRENCY_CD                 VARCHAR(35)     NULL,
  QUOTATIONTYPE_CD            VARCHAR(35)     NULL,
  UNITQUANTITY                VARCHAR(35)     NULL,
  VALUE                       DECIMAL(30, 10) NULL,
  FI_PAYEVTCALPUT_AMOUNT_UUID VARCHAR(40)     NULL,
  FI_PAYEVTCALPUT_TYPE_UUID   VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NULL,
  USER_ID                     VARCHAR(10)     NULL,
  VERSION                     INT             NULL,
  ADR_FI_PAYEVTCALPUT_AMOUNT  DATE            NULL,
  ADR_FI_PAYEVTCALPUT_TYPE    DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_CALPUT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_CALPUT_A
  ON goatada_test.AGGR_C_FI_PAYEVT_CALPUT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_DIV_A
(
  AGGR_C_FI_PAYEVT_DIV_PK        INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  APPLICABILITY_DATE             DATE        NULL,
  PROVIDER_CD                    VARCHAR(35) NULL,
  PAYMENT_EVENT_ID               INT         NULL,
  SUBJECT_ID                     VARCHAR(10) NULL,
  CHOICE_END_DATE                DATE        NULL,
  CHOICE_START_DATE              DATE        NULL,
  TYPE_CD                        VARCHAR(35) NULL,
  FI_PAYEVTDIV_CHOENDDATE_UUID   VARCHAR(40) NULL,
  FI_PAYEVTDIV_CHOSTARTDATE_UUID VARCHAR(40) NULL,
  FI_PAYEVTDIV_TYPE_UUID         VARCHAR(40) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  ADR_FI_PAYEVTDIV_CHOENDDATE    DATE        NULL,
  ADR_FI_PAYEVTDIV_CHOSTARTDATE  DATE        NULL,
  ADR_FI_PAYEVTDIV_TYPE          DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_DIV_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_DIV_A
  ON goatada_test.AGGR_C_FI_PAYEVT_DIV_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_INCOME_A
(
  AGGR_C_FI_PAYEVT_INCOME_PK    INT             NOT NULL,
  REVISION_NUMBER               INT             NOT NULL,
  REVISION_TYPE                 INT             NULL,
  APPLICABILITY_DATE            DATE            NULL,
  PROVIDER_CD                   VARCHAR(35)     NULL,
  PAYMENT_EVENT_ID              INT             NULL,
  SUBJECT_ID                    VARCHAR(10)     NULL,
  ACCRRATE_CURRENCY_CD          VARCHAR(35)     NULL,
  ACCRRATE_QUOTATIONTYPE_CD     VARCHAR(35)     NULL,
  ACCRRATE_UNITQUANTITY         DECIMAL(30, 10) NULL,
  ACCRRATE_VALUE                DECIMAL(30, 10) NULL,
  ENDDATE                       DATE            NULL,
  INT_NUMBER_OF_DAYS            INT             NULL,
  STARTDATE                     DATE            NULL,
  TYPE_CD                       VARCHAR(35)     NULL,
  YRATE_CURRENCY_CD             VARCHAR(35)     NULL,
  YRATE_QUOTATIONTYPE_CD        VARCHAR(35)     NULL,
  YRATE_UNITQUANTITY            DECIMAL(30, 10) NULL,
  YRATE_VALUE                   DECIMAL(30, 10) NULL,
  FI_PAYEVTINT_ACCRUALRATE_UUID VARCHAR(40)     NULL,
  FI_PAYEVTINT_INTDAYS_UUID     VARCHAR(40)     NULL,
  FI_PAYEVTINT_TYPE_UUID        VARCHAR(40)     NULL,
  FI_PAYEVTINT_YRATE_UUID       VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME            DATETIME(6)     NULL,
  USER_ID                       VARCHAR(10)     NULL,
  VERSION                       INT             NULL,
  ADR_FI_PAYEVTINT_ACCRUALRATE  DATE            NULL,
  ADR_FI_PAYEVTINT_INTDAYS      DATE            NULL,
  ADR_FI_PAYEVTINT_TYPE         DATE            NULL,
  ADR_FI_PAYEVTINT_YRATE        DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_INCOME_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_INCOME_A
  ON goatada_test.AGGR_C_FI_PAYEVT_INCOME_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_MKT_A
(
  AGGR_C_FI_PAYEVT_MKT_PK   INT         NOT NULL,
  REVISION_NUMBER           INT         NOT NULL,
  REVISION_TYPE             INT         NULL,
  APPLICABILITY_DATE        DATE        NULL,
  PROVIDER_CD               VARCHAR(35) NULL,
  EXCHANGE_CD               VARCHAR(10) NULL,
  PAYMENT_EVENT_ID          INT         NULL,
  SUBJECT_ID                VARCHAR(10) NULL,
  EXDATE                    DATE        NULL,
  FI_PAYEVT_MKT_EXDATE_UUID VARCHAR(40) NULL,
  MODIFIED_DATE_TIME        DATETIME(6) NULL,
  USER_ID                   VARCHAR(10) NULL,
  VERSION                   INT         NULL,
  ADR_FI_PAYEVT_MKT_EXDATE  DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_MKT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_MKT_A
  ON goatada_test.AGGR_C_FI_PAYEVT_MKT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_REF_A
(
  AGGR_C_FI_PAYEVT_REF_PK  INT          NOT NULL,
  REVISION_NUMBER          INT          NOT NULL,
  REVISION_TYPE            INT          NULL,
  APPLICABILITY_DATE       DATE         NULL,
  PROVIDER_CD              VARCHAR(35)  NULL,
  PAYMENT_EVENT_ID         INT          NULL,
  REFERENCE_SCHEME_CD      VARCHAR(35)  NULL,
  SUBJECT_ID               VARCHAR(10)  NULL,
  REFERENCE                VARCHAR(100) NULL,
  FI_PAYEVT_REFERENCE_UUID VARCHAR(40)  NULL,
  MODIFIED_DATE_TIME       DATETIME(6)  NULL,
  USER_ID                  VARCHAR(10)  NULL,
  VERSION                  INT          NULL,
  ADR_FI_PAYEVT_REFERENCE  DATE         NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_REF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_REF_A
  ON goatada_test.AGGR_C_FI_PAYEVT_REF_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_PAYEVT_VNT_A
(
  AGGR_C_FI_PAYEVT_VNT_PK   INT             NOT NULL,
  REVISION_NUMBER           INT             NOT NULL,
  REVISION_TYPE             INT             NULL,
  APPLICABILITY_DATE        DATE            NULL,
  PROVIDER_CD               VARCHAR(35)     NULL,
  PAYMENT_EVENT_ID          INT             NULL,
  SEQUENCE_NO               INT             NULL,
  SUBJECT_ID                VARCHAR(10)     NULL,
  VENTILATION_SCHEME_CD     VARCHAR(35)     NULL,
  CURRENCY_CD               VARCHAR(35)     NULL,
  QUOTATIONTYPE_CD          VARCHAR(35)     NULL,
  UNITQUANTITY              DECIMAL(30, 10) NULL,
  VALUE                     DECIMAL(30, 10) NULL,
  FI_PAYEVT_VNT_AMOUNT_UUID VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME        DATETIME(6)     NULL,
  USER_ID                   VARCHAR(10)     NULL,
  VENTILATION_CD            VARCHAR(35)     NULL,
  VERSION                   INT             NULL,
  ADR_FI_PAYEVT_VNT_AMOUNT  DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_PAYEVT_VNT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_PAYEVT_VNT_A
  ON goatada_test.AGGR_C_FI_PAYEVT_VNT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_RATING_A
(
  AGGR_C_FI_RATING_PK   INT         NOT NULL,
  REVISION_NUMBER       INT         NOT NULL,
  REVISION_TYPE         INT         NULL,
  APPLICABILITY_DATE    DATE        NULL,
  PROVIDER_CD           VARCHAR(35) NULL,
  RATING_PROVIDER_CD    VARCHAR(35) NULL,
  RATING_TYPE_CD        VARCHAR(35) NULL,
  SUBJECT_ID            VARCHAR(10) NULL,
  RATING_ACTION_CD      VARCHAR(35) NULL,
  RATING_CD             VARCHAR(35) NULL,
  RATING_DATE           DATETIME(6) NULL,
  RATING_OUTLOOK_CD     VARCHAR(35) NULL,
  FI_RATING_RATING_UUID VARCHAR(40) NULL,
  MODIFIED_DATE_TIME    DATETIME(6) NULL,
  USER_ID               VARCHAR(10) NULL,
  VERSION               INT         NULL,
  ADR_FI_RATING_RATING  DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_RATING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_RATING_A
  ON goatada_test.AGGR_C_FI_RATING_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_REGIONAL_A
(
  AGGR_C_FI_REGIONAL_PK        INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  APPLICABILITY_DATE           DATE        NULL,
  PROVIDER_CD                  VARCHAR(35) NULL,
  REGION_CD                    VARCHAR(35) NULL,
  SUBJECT_ID                   VARCHAR(10) NULL,
  DEMATDATE                    DATE        NULL,
  LSTMATCPNDATE                DATE        NULL,
  FI_REGION_DEMATDATE_UUID     VARCHAR(40) NULL,
  FI_REGION_LSTMATCPNDATE_UUID VARCHAR(40) NULL,
  MODIFIED_DATE_TIME           DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  ADR_FI_REGION_DEMATDATE      DATE        NULL,
  ADR_FI_REGION_LSTMATCPNDATE  DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_REGIONAL_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_REGIONAL_A
  ON goatada_test.AGGR_C_FI_REGIONAL_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_ROLE_FP_A
(
  AGGR_C_FI_ROLE_FP_PK INT         NOT NULL,
  REVISION_NUMBER      INT         NOT NULL,
  REVISION_TYPE        INT         NULL,
  APPLICABILITY_DATE   DATE        NULL,
  PROVIDER_CD          VARCHAR(35) NULL,
  PARTY_ID             VARCHAR(10) NULL,
  ROLE_CD              VARCHAR(35) NULL,
  SUBJECT_ID           VARCHAR(10) NULL,
  VALIDITY_CD          VARCHAR(35) NULL,
  FI_ROLE_ROLE_UUID    VARCHAR(40) NULL,
  MODIFIED_DATE_TIME   DATETIME(6) NULL,
  USER_ID              VARCHAR(10) NULL,
  VERSION              INT         NULL,
  ADR_FI_ROLE_ROLE     DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_ROLE_FP_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_ROLE_FP1_A
  ON goatada_test.AGGR_C_FI_ROLE_FP_A (PARTY_ID);

CREATE INDEX goatada_test.FK_AGGR_C_FI_ROLE_FP2_A
  ON goatada_test.AGGR_C_FI_ROLE_FP_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_SCHED_AMORT_A
(
  AGGR_C_FI_SCHED_AMORT_PK       INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SEQUENCE_NO                    INT             NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  CURRENCY_CD                    VARCHAR(35)     NULL,
  FINAL_REPAYMNT_DATE            DATE            NULL,
  FORMULA_BASED_CD               VARCHAR(35)     NULL,
  PAY_END_DATE                   DATE            NULL,
  PAYMNT_FREQUENCY_CD            VARCHAR(35)     NULL,
  PAY_START_DATE                 DATE            NULL,
  QUOTATIONTYPE_CD               VARCHAR(35)     NULL,
  TYPE_CD                        VARCHAR(35)     NULL,
  UNITQUANTITY                   VARCHAR(35)     NULL,
  VALIDITY_CD                    VARCHAR(35)     NULL,
  VALUE                          DECIMAL(30, 10) NULL,
  FI_SCHED_AMORT_AMOUNT_UUID     VARCHAR(40)     NULL,
  FI_SCHED_AMORT_FINREPDATE_UUID VARCHAR(40)     NULL,
  FI_SCHED_AMORT_FORMULA_UUID    VARCHAR(40)     NULL,
  FI_SCHED_AMORT_PAYENDDAT_UUID  VARCHAR(40)     NULL,
  FI_SCHED_AMORT_PAYFREQ_UUID    VARCHAR(40)     NULL,
  FI_SCHED_AMORT_PAYSTRTDAT_UUID VARCHAR(40)     NULL,
  FI_SCHED_AMORT_TYPE_UUID       VARCHAR(40)     NULL,
  FI_SCHED_AMORT_VALID_UUID      VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_SCHED_AMORT_AMOUNT      DATE            NULL,
  ADR_FI_SCHED_AMORT_FINREPDATE  DATE            NULL,
  ADR_FI_SCHED_AMORT_FORMULA     DATE            NULL,
  ADR_FI_SCHED_AMORT_PAYENDDAT   DATE            NULL,
  ADR_FI_SCHED_AMORT_PAYFREQ     DATE            NULL,
  ADR_FI_SCHED_AMORT_PAYSTRTDAT  DATE            NULL,
  ADR_FI_SCHED_AMORT_TYPE        DATE            NULL,
  ADR_FI_SCHED_AMORT_VALID       DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_SCHED_AMORT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_SCHED_AMORT_A
  ON goatada_test.AGGR_C_FI_SCHED_AMORT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_SCHED_CALPUT_A
(
  AGGR_C_FI_SCHED_CALPUT_PK      INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SEQUENCE_NO                    INT             NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  CURRENCY_CD                    VARCHAR(35)     NULL,
  END_DATE                       DATE            NULL,
  NOTICEENDDURATION              VARCHAR(35)     NULL,
  NOTICESTARTDURATION            VARCHAR(35)     NULL,
  QUOTATIONTYPE_CD               VARCHAR(35)     NULL,
  REASON_CD                      VARCHAR(35)     NULL,
  FREQUENCY_CD                   VARCHAR(35)     NULL,
  START_DATE                     DATE            NULL,
  TYPE_CD                        VARCHAR(35)     NULL,
  UNITQUANTITY                   VARCHAR(35)     NULL,
  VALIDITY_CD                    VARCHAR(35)     NULL,
  VALUE                          DECIMAL(30, 10) NULL,
  FI_SCHED_CALPUT_ENDDAT_UUID    VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_FREQUENCY_UUID VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_NOTENDDAT_UUID VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_NOTSTADAT_UUID VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_REASON_UUID    VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_STARTDAT_UUID  VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_TYPE_UUID      VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_VALID_UUID     VARCHAR(40)     NULL,
  FI_SCHED_CALPUT_VALUE_UUID     VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_SCHED_CALPUT_ENDDAT     DATE            NULL,
  ADR_FI_SCHED_CALPUT_FREQUENCY  DATE            NULL,
  ADR_FI_SCHED_CALPUT_NOTENDDAT  DATE            NULL,
  ADR_FI_SCHED_CALPUT_NOTSTADAT  DATE            NULL,
  ADR_FI_SCHED_CALPUT_REASON     DATE            NULL,
  ADR_FI_SCHED_CALPUT_STARTDAT   DATE            NULL,
  ADR_FI_SCHED_CALPUT_TYPE       DATE            NULL,
  ADR_FI_SCHED_CALPUT_VALID      DATE            NULL,
  ADR_FI_SCHED_CALPUT_VALUE      DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_SCHED_CALPUT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_SCHED_CALPUT_A
  ON goatada_test.AGGR_C_FI_SCHED_CALPUT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_SCHED_INCOME_A
(
  AGGR_C_FI_SCHED_INCOME_PK      INT             NOT NULL,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  APPLICABILITY_DATE             DATE            NULL,
  PROVIDER_CD                    VARCHAR(35)     NULL,
  SEQUENCE_NO                    INT             NULL,
  SUBJECT_ID                     VARCHAR(10)     NULL,
  BUSDAYCONV_CD                  VARCHAR(35)     NULL,
  CAP_RATE_PERIOD                VARCHAR(35)     NULL,
  CAP_RATE_VALUE                 DECIMAL(30, 10) NULL,
  DAYCNTCONV_CD                  VARCHAR(35)     NULL,
  ENDDATE                        DATE            NULL,
  FLOOR_RATE_PERIOD              VARCHAR(35)     NULL,
  FLOOR_RATE_VALUE               DECIMAL(30, 10) NULL,
  FORMULA_BASED_CD               VARCHAR(35)     NULL,
  INTCALADJUST_CD                VARCHAR(35)     NULL,
  INTEREST_RATE_PERIOD           VARCHAR(35)     NULL,
  INTEREST_RATE_VALUE            DECIMAL(30, 10) NULL,
  INTPERIODTYP_CD                VARCHAR(35)     NULL,
  PREPOST_CD                     VARCHAR(35)     NULL,
  REFRATE_REFERENCERATE_CD       VARCHAR(35)     NULL,
  REFRATE_SPREADVALUE            DECIMAL(30, 10) NULL,
  FIX_FREQUENCY_CD               VARCHAR(35)     NULL,
  PAYMNT_FREQUENCY_CD            VARCHAR(35)     NULL,
  STARTDATE                      DATE            NULL,
  VALIDITY_CD                    VARCHAR(35)     NULL,
  VALUE                          DECIMAL(30, 10) NULL,
  FI_SCHED_INC_BUSDAYCONV_UUID   VARCHAR(40)     NULL,
  FI_SCHED_INC_CAPRATE_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_DAYCNTCONV_UUID   VARCHAR(40)     NULL,
  FI_SCHED_INC_ENDDATE_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_FIXFREQ_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_FIXTIME_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_FLOORRATE_UUID    VARCHAR(40)     NULL,
  FI_SCHED_INC_INTCALADJUST_UUID VARCHAR(40)     NULL,
  FI_SCHED_INC_INTPERIODTYP_UUID VARCHAR(40)     NULL,
  FI_SCHED_INC_INTRATE_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_PAYFREQ_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_REFRATE_UUID      VARCHAR(40)     NULL,
  FI_SCHED_INC_STARTDATE_UUID    VARCHAR(40)     NULL,
  FI_SCHED_INC_VALID_UUID        VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT             NULL,
  ADR_FI_SCHED_INC_BUSDAYCONV    DATE            NULL,
  ADR_FI_SCHED_INC_CAPRATE       DATE            NULL,
  ADR_FI_SCHED_INC_DAYCNTCONV    DATE            NULL,
  ADR_FI_SCHED_INC_ENDDATE       DATE            NULL,
  ADR_FI_SCHED_INC_FIXFREQ       DATE            NULL,
  ADR_FI_SCHED_INC_FIXTIME       DATE            NULL,
  ADR_FI_SCHED_INC_FLOORRATE     DATE            NULL,
  ADR_FI_SCHED_INC_INTCALADJUST  DATE            NULL,
  ADR_FI_SCHED_INC_INTPERIODTYP  DATE            NULL,
  ADR_FI_SCHED_INC_INTRATE       DATE            NULL,
  ADR_FI_SCHED_INC_PAYFREQ       DATE            NULL,
  ADR_FI_SCHED_INC_REFRATE       DATE            NULL,
  ADR_FI_SCHED_INC_STARTDATE     DATE            NULL,
  ADR_FI_SCHED_INC_VALID         DATE            NULL,
  PRIMARY KEY (AGGR_C_FI_SCHED_INCOME_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FI_SCHED_INCOME_A
  ON goatada_test.AGGR_C_FI_SCHED_INCOME_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FI_STAT_A
(
  AGGR_C_FI_STAT_PK              INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  APPLICABILITY_DATE             DATE        NULL,
  PROVIDER_CD                    VARCHAR(35) NULL,
  SUBJECT_ID                     VARCHAR(10) NULL,
  CAPITALIZATION_CD              VARCHAR(35) NULL,
  EXPECTED_MAT_DATE              DATETIME(6) NULL,
  FORM_BEARER_CD                 VARCHAR(35) NULL,
  FORM_BOOKENTRY_CD              VARCHAR(35) NULL,
  FORM_REGISTERED_CD             VARCHAR(35) NULL,
  INCORPORATION_TYPE_CD          VARCHAR(35) NULL,
  LINKING_CD                     VARCHAR(35) NULL,
  PLACEMENT_CD                   VARCHAR(35) NULL,
  VOTING_RIGHTS_CD               VARCHAR(35) NULL,
  FI_DATA_CAPITALIZATION_UUID    VARCHAR(40) NULL,
  FI_DATA_EXPECTEDMATDATE_UUID   VARCHAR(40) NULL,
  FI_DATA_FORMBEARER_UUID        VARCHAR(40) NULL,
  FI_DATA_FORMBOOKENTRY_UUID     VARCHAR(40) NULL,
  FI_DATA_FORMREGISTERED_UUID    VARCHAR(40) NULL,
  FI_DATA_INCORPORATIONTYPE_UUID VARCHAR(40) NULL,
  FI_DATA_LINKING_UUID           VARCHAR(40) NULL,
  FI_DATA_PLACEMENT_UUID         VARCHAR(40) NULL,
  FI_DATA_VOTINGRIGHTS_UUID      VARCHAR(40) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  ADR_FI_DATA_CAPITALIZATION     DATE        NULL,
  ADR_FI_DATA_EXPECTEDMATDATE    DATE        NULL,
  ADR_FI_DATA_FORMBEARER         DATE        NULL,
  ADR_FI_DATA_FORMBOOKENTRY      DATE        NULL,
  ADR_FI_DATA_FORMREGISTERED     DATE        NULL,
  ADR_FI_DATA_INCORPORATIONTYPE  DATE        NULL,
  ADR_FI_DATA_LINKING            DATE        NULL,
  ADR_FI_DATA_PLACEMENT          DATE        NULL,
  ADR_FI_DATA_VOTINGRIGHTS       DATE        NULL,
  LISTINFO_CD                    VARCHAR(35) NULL,
  FI_DATA_LISTINFO_UUID          VARCHAR(40) NULL,
  ADR_FI_DATA_LISTINFO           DATE        NULL,
  PRIMARY KEY (AGGR_C_FI_STAT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_C_FI_STAT_IDX1_A
  ON goatada_test.AGGR_C_FI_STAT_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_CLASSIFY_A
(
  AGGR_C_FP_CLASSIFY_PK  INT         NOT NULL,
  REVISION_NUMBER        INT         NOT NULL,
  REVISION_TYPE          INT         NULL,
  APPLICABILITY_DATE     DATE        NULL,
  PROVIDER_CD            VARCHAR(35) NULL,
  CLASSIFICATION_TYPE_CD VARCHAR(35) NULL,
  SUBJECT_ID             VARCHAR(10) NULL,
  CLASSIFICATION_CD      VARCHAR(35) NULL,
  UUID                   VARCHAR(40) NULL,
  MODIFIED_DATE_TIME     DATETIME(6) NULL,
  USER_ID                VARCHAR(10) NULL,
  VERSION                INT         NULL,
  ADR                    DATE        NULL,
  PRIMARY KEY (AGGR_C_FP_CLASSIFY_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_CLASSIFY_A
  ON goatada_test.AGGR_C_FP_CLASSIFY_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_FP_RELATION_A
(
  AGGR_C_FP_FP_RELATION_PK INT         NOT NULL,
  REVISION_NUMBER          INT         NOT NULL,
  REVISION_TYPE            INT         NULL,
  APPLICABILITY_DATE       DATE        NULL,
  PROVIDER_CD              VARCHAR(35) NULL,
  RELATED_PARTY_ID         VARCHAR(10) NULL,
  RELATION_TYPE_CD         VARCHAR(35) NULL,
  SUBJECT_ID               VARCHAR(10) NULL,
  RELATION_VALID_CD        VARCHAR(35) NULL,
  FP_FP_REL_VALID_UUID     VARCHAR(40) NULL,
  MODIFIED_DATE_TIME       DATETIME(6) NULL,
  USER_ID                  VARCHAR(10) NULL,
  VERSION                  INT         NULL,
  ADR_FP_FP_REL_VALID      DATE        NULL,
  PRIMARY KEY (AGGR_C_FP_FP_RELATION_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_FP_RELATION2_A
  ON goatada_test.AGGR_C_FP_FP_RELATION_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_MEETING_A
(
  AGGR_C_FP_MEETING_PK    INT           NOT NULL,
  REVISION_NUMBER         INT           NOT NULL,
  REVISION_TYPE           INT           NULL,
  APPLICABILITY_DATE      DATE          NULL,
  PROVIDER_CD             VARCHAR(35)   NULL,
  MEETING_DATE            DATE          NULL,
  MEETING_TYPE_CD         VARCHAR(35)   NULL,
  SUBJECT_ID              VARCHAR(10)   NULL,
  COMMENTS                VARCHAR(1000) NULL,
  VALIDITY_CD             VARCHAR(35)   NULL,
  FP_MEETING_COMMENT_UUID VARCHAR(40)   NULL,
  FP_MEETING_VALID_UUID   VARCHAR(40)   NULL,
  MODIFIED_DATE_TIME      DATETIME(6)   NULL,
  USER_ID                 VARCHAR(10)   NULL,
  VERSION                 INT           NULL,
  ADR_FP_MEETING_COMMENT  DATE          NULL,
  ADR_FP_MEETING_VALID    DATE          NULL,
  PRIMARY KEY (AGGR_C_FP_MEETING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_MEETING_A
  ON goatada_test.AGGR_C_FP_MEETING_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_NAME_A
(
  AGGR_C_FP_NAME_PK  INT          NOT NULL,
  REVISION_NUMBER    INT          NOT NULL,
  REVISION_TYPE      INT          NULL,
  APPLICABILITY_DATE DATE         NULL,
  PROVIDER_CD        VARCHAR(35)  NULL,
  LANGUAGE_CD        VARCHAR(35)  NULL,
  SUBJECT_ID         VARCHAR(10)  NULL,
  PARTY_LONG_NAME    VARCHAR(250) NULL,
  PARTY_SHORT_NAME   VARCHAR(35)  NULL,
  FP_NAME_LONG_UUID  VARCHAR(40)  NULL,
  FP_NAME_SHORT_UUID VARCHAR(40)  NULL,
  MODIFIED_DATE_TIME DATETIME(6)  NULL,
  USER_ID            VARCHAR(10)  NULL,
  VERSION            INT          NULL,
  ADR_FP_NAME_LONG   DATE         NULL,
  ADR_FP_NAME_SHORT  DATE         NULL,
  PRIMARY KEY (AGGR_C_FP_NAME_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_NAME_A
  ON goatada_test.AGGR_C_FP_NAME_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_PARTY_A
(
  AGGR_C_FP_PARTY_PK             INT          NOT NULL,
  REVISION_NUMBER                INT          NOT NULL,
  REVISION_TYPE                  INT          NULL,
  APPLICABILITY_DATE             DATE         NULL,
  PROVIDER_CD                    VARCHAR(35)  NULL,
  SUBJECT_ID                     VARCHAR(10)  NULL,
  ADDRESS_CITY                   VARCHAR(250) NULL,
  ADDRESS_COUNTRY_CD             VARCHAR(35)  NULL,
  ADDRESS_POSTAL_CD              VARCHAR(35)  NULL,
  ADDRESS_STATE_CD               VARCHAR(35)  NULL,
  ADDRESS_STREET                 VARCHAR(250) NULL,
  DEFAULT_LONG_NAME              VARCHAR(250) NULL,
  DEFAULT_SHORT_NAME             VARCHAR(100) NULL,
  FIN_STATEMENT_CURRENCY_CD      VARCHAR(35)  NULL,
  FIN_YEAR_END_DATE              DATETIME(6)  NULL,
  FUNCTIONAL_STATUS_CD           VARCHAR(35)  NULL,
  INC_COUNTRY_CD                 VARCHAR(35)  NULL,
  LAST_FIN_YEAR_END_DAY          DATE         NULL,
  LEGAL_FORM_CD                  VARCHAR(35)  NULL,
  PARTY_TYPE_CD                  VARCHAR(35)  NULL,
  REGISTRATION_DATE              DATETIME(6)  NULL,
  REGISTRATION_DELETION_DATE     DATETIME(6)  NULL,
  URL_DESC                       VARCHAR(250) NULL,
  FP_DATA_ADDRESS_LEGAL_UUID     VARCHAR(40)  NULL,
  FP_DATA_COUNTRY_INC_UUID       VARCHAR(40)  NULL,
  FP_DATA_DFTLGNAM_UUID          VARCHAR(40)  NULL,
  FP_DATA_DFTSHRTNAM_UUID        VARCHAR(40)  NULL,
  FP_DATA_FINANCIALCURRENCY_UUID VARCHAR(40)  NULL,
  FP_DATA_FINYEAREND_UUID        VARCHAR(40)  NULL,
  FP_DATA_FUNCTIONALSTATUS_UUID  VARCHAR(40)  NULL,
  FP_DATA_LASTFINYEARENDDAY_UUID VARCHAR(40)  NULL,
  FP_DATA_LEGALFORM_UUID         VARCHAR(40)  NULL,
  FP_DATA_PARTYTYPE_UUID         VARCHAR(40)  NULL,
  FP_DATA_REGISTRDEL_DATE_UUID   VARCHAR(40)  NULL,
  FP_DATA_REGISTR_DATE_UUID      VARCHAR(40)  NULL,
  FP_DATA_URL_UUID               VARCHAR(40)  NULL,
  MODIFIED_DATE_TIME             DATETIME(6)  NULL,
  USER_ID                        VARCHAR(10)  NULL,
  VERSION                        INT          NULL,
  ADR_FP_DATA_ADDRESS_LEGAL      DATE         NULL,
  ADR_FP_DATA_COUNTRY_INC        DATE         NULL,
  ADR_FP_DATA_DFTLGNAM           DATE         NULL,
  ADR_FP_DATA_DFTSHRTNAM         DATE         NULL,
  ADR_FP_DATA_FINANCIALCURRENCY  DATE         NULL,
  ADR_FP_DATA_FINYEAREND         DATE         NULL,
  ADR_FP_DATA_FUNCTIONALSTATUS   DATE         NULL,
  ADR_FP_DATA_LASTFINYEARENDDAY  DATE         NULL,
  ADR_FP_DATA_LEGALFORM          DATE         NULL,
  ADR_FP_DATA_PARTYTYPE          DATE         NULL,
  ADR_FP_DATA_REGISTRDEL_DATE    DATE         NULL,
  ADR_FP_DATA_REGISTR_DATE       DATE         NULL,
  ADR_FP_DATA_URL                DATE         NULL,
  PRIMARY KEY (AGGR_C_FP_PARTY_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_PARTY_A
  ON goatada_test.AGGR_C_FP_PARTY_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_FP_RATING_A
(
  AGGR_C_FP_RATING_PK   INT         NOT NULL,
  REVISION_NUMBER       INT         NOT NULL,
  REVISION_TYPE         INT         NULL,
  APPLICABILITY_DATE    DATE        NULL,
  PROVIDER_CD           VARCHAR(35) NULL,
  RATING_PROVIDER_CD    VARCHAR(35) NULL,
  RATING_TYPE_CD        VARCHAR(35) NULL,
  SUBJECT_ID            VARCHAR(10) NULL,
  RATING_ACTION_CD      VARCHAR(35) NULL,
  RATING_CD             VARCHAR(35) NULL,
  RATING_DATE           DATETIME(6) NULL,
  RATING_OUTLOOK_CD     VARCHAR(35) NULL,
  FP_RATING_RATING_UUID VARCHAR(40) NULL,
  MODIFIED_DATE_TIME    DATETIME(6) NULL,
  USER_ID               VARCHAR(10) NULL,
  VERSION               INT         NULL,
  ADR_FP_RATING_RATING  DATE        NULL,
  PRIMARY KEY (AGGR_C_FP_RATING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_C_FP_RATING_A
  ON goatada_test.AGGR_C_FP_RATING_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_INSTR_A
(
  AGGR_C_INSTR_PK               INT             NOT NULL,
  REVISION_NUMBER               INT             NOT NULL,
  REVISION_TYPE                 INT             NULL,
  SUBJECT_ID                    VARCHAR(10)     NULL,
  APPLICABILITY_DATE            DATE            NULL,
  PROVIDER_CD                   VARCHAR(35)     NULL,
  ASSET_CLASS_CD                VARCHAR(35)     NULL,
  ASSET_SUBCLASS_CD             VARCHAR(35)     NULL,
  INSTRUMENT_CLASSIFICATION_CD  VARCHAR(35)     NULL,
  COUPON_FREQUENCY_CD           VARCHAR(35)     NULL,
  COUPON_LINKED_CD              VARCHAR(35)     NULL,
  INFLATION_CODE_COUPON_CD      VARCHAR(35)     NULL,
  CURRENT_COUPON_RATE           DECIMAL(20, 10) NULL,
  NOMINAL_CURRENCY_CD           VARCHAR(35)     NULL,
  CROSS_CURRENCY_CD             VARCHAR(35)     NULL,
  DAY_COUNT_CONVENTION_CD       VARCHAR(35)     NULL,
  DEFAULT_QUOTATION_TYPE_CD     VARCHAR(35)     NULL,
  STANDARD_UNIT_QUANTITY        DECIMAL(20, 10) NULL,
  INFLATION_CODE_REDEMPTION_CD  VARCHAR(35)     NULL,
  REDEMPTION_LINKED_CD          VARCHAR(35)     NULL,
  MATURITY_DATE                 DATE            NULL,
  STRIKE_TYPE_CD                VARCHAR(35)     NULL,
  STRIKE_VALUE                  DECIMAL(20, 10) NULL,
  TERM_CD                       VARCHAR(35)     NULL,
  UNDERLYING_COLLATERAL_CD      VARCHAR(35)     NULL,
  UNDERLYING_TERM_CD            VARCHAR(35)     NULL,
  BUSINESS_DAY_RULE_CD          VARCHAR(35)     NULL,
  FI_FUNCTIONAL_STATUS_CD       VARCHAR(35)     NULL,
  CLASSF_UUID                   VARCHAR(40)     NULL,
  CPNFREQ_UUID                  VARCHAR(40)     NULL,
  CPNINFO_UUID                  VARCHAR(40)     NULL,
  CURCPNRAT_UUID                VARCHAR(40)     NULL,
  NOMCURR_UUID                  VARCHAR(40)     NULL,
  XCURR_UUID                    VARCHAR(40)     NULL,
  DAYCNTCONV_UUID               VARCHAR(40)     NULL,
  QUOINFO_UUID                  VARCHAR(40)     NULL,
  REDEMINFO_UUID                VARCHAR(40)     NULL,
  MATDAT_UUID                   VARCHAR(40)     NULL,
  STRIKE_UUID                   VARCHAR(40)     NULL,
  TERM_UUID                     VARCHAR(40)     NULL,
  UNDCOLL_UUID                  VARCHAR(40)     NULL,
  UNDTERM_UUID                  VARCHAR(40)     NULL,
  BUSDAYRULE_UUID               VARCHAR(40)     NULL,
  FI_DATA_FUNCTIONALSTATUS_UUID VARCHAR(40)     NULL,
  MODIFIED_DATE_TIME            DATETIME(6)     NULL,
  USER_ID                       VARCHAR(10)     NULL,
  VERSION                       INT             NULL,
  FI_DATA_CFIVALUE              VARCHAR(6)      NULL,
  FI_DATA_CFIVALUE_UUID         VARCHAR(40)     NULL,
  ADR_BUSDAYRULE                DATE            NULL,
  ADR_CLASSF                    DATE            NULL,
  ADR_CPNFREQ                   DATE            NULL,
  ADR_CPNINFO                   DATE            NULL,
  ADR_CURCPNRAT                 DATE            NULL,
  ADR_DAYCNTCONV                DATE            NULL,
  ADR_FI_DATA_CFIVALUE          DATE            NULL,
  ADR_FI_DATA_FUNCTIONALSTATUS  DATE            NULL,
  ADR_MATDAT                    DATE            NULL,
  ADR_NOMCURR                   DATE            NULL,
  ADR_QUOINFO                   DATE            NULL,
  ADR_REDEMINFO                 DATE            NULL,
  ADR_STRIKE                    DATE            NULL,
  ADR_TERM                      DATE            NULL,
  ADR_UNDCOLL                   DATE            NULL,
  ADR_UNDTERM                   DATE            NULL,
  ADR_XCURR                     DATE            NULL,
  FI_DATA_KBC_INSTR_CD          VARCHAR(35)     NULL,
  FI_DATA_KBC_INSTR_FLAG_UUID   VARCHAR(40)     NULL,
  ADR_FI_DATA_KBC_INSTR_FLAG    DATE            NULL,
  PRIMARY KEY (AGGR_C_INSTR_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.IDX_AGGR_C_APP_DATE_A
  ON goatada_test.AGGR_C_INSTR_A (APPLICABILITY_DATE);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PROV_CD_A
  ON goatada_test.AGGR_C_INSTR_A (PROVIDER_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_SUBJECT_A
  ON goatada_test.AGGR_C_INSTR_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_INSTR_NAME_A
(
  AGGR_C_INSTR_NAME_PK  INT          NOT NULL,
  REVISION_NUMBER       INT          NOT NULL,
  REVISION_TYPE         INT          NULL,
  SUBJECT_ID            VARCHAR(10)  NULL,
  PROVIDER_CD           VARCHAR(35)  NULL,
  APPLICABILITY_DATE    DATE         NULL,
  LANGUAGE_CD           VARCHAR(35)  NULL,
  INSTRUMENT_SHORT_NAME VARCHAR(100) NULL,
  INSTRUMENT_LONG_NAME  VARCHAR(250) NULL,
  INSTRLGNAM_UUID       VARCHAR(40)  NULL,
  FI_NAME_SHORT_UUID    VARCHAR(40)  NULL,
  MODIFIED_DATE_TIME    DATETIME(6)  NULL,
  USER_ID               VARCHAR(10)  NULL,
  VERSION               INT          NULL,
  ADR_FI_NAME_SHORT     DATE         NULL,
  ADR_INSTRLGNAM        DATE         NULL,
  PRIMARY KEY (AGGR_C_INSTR_NAME_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_NAME_SUBJ_A
  ON goatada_test.AGGR_C_INSTR_NAME_A (SUBJECT_ID);

CREATE TABLE goatada_test.AGGR_C_INSTR_PRICE_A
(
  AGGR_C_INSTR_PRICE_PK    INT             NOT NULL,
  REVISION_NUMBER          INT             NOT NULL,
  REVISION_TYPE            INT             NULL,
  SUBJECT_ID               VARCHAR(10)     NULL,
  APPLICABILITY_DATE       DATE            NULL,
  PROVIDER_CD              VARCHAR(35)     NULL,
  CURRENCY_CD              VARCHAR(35)     NULL,
  FDE2_PRICING_ENTITY_CD   VARCHAR(35)     NULL,
  QUOTE_TYPE_CD            VARCHAR(35)     NULL,
  SNAP_CD                  VARCHAR(35)     NULL,
  VALUE                    DECIMAL(20, 10) NULL,
  PRICE_TYPE_CD            VARCHAR(30)     NULL,
  NORMALIZED_PRICE_UUID    VARCHAR(40)     NULL,
  UUID                     VARCHAR(40)     NULL,
  QUOTATION_TYPE_CD        VARCHAR(35)     NULL,
  INFLATION_FACTOR         DECIMAL(20, 10) NULL,
  PROVIDER_PRICE_SOURCE_CD VARCHAR(250)    NULL,
  VALUE_DATE               DATE            NULL,
  VALUE_TIME               DECIMAL(38)     NULL,
  VALUE_TIMEZONE_OFFSET    DECIMAL(12, 2)  NULL,
  MODIFIED_DATE_TIME       DATETIME(6)     NULL,
  USER_ID                  VARCHAR(10)     NULL,
  VERSION                  INT             NULL,
  ADR                      DATE            NULL,
  PRIMARY KEY (AGGR_C_INSTR_PRICE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_C_INSTR_PRICE_TYPE_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (PRICE_TYPE_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_APP_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (APPLICABILITY_DATE);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_CURR_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (CURRENCY_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_ENT_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (FDE2_PRICING_ENTITY_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_PROV_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (PROVIDER_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_SNAP_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (SNAP_CD);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_PRICE_SUBJ_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (SUBJECT_ID);

CREATE INDEX goatada_test.IDX_AGGR_C_INSTR_QUOT_A
  ON goatada_test.AGGR_C_INSTR_PRICE_A (QUOTE_TYPE_CD);

CREATE TABLE goatada_test.AGGR_DYNEL_ELEMENT_DEPENDENCY
(
  ELEMENT_DEPENDENCY_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  RUN_PK                INT             NOT NULL,
  ELEMENT_SOURCE_CODE   VARCHAR(30)     NOT NULL,
  ELEMENT_UUID          VARCHAR(36)     NOT NULL,
  VERSION               INT DEFAULT '0' NOT NULL
);

-- CREATE INDEX goatada_test.FK_AGGR_DYNEL_ELEM_DEPENDENCY
--	on goatada_test.AGGR_DYNEL_ELEMENT_DEPENDENCY (RUN_PK)
-- ;

CREATE TABLE goatada_test.AGGR_DYNEL_LOGGING
(
  LOGGING_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  RUN_PK             INT             NOT NULL,
  LOGGING_LEVEL_CODE VARCHAR(30)     NOT NULL,
  LOGGING_MESSAGE    VARCHAR(1000)   NULL,
  SOURCE             VARCHAR(6)      NOT NULL,
  VERSION            INT DEFAULT '0' NOT NULL
);

-- CREATE INDEX goatada_test.FK_AGGR_DYNEL_LOGGING
--	on goatada_test.AGGR_DYNEL_LOGGING (RUN_PK)
-- ;

CREATE TABLE goatada_test.AGGR_DYNEL_RESULT
(
  RESULT_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  RUN_PK               INT             NOT NULL,
  GENERATED_ELEMENT_ID VARCHAR(36)     NOT NULL,
  VERSION              INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FK_AGGR_DYNEL_RESULT
  ON goatada_test.AGGR_DYNEL_RESULT (RUN_PK);

CREATE TABLE goatada_test.AGGR_DYNEL_STATUS
(
  RUN_PK                  INT AUTO_INCREMENT
    PRIMARY KEY,
  STATUS_CODE             VARCHAR(30)     NOT NULL,
  DEFINITION_ID           INT             NOT NULL,
  PROCESS_START_DATE_TIME BIGINT          NOT NULL,
  PROCESS_END_DATE_TIME   BIGINT          NULL,
  ELEMENT_TYPE            VARCHAR(30)     NOT NULL,
  SUBJECT_ID              VARCHAR(15)     NOT NULL,
  SCRIPT_NAME             VARCHAR(200)    NOT NULL,
  VERSION                 INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.AGGR_DYNEL_STATUS_IDX1
  ON goatada_test.AGGR_DYNEL_STATUS (SUBJECT_ID, PROCESS_START_DATE_TIME);

CREATE INDEX goatada_test.AGGR_DYNEL_STATUS_IDX2
  ON goatada_test.AGGR_DYNEL_STATUS (DEFINITION_ID, PROCESS_START_DATE_TIME);

-- ALTER TABLE AGGR_DYNEL_ELEMENT_DEPENDENCY
--	add constraint goatada_test.FK_AGGR_DYNEL_ELEM_DEPENDENCY
--		foreign key (RUN_PK) references goatada_test.AGGR_DYNEL_STATUS (RUN_PK)
-- ;

-- ALTER TABLE AGGR_DYNEL_LOGGING
--	add constraint goatada_test.FK_AGGR_DYNEL_LOGGING
--		foreign key (RUN_PK) references goatada_test.AGGR_DYNEL_STATUS (RUN_PK)
-- ;

-- ALTER TABLE AGGR_DYNEL_RESULT
--	add constraint goatada_test.FK_AGGR_DYNEL_RESULT
--		foreign key (RUN_PK) references goatada_test.AGGR_DYNEL_STATUS (RUN_PK)
-- ;

CREATE TABLE goatada_test.AGGR_MANUAL_PROCESS_LOG
(
  AGGR_MANUAL_PROCESS_LOG_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  PROCESS_NAME               VARCHAR(1000) NOT NULL,
  OLD_DATA                   VARCHAR(1000) NOT NULL,
  NEW_DATA                   VARCHAR(1000) NOT NULL,
  RUN_DATE_TIME              DATETIME(6)   NOT NULL,
  USER_ID                    VARCHAR(10)   NOT NULL
);

CREATE TABLE goatada_test.AGGR_MANUAL_PROCESS_LOG_A
(
  AGGR_MANUAL_PROCESS_LOG_PK INT           NOT NULL,
  PROCESS_NAME               VARCHAR(1000) NULL,
  OLD_DATA                   VARCHAR(1000) NULL,
  NEW_DATA                   VARCHAR(1000) NULL,
  RUN_DATE_TIME              DATETIME(6)   NULL,
  USER_ID                    VARCHAR(10)   NULL,
  REVISION_NUMBER            INT           NOT NULL,
  REVISION_TYPE              INT           NULL,
  PRIMARY KEY (AGGR_MANUAL_PROCESS_LOG_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.AGGR_NORM_CORR_MAPPING
(
  AGGR_NORM_CORR_MAPPING_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  NORMALIZED_UID            VARCHAR(40)     NOT NULL,
  CORRECTED_UID             VARCHAR(40)     NOT NULL,
  SELECTED                  INT DEFAULT '0' NOT NULL,
  VERSION                   INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.AGGR_NORM_CORR_MAPPING_COR_IDX
  ON goatada_test.AGGR_NORM_CORR_MAPPING (CORRECTED_UID);

CREATE INDEX goatada_test.AGGR_NORM_CORR_MAPPING_NOR_IDX
  ON goatada_test.AGGR_NORM_CORR_MAPPING (NORMALIZED_UID);

CREATE TABLE goatada_test.AGGR_PRICESOURCE_PREF
(
  PRICESOURCE_PREF_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  PRICESOURCE_ID                 VARCHAR(30)            NOT NULL,
  PRICESOURCE_CODE_LIST          VARCHAR(30)            NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)            NULL,
  PRIORITY                       INT                    NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)            NOT NULL,
  USER_ID                        VARCHAR(10)            NOT NULL,
  VERSION                        INT DEFAULT '0'        NOT NULL,
  TEST_DATA                      VARCHAR(1) DEFAULT 'N' NOT NULL
);

CREATE INDEX goatada_test.AGGR_PRICESOURCE_PREF_IDX1
  ON goatada_test.AGGR_PRICESOURCE_PREF (PRICESOURCE_ID, PRICESOURCE_CODE_LIST);

CREATE INDEX goatada_test.AGGR_PRICESOURCE_PREF_IDX2
  ON goatada_test.AGGR_PRICESOURCE_PREF (PRICESOURCE_CODE_LIST);

CREATE TABLE goatada_test.AGGR_PRICESOURCE_PREF_A
(
  PRICESOURCE_PREF_PK            INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  PRICESOURCE_ID                 VARCHAR(30) NULL,
  PRICESOURCE_TYPE               VARCHAR(30) NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  PRIORITY                       INT         NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRICESOURCE_CODE_LIST          VARCHAR(30) NOT NULL,
  PRIMARY KEY (PRICESOURCE_PREF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_PRICESOURCE_PREF_IDX1_A
  ON goatada_test.AGGR_PRICESOURCE_PREF_A (PRICESOURCE_ID, PRICESOURCE_TYPE);

CREATE INDEX goatada_test.AGGR_PRICESOURCE_PREF_IDX2_A
  ON goatada_test.AGGR_PRICESOURCE_PREF_A (PRICESOURCE_TYPE);

CREATE TABLE goatada_test.AGGR_UPDRL_SET_ELEMENT
(
  AGGR_UPDRL_SET_ELEMENT_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK        INT                    NOT NULL,
  VALIDATION_STATUS         VARCHAR(20)            NOT NULL,
  UPDATE_PROPERTY_NAME      VARCHAR(50)            NOT NULL,
  UPDATE_PROPERTY_VALUE     VARCHAR(50)            NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)            NOT NULL,
  USER_ID                   VARCHAR(10)            NOT NULL,
  VERSION                   INT DEFAULT '0'        NOT NULL,
  TEST_DATA                 VARCHAR(1) DEFAULT 'N' NOT NULL
);

CREATE INDEX goatada_test.FK_AGGR_UPDRL_SET_ELEMENT
  ON goatada_test.AGGR_UPDRL_SET_ELEMENT (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_UPDRL_SET_ELEMENT_A
(
  AGGR_UPDRL_SET_ELEMENT_PK INT         NOT NULL,
  REVISION_NUMBER           INT         NOT NULL,
  REVISION_TYPE             INT         NULL,
  VALIDATION_RULE_PK        INT         NULL,
  VALIDATION_STATUS         VARCHAR(20) NULL,
  UPDATE_PROPERTY_NAME      VARCHAR(50) NULL,
  UPDATE_PROPERTY_VALUE     VARCHAR(50) NULL,
  MODIFIED_DATE_TIME        DATETIME(6) NULL,
  USER_ID                   VARCHAR(10) NULL,
  VERSION                   INT         NULL,
  PRIMARY KEY (AGGR_UPDRL_SET_ELEMENT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_UPDRL_SET_ELEMENT_A
  ON goatada_test.AGGR_UPDRL_SET_ELEMENT_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_UPDRL_SRCH_CRIT
(
  AGGR_UPDRL_SRCH_CRIT_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK      INT                    NOT NULL,
  VALIDATION_STATUS       VARCHAR(20)            NOT NULL,
  READ_PROPERTY_NAME      VARCHAR(50)            NOT NULL,
  WRITE_PROPERTY_NAME     VARCHAR(50)            NOT NULL,
  QUERY_SRC               VARCHAR(30)            NOT NULL,
  ELEMENT_QUERY           VARCHAR(2000)          NOT NULL,
  MODIFIED_DATE_TIME      DATETIME(6)            NOT NULL,
  USER_ID                 VARCHAR(10)            NOT NULL,
  VERSION                 INT DEFAULT '0'        NOT NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N' NOT NULL
);

CREATE INDEX goatada_test.FK_AGGR_UPDRL_SRCH_CRIT
  ON goatada_test.AGGR_UPDRL_SRCH_CRIT (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_UPDRL_SRCH_CRIT_A
(
  AGGR_UPDRL_SRCH_CRIT_PK INT           NOT NULL,
  REVISION_NUMBER         INT           NOT NULL,
  REVISION_TYPE           INT           NULL,
  VALIDATION_RULE_PK      INT           NULL,
  VALIDATION_STATUS       VARCHAR(20)   NULL,
  READ_PROPERTY_NAME      VARCHAR(50)   NULL,
  WRITE_PROPERTY_NAME     VARCHAR(50)   NULL,
  QUERY_SRC               VARCHAR(30)   NULL,
  ELEMENT_QUERY           VARCHAR(2000) NULL,
  MODIFIED_DATE_TIME      DATETIME(6)   NULL,
  USER_ID                 VARCHAR(10)   NULL,
  VERSION                 INT           NULL,
  PRIMARY KEY (AGGR_UPDRL_SRCH_CRIT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_UPDRL_SRCH_CRIT_A
  ON goatada_test.AGGR_UPDRL_SRCH_CRIT_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALIDATION_RULE
(
  VALIDATION_RULE_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_ID                 VARCHAR(10)                  NOT NULL,
  VALIDATION_NAME               VARCHAR(250)                 NOT NULL,
  VALIDATION_DESC               VARCHAR(4000)                NOT NULL,
  DATA_PROVIDER_FILTER_FLAG     TINYINT                      NOT NULL,
  VALIDATION_GROUP_CD           VARCHAR(30)                  NULL,
  VALIDATION_METHOD_CD          VARCHAR(30)                  NOT NULL,
  VALIDATED_PROPERTY_NAME       VARCHAR(200)                 NULL,
  LOGICAL_OPERATOR_CD           VARCHAR(30)                  NULL,
  COMPARED_PROPERTY_NAME        VARCHAR(200)                 NULL,
  COMPARED_ELEMENT_LOCATION_CD  VARCHAR(30)                  NULL,
  COMPARED_ELEMENT_SEARCH_QUERY VARCHAR(2000)                NULL,
  RULE_SEVERITY                 DECIMAL(9)                   NULL,
  FAIL_CONTINUATION_RULE        VARCHAR(30)                  NOT NULL,
  NE_MAX_RETRY                  INT                          NOT NULL,
  FAIL_MAX_RETRY                INT                          NOT NULL,
  NE_CONTINUATION_RULE          VARCHAR(30)                  NOT NULL,
  DELETED_FLAG                  TINYINT DEFAULT '1'          NOT NULL,
  MODIFIED_DATE_TIME            DATETIME(6)                  NOT NULL,
  USER_ID                       VARCHAR(10)                  NOT NULL,
  VERSION                       INT DEFAULT '0'              NOT NULL,
  FAIL_NOTIFICATION_RULE        VARCHAR(35) DEFAULT 'NO_LOG' NOT NULL,
  NE_NOTIFICATION_RULE          VARCHAR(35) DEFAULT 'NO_LOG' NOT NULL,
  TEST_DATA                     VARCHAR(1) DEFAULT 'N'       NOT NULL
);

CREATE INDEX goatada_test.AGGR_VALIDATION_RULE_IDX1
  ON goatada_test.AGGR_VALIDATION_RULE (VALIDATION_ID);

ALTER TABLE goatada_test.AGGR_UPDRL_SET_ELEMENT
  ADD CONSTRAINT goatada_test.FK_AGGR_UPDRL_SET_ELEMENT
FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK);

ALTER TABLE goatada_test.AGGR_UPDRL_SRCH_CRIT
  ADD CONSTRAINT goatada_test.FK_AGGR_UPDRL_SRCH_CRIT
FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALIDATION_RULE_A
(
  VALIDATION_RULE_PK            INT                          NOT NULL,
  REVISION_NUMBER               INT                          NOT NULL,
  REVISION_TYPE                 INT                          NULL,
  VALIDATION_ID                 VARCHAR(10)                  NULL,
  VALIDATION_NAME               VARCHAR(250)                 NULL,
  VALIDATION_DESC               VARCHAR(4000)                NULL,
  DATA_PROVIDER_FILTER_FLAG     INT                          NULL,
  VALIDATION_GROUP_CD           VARCHAR(30)                  NULL,
  VALIDATION_METHOD_CD          VARCHAR(30)                  NULL,
  VALIDATED_PROPERTY_NAME       VARCHAR(200)                 NULL,
  LOGICAL_OPERATOR_CD           VARCHAR(30)                  NULL,
  COMPARED_PROPERTY_NAME        VARCHAR(200)                 NULL,
  COMPARED_ELEMENT_LOCATION_CD  VARCHAR(30)                  NULL,
  COMPARED_ELEMENT_SEARCH_QUERY VARCHAR(2000)                NULL,
  RULE_SEVERITY                 DECIMAL(9)                   NULL,
  FAIL_CONTINUATION_RULE        VARCHAR(30)                  NULL,
  NE_MAX_RETRY                  INT                          NULL,
  FAIL_MAX_RETRY                INT                          NULL,
  NE_CONTINUATION_RULE          VARCHAR(30)                  NULL,
  DELETED_FLAG                  INT                          NULL,
  MODIFIED_DATE_TIME            DATETIME(6)                  NULL,
  USER_ID                       VARCHAR(10)                  NULL,
  VERSION                       INT                          NULL,
  FAIL_NOTIFICATION_RULE        VARCHAR(35) DEFAULT 'NO_LOG' NOT NULL,
  NE_NOTIFICATION_RULE          VARCHAR(35) DEFAULT 'NO_LOG' NOT NULL,
  PRIMARY KEY (VALIDATION_RULE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_VALIDATION_RULE_IDX1_A
  ON goatada_test.AGGR_VALIDATION_RULE_A (VALIDATION_ID);

CREATE TABLE goatada_test.AGGR_VALIDATION_RULE_PARAM
(
  VALIDATION_RULE_PARAMETER_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK           INT                    NOT NULL,
  PARAMETER                    VARCHAR(250)           NOT NULL,
  VALUE                        VARCHAR(2000)          NOT NULL,
  MODIFIED_DATE_TIME           DATETIME(6)            NOT NULL,
  USER_ID                      VARCHAR(10)            NOT NULL,
  VERSION                      INT DEFAULT '0'        NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_AGGR_VALIDATION_RULE_PARAM
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.AGGR_VALIDATION_RULE_PARAM_IDX
  ON goatada_test.AGGR_VALIDATION_RULE_PARAM (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALIDATION_RULE_PARAM_A
(
  VALIDATION_RULE_PARAMETER_PK INT           NOT NULL,
  REVISION_NUMBER              INT           NOT NULL,
  REVISION_TYPE                INT           NULL,
  VALIDATION_RULE_PK           INT           NULL,
  PARAMETER                    VARCHAR(250)  NULL,
  VALUE                        VARCHAR(2000) NULL,
  MODIFIED_DATE_TIME           DATETIME(6)   NULL,
  USER_ID                      VARCHAR(10)   NULL,
  VERSION                      INT           NULL,
  PRIMARY KEY (VALIDATION_RULE_PARAMETER_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_AGGR_VALIDATION_RULE_P_A
  ON goatada_test.AGGR_VALIDATION_RULE_PARAM_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE
(
  AGGR_VALID_DATAPRVDR_BRIDGE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK             INT                    NOT NULL,
  DATA_PROVIDER_CD               VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)            NOT NULL,
  USER_ID                        VARCHAR(10)            NOT NULL,
  VERSION                        INT DEFAULT '0'        NOT NULL,
  TEST_DATA                      VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_AGGR_VALID_DATAPRVDR_BRIDGE
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.AGGR_VALID_DATAPRVDR_BRIDG_IDX
  ON goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE (DATA_PROVIDER_CD);

CREATE INDEX goatada_test.FK_AGGR_VALID_DATAPRVDR_BRIDGE
  ON goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE_A
(
  AGGR_VALID_DATAPRVDR_BRIDGE_PK INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  VALIDATION_RULE_PK             INT         NULL,
  DATA_PROVIDER_CD               VARCHAR(30) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (AGGR_VALID_DATAPRVDR_BRIDGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_V_DATAPRVDR_B_IDX_A
  ON goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE_A (DATA_PROVIDER_CD);

CREATE INDEX goatada_test.FK_AGGR_V_DATAPRVDR_B_A
  ON goatada_test.AGGR_VALID_DATAPRVDR_BRIDGE_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE
(
  AGGR_VALID_ELEM_TAG_BRIDGE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK            INT                    NOT NULL,
  ELEMENT_TAG_CD                VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME            DATETIME(6)            NOT NULL,
  USER_ID                       VARCHAR(10)            NOT NULL,
  VERSION                       INT DEFAULT '0'        NOT NULL,
  TEST_DATA                     VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_AGGR_VALID_ELEM_TAG_BRIDGE
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE_IDX
  ON goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE (ELEMENT_TAG_CD);

CREATE INDEX goatada_test.FK_AGGR_VALID_ELEM_TAG_BRIDGE
  ON goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE_A
(
  AGGR_VALID_ELEM_TAG_BRIDGE_PK INT         NOT NULL,
  REVISION_NUMBER               INT         NOT NULL,
  REVISION_TYPE                 INT         NULL,
  VALIDATION_RULE_PK            INT         NULL,
  ELEMENT_TAG_CD                VARCHAR(30) NULL,
  MODIFIED_DATE_TIME            DATETIME(6) NULL,
  USER_ID                       VARCHAR(10) NULL,
  VERSION                       INT         NULL,
  PRIMARY KEY (AGGR_VALID_ELEM_TAG_BRIDGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_V_ELEM_TAG_B_IDX_A
  ON goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE_A (ELEMENT_TAG_CD);

CREATE INDEX goatada_test.FK_AGGR_V_ELEM_TAG_B_A
  ON goatada_test.AGGR_VALID_ELEM_TAG_BRIDGE_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE
(
  AGGR_VALID_ELEM_TYPE_BRIDGE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK             INT                    NOT NULL,
  ELEMENT_TYPE_CD                VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)            NOT NULL,
  USER_ID                        VARCHAR(10)            NOT NULL,
  VERSION                        INT DEFAULT '0'        NOT NULL,
  TEST_DATA                      VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_AGGR_VALID_ELEM_TYPE_BRIDGE
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.AGGR_VALID_ELEM_TYPE_BRIDG_IDX
  ON goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE (ELEMENT_TYPE_CD);

CREATE INDEX goatada_test.FK_AGGR_VALID_ELEM_TYPE_BRIDGE
  ON goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE_A
(
  AGGR_VALID_ELEM_TYPE_BRIDGE_PK INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  VALIDATION_RULE_PK             INT         NULL,
  ELEMENT_TYPE_CD                VARCHAR(30) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (AGGR_VALID_ELEM_TYPE_BRIDGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_V_ELEM_TYPE_B_IDX_A
  ON goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE_A (ELEMENT_TYPE_CD);

CREATE INDEX goatada_test.FK_AGGR_V_ELEM_TYPE_B_A
  ON goatada_test.AGGR_VALID_ELEM_TYPE_BRIDGE_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE
(
  AGGR_VALID_INSTR_TAG_BRIDGE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK             INT                    NOT NULL,
  INSTRUMENT_TAG_TYPE_CD         VARCHAR(30)            NOT NULL,
  INSTRUMENT_TAG_VALUE_CD        VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)            NOT NULL,
  USER_ID                        VARCHAR(10)            NOT NULL,
  VERSION                        INT DEFAULT '0'        NOT NULL,
  TEST_DATA                      VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_AGGR_VALID_INSTR_TAG_BRIDGE
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.AGGR_VALID_INSTR_TAG_BRIDG_IDX
  ON goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE (INSTRUMENT_TAG_TYPE_CD, INSTRUMENT_TAG_VALUE_CD);

CREATE INDEX goatada_test.FK_AGGR_VALID_INSTR_TAG_BRIDGE
  ON goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE_A
(
  AGGR_VALID_INSTR_TAG_BRIDGE_PK INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  VALIDATION_RULE_PK             INT         NULL,
  INSTRUMENT_TAG_TYPE_CD         VARCHAR(30) NULL,
  INSTRUMENT_TAG_VALUE_CD        VARCHAR(30) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (AGGR_VALID_INSTR_TAG_BRIDGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.AGGR_V_INSTR_TAG_B_IDX_A
  ON goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE_A (INSTRUMENT_TAG_TYPE_CD, INSTRUMENT_TAG_VALUE_CD);

CREATE INDEX goatada_test.FK_AGGR_V_INSTR_TAG_B_A
  ON goatada_test.AGGR_VALID_INSTR_TAG_BRIDGE_A (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_SUBJECT_BRIDGE
(
  AGGR_VALID_SUBJECT_BRIDGE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_RULE_PK           INT                    NOT NULL,
  SUBJECT_TYPE                 VARCHAR(1)             NOT NULL,
  SUBJECT_ID                   VARCHAR(12)            NULL,
  MODIFIED_DATE_TIME           DATETIME(6)            NOT NULL,
  USER_ID                      VARCHAR(10)            NOT NULL,
  VERSION                      INT DEFAULT '0'        NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT IDX_SUBJECT_VALIDATION_RULE
  UNIQUE (SUBJECT_TYPE, SUBJECT_ID, VALIDATION_RULE_PK),
  CONSTRAINT FK_AGGR_VALID_SUBJECT_BRIDGE
  FOREIGN KEY (VALIDATION_RULE_PK) REFERENCES goatada_test.AGGR_VALIDATION_RULE (VALIDATION_RULE_PK)
);

CREATE INDEX goatada_test.IDX_VALIDATION_RULE_PK
  ON goatada_test.AGGR_VALID_SUBJECT_BRIDGE (VALIDATION_RULE_PK);

CREATE TABLE goatada_test.AGGR_VALID_SUBJECT_BRIDGE_A
(
  AGGR_VALID_SUBJECT_BRIDGE_PK INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  VALIDATION_RULE_PK           INT         NULL,
  SUBJECT_TYPE                 VARCHAR(1)  NULL,
  SUBJECT_ID                   VARCHAR(12) NULL,
  MODIFIED_DATE_TIME           DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  PRIMARY KEY (AGGR_VALID_SUBJECT_BRIDGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.IDX_SUBJECT
  ON goatada_test.AGGR_VALID_SUBJECT_BRIDGE_A (SUBJECT_TYPE, SUBJECT_ID);

CREATE TABLE goatada_test.COLL_CONSISTENCY_DATA_NEED
(
  CONSISTENCY_DATA_NEED_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSISTENCY_DATA_NEED_NAME  VARCHAR(250)           NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)            NOT NULL,
  USER_ID                     VARCHAR(10)            NOT NULL,
  CONSISTENCY_NEED_IDENTIFIER VARCHAR(10)            NOT NULL,
  VERSION                     INT DEFAULT '0'        NOT NULL,
  TEST_DATA                   VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT U_COLL_CONSISTENCY_NEED
  UNIQUE (CONSISTENCY_NEED_IDENTIFIER)
);

CREATE TABLE goatada_test.COLL_CONSISTENCY_DATA_NEED_A
(
  CONSISTENCY_DATA_NEED_PK    INT          NOT NULL,
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  CONSISTENCY_DATA_NEED_NAME  VARCHAR(250) NULL,
  MODIFIED_DATE_TIME          DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  CONSISTENCY_NEED_IDENTIFIER VARCHAR(10)  NULL,
  VERSION                     INT          NULL,
  PRIMARY KEY (CONSISTENCY_DATA_NEED_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.U_COLL_CONSISTENCY_NEED_A
  ON goatada_test.COLL_CONSISTENCY_DATA_NEED_A (CONSISTENCY_NEED_IDENTIFIER);

CREATE TABLE goatada_test.COLL_CONSISTENCY_DATA_REF
(
  CONSISTENCY_DATA_REF_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSISTENCY_DATA_REF_TYPE  VARCHAR(30)            NOT NULL,
  CONSISTENCY_DATA_REF_VALUE VARCHAR(4)             NOT NULL,
  CONSISTENCY_DATA_NEED_PK   INT                    NOT NULL,
  DATA_PROVIDER_CODE         VARCHAR(30)            NOT NULL,
  PROVIDER_PLUG_IN_CODE      VARCHAR(100)           NOT NULL,
  MODIFIED_DATE_TIME         DATETIME(6)            NOT NULL,
  USER_ID                    VARCHAR(10)            NOT NULL,
  VERSION                    INT DEFAULT '0'        NOT NULL,
  TEST_DATA                  VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_COLL_CONSISTENCY_DATA_REF
  FOREIGN KEY (CONSISTENCY_DATA_NEED_PK) REFERENCES goatada_test.COLL_CONSISTENCY_DATA_NEED (CONSISTENCY_DATA_NEED_PK)
);

CREATE INDEX goatada_test.COLL_CONSISTENCY_DATA_REF_IDX1
  ON goatada_test.COLL_CONSISTENCY_DATA_REF (CONSISTENCY_DATA_REF_TYPE, CONSISTENCY_DATA_REF_VALUE);

CREATE INDEX goatada_test.FK_COLL_CONSISTENCY_DATA_REF
  ON goatada_test.COLL_CONSISTENCY_DATA_REF (CONSISTENCY_DATA_NEED_PK);

CREATE TABLE goatada_test.COLL_CONSISTENCY_DATA_REF_A
(
  CONSISTENCY_DATA_REF_PK    INT          NOT NULL,
  REVISION_NUMBER            INT          NOT NULL,
  REVISION_TYPE              INT          NULL,
  CONSISTENCY_DATA_REF_TYPE  VARCHAR(30)  NULL,
  CONSISTENCY_DATA_REF_VALUE VARCHAR(4)   NULL,
  CONSISTENCY_DATA_NEED_PK   INT          NULL,
  DATA_PROVIDER_CODE         VARCHAR(30)  NULL,
  PROVIDER_PLUG_IN_CODE      VARCHAR(100) NULL,
  MODIFIED_DATE_TIME         DATETIME(6)  NULL,
  USER_ID                    VARCHAR(10)  NULL,
  VERSION                    INT          NULL,
  PRIMARY KEY (CONSISTENCY_DATA_REF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.COLL_CONSIST_DATA_REF_IDX1_A
  ON goatada_test.COLL_CONSISTENCY_DATA_REF_A (CONSISTENCY_DATA_REF_TYPE, CONSISTENCY_DATA_REF_VALUE);

CREATE INDEX goatada_test.FK_COLL_CONSIST_DATA_REF_A
  ON goatada_test.COLL_CONSISTENCY_DATA_REF_A (CONSISTENCY_DATA_NEED_PK);

CREATE TABLE goatada_test.COLL_CONSISTENCY_FEED_DETAIL
(
  CONSISTENCY_FEED_DETAIL_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSISTENCY_FEED_PK        INT             NOT NULL,
  CONSISTENCY_IDENTIFIER     VARCHAR(250)    NOT NULL,
  DATA_KEY                   VARCHAR(100)    NOT NULL,
  DATA_VALUE                 VARCHAR(250)    NULL,
  VERSION                    INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.COLL_CONSISTENCY_FEED_DTL_IDX1
  ON goatada_test.COLL_CONSISTENCY_FEED_DETAIL (CONSISTENCY_IDENTIFIER);

CREATE INDEX goatada_test.FK_COLL_CONSISTENCY_FEED_DTL
  ON goatada_test.COLL_CONSISTENCY_FEED_DETAIL (CONSISTENCY_FEED_PK);

CREATE TABLE goatada_test.COLL_CONSISTENCY_FEED_STATUS
(
  CONSISTENCY_FEED_PK        INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSISTENCY_DATA_REF_TYPE  VARCHAR(30)     NOT NULL,
  CONSISTENCY_DATA_REF_VALUE VARCHAR(4)      NOT NULL,
  DATA_PROVIDER_CODE         VARCHAR(30)     NOT NULL,
  PROCESS_START_DATE_TIME    DATETIME(6)     NOT NULL,
  PROCESS_END_DATE_TIME      DATETIME(6)     NULL,
  PROCESS_NAME               VARCHAR(250)    NULL,
  VERSION                    INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.COLL_CONSISTENCY_FEEDSTAT_IDX1
  ON goatada_test.COLL_CONSISTENCY_FEED_STATUS (CONSISTENCY_DATA_REF_TYPE, CONSISTENCY_DATA_REF_VALUE);

CREATE INDEX goatada_test.COLL_CONSISTENCY_FEEDSTAT_IDX2
  ON goatada_test.COLL_CONSISTENCY_FEED_STATUS (DATA_PROVIDER_CODE);

ALTER TABLE goatada_test.COLL_CONSISTENCY_FEED_DETAIL
  ADD CONSTRAINT goatada_test.FK_COLL_CONSISTENCY_FEED_DTL
FOREIGN KEY (CONSISTENCY_FEED_PK) REFERENCES goatada_test.COLL_CONSISTENCY_FEED_STATUS (CONSISTENCY_FEED_PK);

CREATE TABLE goatada_test.COLL_CONSISTENCY_IDENTITY
(
  CONSISTENCY_IDENTIFIER_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSISTENCY_IDENTIFIER    VARCHAR(250)           NOT NULL,
  CONSISTENCY_DATA_NEED_PK  INT                    NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)            NOT NULL,
  USER_ID                   VARCHAR(10)            NOT NULL,
  VERSION                   INT DEFAULT '0'        NOT NULL,
  TEST_DATA                 VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_COLL_CONSISTENCY_IDENTITY
  FOREIGN KEY (CONSISTENCY_DATA_NEED_PK) REFERENCES goatada_test.COLL_CONSISTENCY_DATA_NEED (CONSISTENCY_DATA_NEED_PK)
);

CREATE INDEX goatada_test.FK_COLL_CONSISTENCY_IDENTITY
  ON goatada_test.COLL_CONSISTENCY_IDENTITY (CONSISTENCY_DATA_NEED_PK);

CREATE TABLE goatada_test.COLL_CONSISTENCY_IDENTITY_A
(
  CONSISTENCY_IDENTIFIER_PK INT          NOT NULL,
  REVISION_NUMBER           INT          NOT NULL,
  REVISION_TYPE             INT          NULL,
  CONSISTENCY_IDENTIFIER    VARCHAR(250) NULL,
  CONSISTENCY_DATA_NEED_PK  INT          NULL,
  MODIFIED_DATE_TIME        DATETIME(6)  NULL,
  USER_ID                   VARCHAR(10)  NULL,
  VERSION                   INT          NULL,
  PRIMARY KEY (CONSISTENCY_IDENTIFIER_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_COLL_CONSISTENCY_IDENTITY_A
  ON goatada_test.COLL_CONSISTENCY_IDENTITY_A (CONSISTENCY_DATA_NEED_PK);

CREATE TABLE goatada_test.COLL_PROFILE_TRANSL_RULE
(
  PROFILE_TRANSLATION_RULE_PK   INT AUTO_INCREMENT
    PRIMARY KEY,
  TRANSLATION_RULE_PK           INT                    NOT NULL,
  PROVIDER_REQUEST_PROFILE_CODE VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME            DATETIME(6)            NOT NULL,
  USER_ID                       VARCHAR(10)            NOT NULL,
  VERSION                       INT DEFAULT '0'        NOT NULL,
  TEST_DATA                     VARCHAR(1) DEFAULT 'N' NOT NULL
);

CREATE INDEX goatada_test.FK_COLL_PROFILE_TRANSL_RULE
  ON goatada_test.COLL_PROFILE_TRANSL_RULE (TRANSLATION_RULE_PK);

CREATE TABLE goatada_test.COLL_PROFILE_TRANSL_RULE_A
(
  PROFILE_TRANSLATION_RULE_PK   INT         NOT NULL,
  REVISION_NUMBER               INT         NOT NULL,
  REVISION_TYPE                 INT         NULL,
  TRANSLATION_RULE_PK           INT         NULL,
  PROVIDER_REQUEST_PROFILE_CODE VARCHAR(30) NULL,
  MODIFIED_DATE_TIME            DATETIME(6) NULL,
  USER_ID                       VARCHAR(10) NULL,
  VERSION                       INT         NULL,
  PRIMARY KEY (PROFILE_TRANSLATION_RULE_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.COLL_PROVIDER_FEED_DETAILS
(
  PROVIDER_FEED_DETAILS_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  FEED_REFERENCE_TYPE_CODE VARCHAR(30)            NOT NULL,
  FEED_REFERENCE_VALUE     VARCHAR(4)             NOT NULL,
  FEED_PROPERTY_NAME       VARCHAR(50)            NOT NULL,
  FEED_PROPERTY_VALUE      VARCHAR(200)           NOT NULL,
  MODIFIED_DATE_TIME       DATETIME(6)            NOT NULL,
  USER_ID                  VARCHAR(10)            NOT NULL,
  VERSION                  INT DEFAULT '0'        NOT NULL,
  TEST_DATA                VARCHAR(1) DEFAULT 'N' NOT NULL
);

CREATE TABLE goatada_test.COLL_PROVIDER_FEED_DETAILS_A
(
  PROVIDER_FEED_DETAILS_PK INT          NOT NULL,
  REVISION_NUMBER          INT          NOT NULL,
  REVISION_TYPE            INT          NULL,
  FEED_REFERENCE_TYPE_CODE VARCHAR(30)  NULL,
  FEED_REFERENCE_VALUE     VARCHAR(4)   NULL,
  FEED_PROPERTY_NAME       VARCHAR(50)  NULL,
  FEED_PROPERTY_VALUE      VARCHAR(200) NULL,
  MODIFIED_DATE_TIME       DATETIME(6)  NULL,
  USER_ID                  VARCHAR(10)  NULL,
  VERSION                  INT          NULL,
  PRIMARY KEY (PROVIDER_FEED_DETAILS_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.COLL_PROVIDER_FEED_REQUEST
(
  PROVIDER_FEED_REQUEST_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DATA_PROVIDER_CODE       VARCHAR(30)     NULL,
  FEED_REFERENCE_TYPE_CODE VARCHAR(30)     NOT NULL,
  FEED_REFERENCE_VALUE     VARCHAR(4)      NULL,
  FILE_NAME                VARCHAR(250)    NULL,
  CREATION_DATE_TIME       DATETIME(6)     NULL,
  TRIGGER_CODE             VARCHAR(10)     NULL,
  INSTRUMENTS_REQUESTED    INT             NULL,
  PROCESS_NAME             VARCHAR(250)    NULL,
  FEED_APPLICABILITY_DATE  DATE            NULL,
  VERSION                  INT DEFAULT '0' NOT NULL,
  END_DATE                 DATETIME(6)     NULL
);

CREATE INDEX goatada_test.PROVIDER_FEED_REQUEST_IDX1
  ON goatada_test.COLL_PROVIDER_FEED_REQUEST (DATA_PROVIDER_CODE);

CREATE INDEX goatada_test.PROVIDER_FEED_REQUEST_IDX2
  ON goatada_test.COLL_PROVIDER_FEED_REQUEST (FEED_REFERENCE_TYPE_CODE, FEED_REFERENCE_VALUE);

CREATE INDEX goatada_test.PROVIDER_FEED_REQUEST_IDX3
  ON goatada_test.COLL_PROVIDER_FEED_REQUEST (TRIGGER_CODE);

CREATE TABLE goatada_test.COLL_PROVIDER_FEED_REQUEST_LOG
(
  PROVIDER_FEED_REQUEST_LOG_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  REASON_CODE                  VARCHAR(30)     NOT NULL,
  SUBJECT_ID                   VARCHAR(12)     NOT NULL,
  PROVIDER_FEED_REQUEST_PK     INT             NOT NULL,
  CREATION_DATE_TIME           DATETIME(6)     NOT NULL,
  VERSION                      INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_PROVIDER_FEED_REQUEST_LOG
  FOREIGN KEY (PROVIDER_FEED_REQUEST_PK) REFERENCES goatada_test.COLL_PROVIDER_FEED_REQUEST (PROVIDER_FEED_REQUEST_PK)
);

CREATE INDEX goatada_test.FK_PROVIDER_FEED_REQUEST_LOG
  ON goatada_test.COLL_PROVIDER_FEED_REQUEST_LOG (PROVIDER_FEED_REQUEST_PK);

CREATE TABLE goatada_test.COLL_PROVIDER_FEED_STATUS
(
  FEED_IDENTIFIER_CODE         INT AUTO_INCREMENT
    PRIMARY KEY,
  DATA_PROVIDER_CODE           VARCHAR(30)                                      NOT NULL,
  FEED_REFERENCE_TYPE_CODE     VARCHAR(30)                                      NOT NULL,
  FEED_REFERENCE_VALUE         VARCHAR(4)                                       NOT NULL,
  FILE_NAME                    VARCHAR(500)                                     NULL,
  RECEIVED_DATE_TIME           DATETIME(6)                                      NULL,
  INSTRUMENTS_CREATED_COUNT    INT                                              NULL,
  INSTRUMENTS_FILTERED_COUNT   INT                                              NULL,
  INSTRUMENTS_IDENTIFIED_COUNT INT                                              NULL,
  SNAP_CODE                    VARCHAR(30)                                      NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NULL,
  FEED_APPLICABILITY_DATE      DATE                                             NULL,
  PROCESS_NAME                 VARCHAR(250)                                     NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL
);

CREATE INDEX goatada_test.PROVIDER_FEED_STATUS_IDX1
  ON goatada_test.COLL_PROVIDER_FEED_STATUS (DATA_PROVIDER_CODE);

CREATE INDEX goatada_test.PROVIDER_FEED_STATUS_IDX2
  ON goatada_test.COLL_PROVIDER_FEED_STATUS (FEED_REFERENCE_TYPE_CODE, FEED_REFERENCE_VALUE);

CREATE TABLE goatada_test.COLL_PROVIDER_REF_TYPE_PREF
(
  PROVIDER_REF_TYPE_PREF_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DATA_PROVIDER_CD          VARCHAR(30)            NOT NULL,
  SUBJECT_TYPE              VARCHAR(1)             NOT NULL,
  XREF_IDENTIFIER_TYPE_CD   VARCHAR(30)            NOT NULL,
  PRIORITY                  INT                    NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)            NOT NULL,
  USER_ID                   VARCHAR(10)            NOT NULL,
  VERSION                   INT DEFAULT '0'        NOT NULL,
  TEST_DATA                 VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT UQ_COLL_PROVIDER_REF_TYPE_PREF
  UNIQUE (DATA_PROVIDER_CD, SUBJECT_TYPE, XREF_IDENTIFIER_TYPE_CD, PRIORITY)
);

CREATE TABLE goatada_test.COLL_PROVIDER_REF_TYPE_PREF_A
(
  PROVIDER_REF_TYPE_PREF_PK INT         NOT NULL,
  REVISION_NUMBER           INT         NOT NULL,
  REVISION_TYPE             INT         NULL,
  DATA_PROVIDER_CD          VARCHAR(30) NULL,
  SUBJECT_TYPE              VARCHAR(1)  NULL,
  XREF_IDENTIFIER_TYPE_CD   VARCHAR(30) NULL,
  PRIORITY                  INT         NULL,
  MODIFIED_DATE_TIME        DATETIME(6) NULL,
  USER_ID                   VARCHAR(10) NULL,
  VERSION                   INT         NULL,
  PRIMARY KEY (PROVIDER_REF_TYPE_PREF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.COLL_PROV_REFTYPE_P_IDX_A
  ON goatada_test.COLL_PROVIDER_REF_TYPE_PREF_A (DATA_PROVIDER_CD);

CREATE TABLE goatada_test.COLL_TRANSLATION_RULE
(
  TRANSLATION_RULE_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  TRANSLATION_RULE_IDENTIFIER VARCHAR(10)            NOT NULL,
  TRANSLATION_RULE_NAME       VARCHAR(100)           NOT NULL,
  SUBJECT_ID                  VARCHAR(12)            NULL,
  ELEMENT_TYPE_IDENTIFIER     VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)            NOT NULL,
  USER_ID                     VARCHAR(10)            NOT NULL,
  VERSION                     INT DEFAULT '0'        NOT NULL,
  TEST_DATA                   VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT U_COLL_TRANSLATION_RULE
  UNIQUE (TRANSLATION_RULE_IDENTIFIER)
);

ALTER TABLE goatada_test.COLL_PROFILE_TRANSL_RULE
  ADD CONSTRAINT goatada_test.FK_COLL_PROFILE_TRANSL_RULE
FOREIGN KEY (TRANSLATION_RULE_PK) REFERENCES goatada_test.COLL_TRANSLATION_RULE (TRANSLATION_RULE_PK)
  ON DELETE CASCADE;

CREATE TABLE goatada_test.COLL_TRANSLATION_RULE_A
(
  TRANSLATION_RULE_PK         INT          NOT NULL,
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  TRANSLATION_RULE_IDENTIFIER VARCHAR(10)  NULL,
  TRANSLATION_RULE_NAME       VARCHAR(100) NULL,
  SUBJECT_ID                  VARCHAR(12)  NULL,
  ELEMENT_TYPE_IDENTIFIER     VARCHAR(30)  NULL,
  MODIFIED_DATE_TIME          DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  VERSION                     INT          NULL,
  PRIMARY KEY (TRANSLATION_RULE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.U_COLL_TRANSLATION_RULE_A
  ON goatada_test.COLL_TRANSLATION_RULE_A (TRANSLATION_RULE_IDENTIFIER);

CREATE TABLE goatada_test.COLL_TRANSLATION_RULE_MAP
(
  TRANSLATION_RULE_MAP_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  TRANSLATION_RULE_PK     INT                    NOT NULL,
  TARGET_ATTRIBUTE        VARCHAR(250)           NOT NULL,
  OPERATION               VARCHAR(250)           NOT NULL,
  PARAMETER_LIST          VARCHAR(250)           NOT NULL,
  MODIFIED_DATE_TIME      DATETIME(6)            NOT NULL,
  USER_ID                 VARCHAR(10)            NOT NULL,
  REQUIRED                TINYINT DEFAULT '0'    NOT NULL,
  VERSION                 INT DEFAULT '0'        NOT NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_COLL_TRANSLATION_RULE_MAP
  FOREIGN KEY (TRANSLATION_RULE_PK) REFERENCES goatada_test.COLL_TRANSLATION_RULE (TRANSLATION_RULE_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_COLL_TRANSLATION_RULE_MAP
  ON goatada_test.COLL_TRANSLATION_RULE_MAP (TRANSLATION_RULE_PK);

CREATE TABLE goatada_test.COLL_TRANSLATION_RULE_MAP_A
(
  TRANSLATION_RULE_MAP_PK INT          NOT NULL,
  REVISION_NUMBER         INT          NOT NULL,
  REVISION_TYPE           INT          NULL,
  TRANSLATION_RULE_PK     INT          NULL,
  TARGET_ATTRIBUTE        VARCHAR(250) NULL,
  OPERATION               VARCHAR(250) NULL,
  PARAMETER_LIST          VARCHAR(250) NULL,
  MODIFIED_DATE_TIME      DATETIME(6)  NULL,
  USER_ID                 VARCHAR(10)  NULL,
  REQUIRED                INT          NULL,
  VERSION                 INT          NULL,
  PRIMARY KEY (TRANSLATION_RULE_MAP_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.COM_BACKGROUND_JOB
(
  JOB_PK              INT AUTO_INCREMENT
    PRIMARY KEY,
  JOB_REF_TYPE        VARCHAR(30)            NOT NULL,
  JOB_REF_VALUE       VARCHAR(4)             NOT NULL,
  PLUGIN_ID           VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME  DATETIME(6)            NOT NULL,
  USER_ID             VARCHAR(10)            NOT NULL,
  VERSION             INT DEFAULT '0'        NOT NULL,
  TEST_DATA           VARCHAR(1) DEFAULT 'N' NOT NULL,
  BATCH_NAME          VARCHAR(50)            NULL,
  BUSINESS_UNIT       VARCHAR(10)            NULL,
  CUT_OFF_TIME        TIME                   NULL,
  CUT_OFF_DATE_OFFSET INT                    NULL
);

CREATE TABLE goatada_test.COM_BACKGROUND_JOB_EVENT
(
  JOB_EVENT_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  JOB_MONITOR_PK  INT             NOT NULL,
  TOPIC           VARCHAR(100)    NOT NULL,
  REASON          VARCHAR(30)     NOT NULL,
  SEVERITY        VARCHAR(30)     NOT NULL,
  MESSAGE         VARCHAR(500)    NULL,
  EVENT_DATE_TIME DATETIME(6)     NOT NULL,
  VERSION         INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FK_COM_BACKGROUND_JOB_EVENT
  ON goatada_test.COM_BACKGROUND_JOB_EVENT (JOB_MONITOR_PK);

CREATE TABLE goatada_test.COM_BACKGROUND_JOB_MONITOR
(
  JOB_MONITOR_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  JOB_PK               INT             NOT NULL,
  JOB_STATUS           VARCHAR(30)     NOT NULL,
  APPLICABILITY_DATE   DATE            NOT NULL,
  BEGIN_JOB_DATE_TIME  DATETIME(6)     NOT NULL,
  FINISH_JOB_DATE_TIME DATETIME(6)     NULL,
  VERSION              INT DEFAULT '0' NOT NULL,
  AMOUNT_OF_EVENTS     INT DEFAULT '0' NULL,
  ERROR_MESSAGE        VARCHAR(2000)   NULL,
  CONSTRAINT FK_COM_BACKGROUND_JOB_MONITOR1
  FOREIGN KEY (JOB_PK) REFERENCES goatada_test.COM_BACKGROUND_JOB (JOB_PK)
);

CREATE INDEX goatada_test.FK_COM_BACKGROUND_JOB_MONITOR1
  ON goatada_test.COM_BACKGROUND_JOB_MONITOR (JOB_PK);

CREATE INDEX goatada_test.FK_COM_BACKGROUND_JOB_MONITOR2
  ON goatada_test.COM_BACKGROUND_JOB_MONITOR (JOB_STATUS);

ALTER TABLE goatada_test.COM_BACKGROUND_JOB_EVENT
  ADD CONSTRAINT goatada_test.FK_COM_BACKGROUND_JOB_EVENT
FOREIGN KEY (JOB_MONITOR_PK) REFERENCES goatada_test.COM_BACKGROUND_JOB_MONITOR (JOB_MONITOR_PK);

CREATE TABLE goatada_test.COM_BLACKLIST
(
  COM_BLACKLIST_ID  INT AUTO_INCREMENT
    PRIMARY KEY,
  NAME              VARCHAR(30)  NOT NULL,
  DESCRIPTION       VARCHAR(200) NOT NULL,
  ACTIVATION_DATE   DATE         NOT NULL,
  DEACTIVATION_DATE DATE         NULL,
  ISSUED_START_DATE DATE         NULL,
  ISSUED_END_DATE   DATE         NULL,
  CONSTRAINT NAME
  UNIQUE (NAME)
);

CREATE INDEX goatada_test.IDX_COM_BLACKLIST_ACTIVATION
  ON goatada_test.COM_BLACKLIST (ACTIVATION_DATE, DEACTIVATION_DATE);

CREATE INDEX goatada_test.IDX_COM_BLACKLIST_ISSUE_DATE
  ON goatada_test.COM_BLACKLIST (ISSUED_START_DATE, ISSUED_END_DATE);

CREATE TABLE goatada_test.COM_BLACKLIST_XREFS
(
  COM_BLACKLIST_XREFS_ID INT AUTO_INCREMENT
    PRIMARY KEY,
  COM_BLACKLIST_ID_FK    INT          NOT NULL,
  SUBJECT_TYPE           VARCHAR(1)   NOT NULL,
  XREF_TYPE              VARCHAR(2)   NOT NULL,
  XREF_VALUE             VARCHAR(255) NOT NULL,
  CONSTRAINT FSB_IDX_XREF_SUBJECT
  UNIQUE (COM_BLACKLIST_ID_FK, XREF_VALUE, XREF_TYPE, SUBJECT_TYPE),
  CONSTRAINT FK_BLACKLIST_XREF_BLACKLIST
  FOREIGN KEY (COM_BLACKLIST_ID_FK) REFERENCES goatada_test.COM_BLACKLIST (COM_BLACKLIST_ID)
);

CREATE TABLE goatada_test.COM_PROPERTIES
(
  PROPERTIES_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  PROPERTIES_STORE_ID INT                    NOT NULL,
  PROP_KEY            VARCHAR(60)            NOT NULL,
  PROP_VALUE          VARCHAR(600)           NOT NULL,
  VERSION             INT DEFAULT '0'        NOT NULL,
  TEST_DATA           VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT COM_PROPERTIES_IDX
  UNIQUE (PROPERTIES_STORE_ID, PROP_KEY)
);

CREATE TABLE goatada_test.COM_PROPERTY_STORES
(
  PROPERTY_STORES_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  NAME               VARCHAR(60)            NOT NULL,
  VERSION            INT DEFAULT '0'        NOT NULL,
  TEST_DATA          VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT SYS_C00277406
  UNIQUE (NAME)
);

ALTER TABLE goatada_test.COM_PROPERTIES
  ADD CONSTRAINT goatada_test.FK_COM_PROPERTIES
FOREIGN KEY (PROPERTIES_STORE_ID) REFERENCES goatada_test.COM_PROPERTY_STORES (PROPERTY_STORES_PK);

CREATE TABLE goatada_test.COM_REPORT
(
  REPORT_PK           INT AUTO_INCREMENT
    PRIMARY KEY,
  REPORT_NAME         VARCHAR(100)               NOT NULL,
  REPORT_TYPE_CODE    VARCHAR(30)                NOT NULL,
  REPORT_DESC         VARCHAR(2000)              NULL,
  MODIFIED_DATE_TIME  DATETIME(6)                NULL,
  USER_ID             VARCHAR(10)                NOT NULL,
  VERSION             INT DEFAULT '0'            NOT NULL,
  REPORT_CLASS_CODE   VARCHAR(10)                NOT NULL,
  JASPER_FILE         VARCHAR(500)               NULL,
  JRXML_FILE          VARCHAR(500)               NULL,
  DATA_SOURCE_TYPE    VARCHAR(30) DEFAULT 'SQL'  NOT NULL,
  OUTPUT_TYPE         VARCHAR(30) DEFAULT 'PDF'  NOT NULL,
  TEST_DATA           VARCHAR(1) DEFAULT 'N'     NOT NULL,
  BATCH_NAME          VARCHAR(50)                NULL,
  BUSINESS_UNIT       VARCHAR(10)                NULL,
  CUT_OFF_TIME        TIME                       NULL,
  ALLOWED_EXECUTION   VARCHAR(255) DEFAULT 'ALL' NOT NULL,
  CUT_OFF_DATE_OFFSET INT                        NULL,
  CONSTRAINT UQ_COM_ADHOC_REPORT
  UNIQUE (REPORT_NAME)
);

CREATE TABLE goatada_test.COM_REPORT_A
(
  REPORT_PK           INT                       NOT NULL,
  REVISION_NUMBER     INT                       NOT NULL,
  REVISION_TYPE       INT                       NULL,
  REPORT_NAME         VARCHAR(100)              NULL,
  REPORT_TYPE_CODE    VARCHAR(30)               NULL,
  REPORT_DESC         VARCHAR(2000)             NULL,
  MODIFIED_DATE_TIME  DATETIME(6)               NULL,
  USER_ID             VARCHAR(10)               NULL,
  REPORT_CLASS_CODE   VARCHAR(10)               NULL,
  JASPER_FILE         VARCHAR(500)              NULL,
  JRXML_FILE          VARCHAR(500)              NULL,
  DATA_SOURCE_TYPE    VARCHAR(30) DEFAULT 'SQL' NULL,
  OUTPUT_TYPE         VARCHAR(30)               NULL,
  VERSION             INT                       NULL,
  BATCH_NAME          VARCHAR(50)               NULL,
  BUSINESS_UNIT       VARCHAR(10)               NULL,
  CUT_OFF_TIME        TIME                      NULL,
  ALLOWED_EXECUTION   VARCHAR(255)              NULL,
  CUT_OFF_DATE_OFFSET INT                       NULL,
  PRIMARY KEY (REPORT_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.COM_REPORT_EXECUTION
(
  COM_REPORT_EXECUTION_PK  INT AUTO_INCREMENT
    PRIMARY KEY,
  COM_REPORT_DEFINITION_FK INT           NOT NULL,
  START_DATE_TIME          DATETIME(6)   NOT NULL,
  END_DATE_TIME            DATETIME(6)   NULL,
  REPORT_LOCATION          VARCHAR(500)  NULL,
  STATUS                   VARCHAR(20)   NULL,
  REPORT_LOG_MESSAGE       VARCHAR(4000) NULL,
  USER_ID                  VARCHAR(10)   NULL,
  CONSTRAINT FK_COM_REPORT_DEFINITION
  FOREIGN KEY (COM_REPORT_DEFINITION_FK) REFERENCES goatada_test.COM_REPORT (REPORT_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.I_CRE_COM_REPORT_DEFINITION_FK
  ON goatada_test.COM_REPORT_EXECUTION (COM_REPORT_DEFINITION_FK);

CREATE TABLE goatada_test.COM_REPORT_EXEC_PARAM
(
  COM_REPORT_EXEC_PARAM_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  COM_REPORT_EXECUTION_FK  INT           NOT NULL,
  PRM_KEY                  VARCHAR(60)   NOT NULL,
  PRM_VALUE                VARCHAR(4000) NULL,
  DATA_TYPE_CODE           VARCHAR(30)   NOT NULL,
  IS_COLLECTION            TINYINT       NOT NULL,
  CONSTRAINT FK_COM_REPORT_EXECUTION
  FOREIGN KEY (COM_REPORT_EXECUTION_FK) REFERENCES goatada_test.COM_REPORT_EXECUTION (COM_REPORT_EXECUTION_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_COM_REPORT_EXECUTION
  ON goatada_test.COM_REPORT_EXEC_PARAM (COM_REPORT_EXECUTION_FK);

CREATE TABLE goatada_test.COM_REPORT_PREFILL
(
  COM_REPORT_PREFILL_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  REPORT_FK             INT          NULL,
  NAME                  VARCHAR(80)  NOT NULL,
  DESCRIPTION           VARCHAR(300) NOT NULL,
  CONSTRAINT UNQ_PREFILL_NAME
  UNIQUE (NAME),
  CONSTRAINT FK_REP_PREFILL_REP_DEF
  FOREIGN KEY (REPORT_FK) REFERENCES goatada_test.COM_REPORT (REPORT_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.IDX_FK_COM_REPORT_PREFILL
  ON goatada_test.COM_REPORT_PREFILL (REPORT_FK);

CREATE TABLE goatada_test.COM_REPORT_PREFILL_PARAM
(
  COM_REPORT_PREFILL_PARAM_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  COM_REPORT_PREFILL_FK       INT         NOT NULL,
  PARAMETER_NAME              VARCHAR(35) NOT NULL,
  PARAMETER_TYPE              VARCHAR(35) NOT NULL,
  CONSTRAINT COM_REPORT_PREFILL_FK
  UNIQUE (COM_REPORT_PREFILL_FK, PARAMETER_NAME),
  CONSTRAINT FK_REP_PREF_PARAM_PREF
  FOREIGN KEY (COM_REPORT_PREFILL_FK) REFERENCES goatada_test.COM_REPORT_PREFILL (COM_REPORT_PREFILL_PK)
    ON DELETE CASCADE
);

CREATE TABLE goatada_test.COM_REPORT_PREFILL_VALUE
(
  COM_REPORT_PREFILL_VALUE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  COM_REPORT_PREFILL_PARAM_FK INT          NOT NULL,
  PARAMETER_VALUE             VARCHAR(255) NOT NULL,
  CONSTRAINT COM_REPORT_PREFILL_PARAM_FK
  UNIQUE (COM_REPORT_PREFILL_PARAM_FK, PARAMETER_VALUE),
  CONSTRAINT FK_REP_PREF_VAL_PARAM
  FOREIGN KEY (COM_REPORT_PREFILL_PARAM_FK) REFERENCES goatada_test.COM_REPORT_PREFILL_PARAM (COM_REPORT_PREFILL_PARAM_PK)
    ON DELETE CASCADE
);

CREATE TABLE goatada_test.COM_REPORT_PROPERTIES
(
  REPORT_PROPERTIES_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  PARAMETER_NAME          VARCHAR(100)           NOT NULL,
  PARAMETER_DATATYPE_CODE VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME      DATETIME(6)            NULL,
  USER_ID                 VARCHAR(10)            NOT NULL,
  VERSION                 INT DEFAULT '0'        NOT NULL,
  REPORT_PK               INT                    NOT NULL,
  EXPECTED_CODE_LIST      VARCHAR(30)            NULL,
  IS_MANDATORY            TINYINT DEFAULT '0'    NOT NULL,
  IS_COLLECTION           TINYINT DEFAULT '0'    NOT NULL,
  EXPECTED_SUBJECT_TYPES  VARCHAR(10)            NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_REPORT_PK
  FOREIGN KEY (REPORT_PK) REFERENCES goatada_test.COM_REPORT (REPORT_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.I_CRP_REPORT_PK
  ON goatada_test.COM_REPORT_PROPERTIES (REPORT_PK);

CREATE TABLE goatada_test.COM_REPORT_PROPERTIES_A
(
  REPORT_PROPERTIES_PK    INT             NOT NULL,
  REVISION_NUMBER         INT             NOT NULL,
  REVISION_TYPE           INT             NULL,
  PARAMETER_NAME          VARCHAR(100)    NULL,
  PARAMETER_DATATYPE_CODE VARCHAR(30)     NULL,
  MODIFIED_DATE_TIME      DATETIME(6)     NULL,
  USER_ID                 VARCHAR(10)     NULL,
  VERSION                 INT             NULL,
  REPORT_PK               INT             NULL,
  EXPECTED_CODE_LIST      VARCHAR(30)     NULL,
  IS_MANDATORY            INT DEFAULT '0' NULL,
  IS_COLLECTION           INT DEFAULT '0' NULL,
  EXPECTED_SUBJECT_TYPES  VARCHAR(10)     NULL,
  PRIMARY KEY (REPORT_PROPERTIES_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.COM_TEXT_IDENTIFIER_GENERATOR
(
  GENERATOR_NAME  VARCHAR(30)     NOT NULL
    PRIMARY KEY,
  LAST_IDENTIFIER VARCHAR(30)     NOT NULL,
  OPT_LOCK        INT             NOT NULL,
  VERSION         INT DEFAULT '0' NOT NULL
);

CREATE TABLE goatada_test.DATABASECHANGELOG
(
  ID            VARCHAR(255) NOT NULL,
  AUTHOR        VARCHAR(255) NOT NULL,
  FILENAME      VARCHAR(255) NOT NULL,
  DATEEXECUTED  DATETIME     NOT NULL,
  ORDEREXECUTED INT          NOT NULL,
  EXECTYPE      VARCHAR(10)  NOT NULL,
  MD5SUM        VARCHAR(35)  NULL,
  DESCRIPTION   VARCHAR(255) NULL,
  COMMENTS      VARCHAR(255) NULL,
  TAG           VARCHAR(255) NULL,
  LIQUIBASE     VARCHAR(20)  NULL,
  CONTEXTS      VARCHAR(255) NULL,
  LABELS        VARCHAR(255) NULL
);

CREATE TABLE goatada_test.DATABASECHANGELOGLOCK
(
  ID          INT          NOT NULL
    PRIMARY KEY,
  LOCKED      BIT          NOT NULL,
  LOCKGRANTED DATETIME     NULL,
  LOCKEDBY    VARCHAR(255) NULL
);

CREATE TABLE goatada_test.DIST_CONSUMER_REQUEST_LOG
(
  CONSUMER_REQUEST_LOG_PK      INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10)     NOT NULL,
  CONSUMER_REQUEST_REF_TYPE    VARCHAR(30)     NOT NULL,
  CONSUMER_REQUEST_REF_VALUE   VARCHAR(4)      NOT NULL,
  CONSUMER_REQUEST_NAME        VARCHAR(100)    NOT NULL,
  CONSUMER_IDENTIFIER          VARCHAR(30)     NOT NULL,
  APPLICATION_IDENTIFIER       VARCHAR(30)     NOT NULL,
  FILENAME                     VARCHAR(250)    NULL,
  APPLICABILITY_DATE           DATE            NULL,
  NUM_INSTRUMENTS_CREATED      DECIMAL(28)     NOT NULL,
  NUM_INSTRUMENTS_REQUESTED    DECIMAL(28)     NOT NULL,
  BEGIN_DATE_TIME              DATETIME(6)     NOT NULL,
  FINISH_DATE_TIME             DATETIME(6)     NULL,
  ERROR_MSG                    VARCHAR(1024)   NULL,
  PROCESS_NAME                 VARCHAR(250)    NULL,
  VERSION                      INT DEFAULT '0' NOT NULL,
  NUM_INSTRUMENTS_IDENTIFIED   INT DEFAULT '0' NULL,
  CONSUMER_REQ_TRIGGER_ID      INT             NULL
);

CREATE INDEX goatada_test.DIST_CONSUMER_REQUEST_LOG_IDX1
  ON goatada_test.DIST_CONSUMER_REQUEST_LOG (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE INDEX goatada_test.DIST_CONSUMER_REQUEST_LOG_IDX2
  ON goatada_test.DIST_CONSUMER_REQUEST_LOG (BEGIN_DATE_TIME);

CREATE INDEX goatada_test.IDX_CONS_REQ_RUN_TRIGGER_ID
  ON goatada_test.DIST_CONSUMER_REQUEST_LOG (CONSUMER_REQ_TRIGGER_ID);

CREATE TABLE goatada_test.DIST_CONSUMER_REQ_PREFERENCE
(
  CONSUMER_REQ_PREFERENCE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  PREFERENCE_IDENTIFIER      VARCHAR(10)                                      NOT NULL,
  CONSUMER_REQUEST_REF_TYPE  VARCHAR(30)                                      NOT NULL,
  CONSUMER_REQUEST_REF_VALUE VARCHAR(4)                                       NOT NULL,
  START_DATE_TIME            DATETIME(6)                                      NOT NULL,
  END_DATE_TIME              DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                    VARCHAR(10)                                      NOT NULL,
  VERSION                    INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                  VARCHAR(1) DEFAULT 'N'                           NOT NULL,
  CONSTRAINT DIST_CONSUMER_REQ_PREF_IDX1
  UNIQUE (PREFERENCE_IDENTIFIER)
);

CREATE INDEX goatada_test.DIST_CONSUMER_REQ_PREF_IDX2
  ON goatada_test.DIST_CONSUMER_REQ_PREFERENCE (CONSUMER_REQUEST_REF_TYPE, CONSUMER_REQUEST_REF_VALUE);

CREATE TABLE goatada_test.DIST_CONSUMER_REQ_PREFERENCE_A
(
  CONSUMER_REQ_PREFERENCE_PK DECIMAL(38) NOT NULL,
  REVISION_NUMBER            INT         NOT NULL,
  REVISION_TYPE              INT         NULL,
  PREFERENCE_IDENTIFIER      VARCHAR(10) NULL,
  CONSUMER_REQUEST_REF_TYPE  VARCHAR(30) NULL,
  CONSUMER_REQUEST_REF_VALUE VARCHAR(4)  NULL,
  START_DATE_TIME            DATETIME(6) NULL,
  END_DATE_TIME              DATETIME(6) NULL,
  USER_ID                    VARCHAR(10) NULL,
  VERSION                    INT         NULL,
  PRIMARY KEY (CONSUMER_REQ_PREFERENCE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_CONSUMER_REQ_PREF_IDX1_A
  ON goatada_test.DIST_CONSUMER_REQ_PREFERENCE_A (PREFERENCE_IDENTIFIER);

CREATE INDEX goatada_test.DIST_CONSUMER_REQ_PREF_IDX2_A
  ON goatada_test.DIST_CONSUMER_REQ_PREFERENCE_A (CONSUMER_REQUEST_REF_TYPE, CONSUMER_REQUEST_REF_VALUE);

CREATE TABLE goatada_test.DIST_CONSUMER_REQ_SETTING
(
  CONSUMER_REQ_SETTING_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  PREFERENCE_IDENTIFIER   VARCHAR(10)                                      NOT NULL,
  SETTING_ATTRIBUTE       VARCHAR(100)                                     NOT NULL,
  SETTING_VALUE           VARCHAR(250)                                     NOT NULL,
  START_DATE_TIME         DATETIME(6)                                      NOT NULL,
  END_DATE_TIME           DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                 VARCHAR(10)                                      NOT NULL,
  VERSION                 INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N'                           NOT NULL,
  CONSTRAINT FK_DIST_CONSUMER_REQ_SETTING
  FOREIGN KEY (PREFERENCE_IDENTIFIER) REFERENCES goatada_test.DIST_CONSUMER_REQ_PREFERENCE (PREFERENCE_IDENTIFIER)
);

CREATE INDEX goatada_test.DIST_CONSUMER_REQ_SETTING_IDX1
  ON goatada_test.DIST_CONSUMER_REQ_SETTING (PREFERENCE_IDENTIFIER);

CREATE TABLE goatada_test.DIST_CONSUMER_REQ_SETTING_A
(
  CONSUMER_REQ_SETTING_PK DECIMAL(38)  NOT NULL,
  REVISION_NUMBER         INT          NOT NULL,
  REVISION_TYPE           INT          NULL,
  PREFERENCE_IDENTIFIER   VARCHAR(10)  NULL,
  SETTING_ATTRIBUTE       VARCHAR(100) NULL,
  SETTING_VALUE           VARCHAR(250) NULL,
  START_DATE_TIME         DATETIME(6)  NULL,
  END_DATE_TIME           DATETIME(6)  NULL,
  USER_ID                 VARCHAR(10)  NULL,
  VERSION                 INT          NULL,
  PRIMARY KEY (CONSUMER_REQ_SETTING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_CONSUMER_REQ_SET_IDX1_A
  ON goatada_test.DIST_CONSUMER_REQ_SETTING_A (PREFERENCE_IDENTIFIER);

CREATE TABLE goatada_test.DIST_CONSUMING_APPLICATION
(
  CONSUMING_APPLICATION_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_IDENTIFIER      VARCHAR(30)                                      NOT NULL,
  APPLICATION_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  APPLICATION_NAME         VARCHAR(250)                                     NOT NULL,
  START_DATE_TIME          DATETIME(6)                                      NOT NULL,
  END_DATE_TIME            DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                  VARCHAR(10)                                      NOT NULL,
  VERSION                  INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.DIST_CONSUMING_APPLICATON_IDX
  ON goatada_test.DIST_CONSUMING_APPLICATION (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER);

CREATE TABLE goatada_test.DIST_CONSUMING_APPLICATION_A
(
  CONSUMING_APPLICATION_PK INT          NOT NULL,
  REVISION_NUMBER          INT          NOT NULL,
  REVISION_TYPE            INT          NULL,
  CONSUMER_IDENTIFIER      VARCHAR(30)  NULL,
  APPLICATION_IDENTIFIER   VARCHAR(30)  NULL,
  APPLICATION_NAME         VARCHAR(250) NULL,
  START_DATE_TIME          DATETIME(6)  NULL,
  END_DATE_TIME            DATETIME(6)  NULL,
  USER_ID                  VARCHAR(10)  NULL,
  VERSION                  INT          NULL,
  PRIMARY KEY (CONSUMING_APPLICATION_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_CONSUMING_APP_IDX_A
  ON goatada_test.DIST_CONSUMING_APPLICATION_A (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER);

CREATE TABLE goatada_test.DIST_CONS_REQ_DETAIL_LOG
(
  CONS_REQ_DETAIL_LOG_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQUEST_LOG_PK    INT                 NOT NULL,
  LOG_CODE                   VARCHAR(30)         NOT NULL,
  ALT_LOG_CODE               VARCHAR(30)         NULL,
  INSTRUMENT_ID              VARCHAR(10)         NULL,
  ACTION_FLG                 VARCHAR(1)          NOT NULL,
  XREF_TYPE                  VARCHAR(30)         NULL,
  XREF_VALUE                 VARCHAR(50)         NULL,
  ASSET_CLASS                VARCHAR(30)         NULL,
  ASSET_SUBCLASS             VARCHAR(30)         NULL,
  ADDITIONAL_INFO            VARCHAR(2)          NULL,
  ALT_XREF_TYPE              VARCHAR(30)         NULL,
  ALT_XREF_VALUE             VARCHAR(50)         NULL,
  LOG_REGISTRATION_DATE_TIME DATETIME(6)         NOT NULL,
  IS_SUBJECT_CREATED         TINYINT DEFAULT '0' NOT NULL,
  VERSION                    INT DEFAULT '0'     NOT NULL,
  CONSTRAINT FK_DIST_CONSREQDTL_CONSREQLOG
  FOREIGN KEY (CONSUMER_REQUEST_LOG_PK) REFERENCES goatada_test.DIST_CONSUMER_REQUEST_LOG (CONSUMER_REQUEST_LOG_PK)
);

CREATE INDEX goatada_test.FK_DIST_CONSREQDTL_CONSREQLOG
  ON goatada_test.DIST_CONS_REQ_DETAIL_LOG (CONSUMER_REQUEST_LOG_PK);

CREATE TABLE goatada_test.DIST_DATA_CONSUMER
(
  DATA_CONSUMER_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  CONSUMER_NAME       VARCHAR(250)                                     NOT NULL,
  START_DATE_TIME     DATETIME(6)                                      NOT NULL,
  END_DATE_TIME       DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID             VARCHAR(10)                                      NOT NULL,
  VERSION             INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA           VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.DIST_DATA_CONSUMER_IDX
  ON goatada_test.DIST_DATA_CONSUMER (CONSUMER_IDENTIFIER);

CREATE TABLE goatada_test.DIST_DATA_CONSUMER_A
(
  DATA_CONSUMER_PK    INT          NOT NULL,
  REVISION_NUMBER     INT          NOT NULL,
  REVISION_TYPE       INT          NULL,
  CONSUMER_IDENTIFIER VARCHAR(30)  NULL,
  CONSUMER_NAME       VARCHAR(250) NULL,
  START_DATE_TIME     DATETIME(6)  NULL,
  END_DATE_TIME       DATETIME(6)  NULL,
  USER_ID             VARCHAR(10)  NULL,
  VERSION             INT          NULL,
  PRIMARY KEY (DATA_CONSUMER_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_DATA_CONSUMER_IDX_A
  ON goatada_test.DIST_DATA_CONSUMER_A (CONSUMER_IDENTIFIER);

CREATE TABLE goatada_test.DIST_DELIVERY_CHANNEL_SETT
(
  DELIVERY_CHANNEL_SETTING_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  PREFERENCE_IDENTIFIER       VARCHAR(30)                                      NOT NULL,
  DELIVERY_CHANNEL_ATTRIBUTE  VARCHAR(250)                                     NOT NULL,
  DELIVERY_CHANNEL_VALUE      VARCHAR(600)                                     NOT NULL,
  START_DATE_TIME             DATETIME(6)                                      NOT NULL,
  END_DATE_TIME               DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                     VARCHAR(10)                                      NOT NULL,
  VERSION                     INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                   VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.DIST_DELIVERY_CHANNEL_SET_IDX
  ON goatada_test.DIST_DELIVERY_CHANNEL_SETT (PREFERENCE_IDENTIFIER);

CREATE TABLE goatada_test.DIST_DELIVERY_CHANNEL_SETT_A
(
  DELIVERY_CHANNEL_SETTING_PK INT          NOT NULL,
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  PREFERENCE_IDENTIFIER       VARCHAR(30)  NULL,
  DELIVERY_CHANNEL_ATTRIBUTE  VARCHAR(250) NULL,
  DELIVERY_CHANNEL_VALUE      VARCHAR(600) NULL,
  START_DATE_TIME             DATETIME(6)  NULL,
  END_DATE_TIME               DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  VERSION                     INT          NULL,
  PRIMARY KEY (DELIVERY_CHANNEL_SETTING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_DELIV_CHAN_SET_IDX_A
  ON goatada_test.DIST_DELIVERY_CHANNEL_SETT_A (PREFERENCE_IDENTIFIER);

CREATE TABLE goatada_test.DIST_DISTRIBUTION
(
  DISTRIBUTION_IDENTIFIER       INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_REF_TYPE         VARCHAR(30)         NOT NULL,
  DISTRIBUTION_REF_VALUE        VARCHAR(250)        NOT NULL,
  APPLICABILITY_DATE            DATETIME(6)         NOT NULL,
  BEGIN_DISTRIBUTION_DATE_TIME  DATETIME(6)         NULL,
  FINISH_DISTRIBUTION_DATE_TIME DATETIME(6)         NULL,
  PROCESS_NAME                  VARCHAR(250)        NULL,
  VERSION                       INT DEFAULT '0'     NOT NULL,
  BEST_TIME                     TINYINT DEFAULT '0' NULL
);

CREATE INDEX goatada_test.DIST_DISTRIBUTION_IDX
  ON goatada_test.DIST_DISTRIBUTION (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE);

CREATE TABLE goatada_test.DIST_DISTRIBUTION_DELIVERY
(
  DISTRIBUTION_DELIVERY_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_IDENTIFIER  INT             NOT NULL,
  CONSUMER_IDENTIFIER      VARCHAR(30)     NULL,
  APPLICATION_IDENTIFIER   VARCHAR(30)     NULL,
  DISTRIBUTION_CHANNEL     VARCHAR(30)     NOT NULL,
  FILENAME                 VARCHAR(250)    NULL,
  NUM_RECORDS_INCLUDED     INT             NOT NULL,
  DISTRIB_DELIVERY_RESULT  VARCHAR(30)     NOT NULL,
  DISTRIB_DELIVERY_MESSAGE VARCHAR(250)    NULL,
  VERSION                  INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_DIST_DISTRIBUTION_DELIVERY
  FOREIGN KEY (DISTRIBUTION_IDENTIFIER) REFERENCES goatada_test.DIST_DISTRIBUTION (DISTRIBUTION_IDENTIFIER)
);

CREATE INDEX goatada_test.DIST_DISTRIBUTION_DELIV_IDX
  ON goatada_test.DIST_DISTRIBUTION_DELIVERY (DISTRIBUTION_IDENTIFIER, CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER, DISTRIBUTION_CHANNEL);

CREATE INDEX goatada_test.DIST_DISTRIBUTION_DELIV_IDX2
  ON goatada_test.DIST_DISTRIBUTION_DELIVERY (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER);

CREATE TABLE goatada_test.DIST_DISTRIBUTION_PKG_MSGS
(
  DIST_DISTRIBUTION_PKG_MSGS_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_DELIVERY_FK      INT             NOT NULL,
  MESSAGE                       VARCHAR(400)    NOT NULL,
  SEVERITY                      VARCHAR(40)     NOT NULL,
  SUBJECT_TYPE                  VARCHAR(1)      NULL,
  SUBJECT_ID                    VARCHAR(12)     NULL,
  CREATION_TIME                 DATETIME(6)     NOT NULL,
  VERSION                       INT DEFAULT '0' NOT NULL,
  CONSTRAINT IDX_DIST_PKG_MSGS_PK_FK
  UNIQUE (DISTRIBUTION_DELIVERY_FK, DIST_DISTRIBUTION_PKG_MSGS_PK),
  CONSTRAINT FK_DELIVERY_MSGS_DELIVERY
  FOREIGN KEY (DISTRIBUTION_DELIVERY_FK) REFERENCES goatada_test.DIST_DISTRIBUTION_DELIVERY (DISTRIBUTION_DELIVERY_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.IDX_DIST_PKG_MSGS_SUBJECT
  ON goatada_test.DIST_DISTRIBUTION_PKG_MSGS (SUBJECT_TYPE, SUBJECT_ID);

CREATE INDEX goatada_test.IDX_DIST_PKG_MSGS_SUBJECT_ID
  ON goatada_test.DIST_DISTRIBUTION_PKG_MSGS (SUBJECT_ID);

CREATE TABLE goatada_test.DIST_DISTRIB_CHANNEL_PREF
(
  DISTRIB_CHANNEL_PREF_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_REF_TYPE   VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_REF_VALUE  VARCHAR(250)                                     NOT NULL,
  CONSUMER_IDENTIFIER     VARCHAR(30)                                      NULL,
  APPLICATION_IDENTIFIER  VARCHAR(30)                                      NULL,
  PREFERENCE_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_CHANNEL    VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME         DATETIME(6)                                      NOT NULL,
  END_DATE_TIME           DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                 VARCHAR(10)                                      NOT NULL,
  VERSION                 INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.DIST_DISTRIB_CHANNEL_PREF_IDX1
  ON goatada_test.DIST_DISTRIB_CHANNEL_PREF (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE, PREFERENCE_IDENTIFIER, DISTRIBUTION_CHANNEL);

CREATE INDEX goatada_test.DIST_DISTRIB_CHANNEL_PREF_IDX2
  ON goatada_test.DIST_DISTRIB_CHANNEL_PREF (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER, PREFERENCE_IDENTIFIER, DISTRIBUTION_CHANNEL);

CREATE TABLE goatada_test.DIST_DISTRIB_CHANNEL_PREF_A
(
  DISTRIB_CHANNEL_PREF_PK INT          NOT NULL,
  REVISION_NUMBER         INT          NOT NULL,
  REVISION_TYPE           INT          NULL,
  DISTRIBUTION_REF_TYPE   VARCHAR(30)  NULL,
  DISTRIBUTION_REF_VALUE  VARCHAR(250) NULL,
  CONSUMER_IDENTIFIER     VARCHAR(30)  NULL,
  APPLICATION_IDENTIFIER  VARCHAR(30)  NULL,
  PREFERENCE_IDENTIFIER   VARCHAR(30)  NULL,
  DISTRIBUTION_CHANNEL    VARCHAR(30)  NULL,
  START_DATE_TIME         DATETIME(6)  NULL,
  END_DATE_TIME           DATETIME(6)  NULL,
  USER_ID                 VARCHAR(10)  NULL,
  VERSION                 INT          NULL,
  PRIMARY KEY (DISTRIB_CHANNEL_PREF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.DIST_DISTR_CHAN_P_IDX1_A
  ON goatada_test.DIST_DISTRIB_CHANNEL_PREF_A (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE, PREFERENCE_IDENTIFIER, DISTRIBUTION_CHANNEL);

CREATE INDEX goatada_test.DIST_DISTR_CHAN_P_IDX2_A
  ON goatada_test.DIST_DISTRIB_CHANNEL_PREF_A (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER, PREFERENCE_IDENTIFIER, DISTRIBUTION_CHANNEL);

CREATE TABLE goatada_test.DYNEL_ELEMENT_DEF
(
  DYNEL_ELEMENT_DEF_ID INT AUTO_INCREMENT
    PRIMARY KEY,
  SCRIPT_NAME          VARCHAR(60)     NULL,
  ELEMENT_TYPE         VARCHAR(30)     NOT NULL,
  SUBJECT_ID           VARCHAR(12)     NULL,
  TAG_TREE             VARCHAR(30)     NULL,
  TAG_VALUE            VARCHAR(30)     NULL,
  MODIFIED_DATE_TIME   DATETIME(6)     NOT NULL,
  USER_ID              VARCHAR(10)     NOT NULL,
  VERSION              INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.IDX_DYNEL_ELE_DEF_SUBJECT_ID
  ON goatada_test.DYNEL_ELEMENT_DEF (SUBJECT_ID);

CREATE TABLE goatada_test.DYNEL_ELEMENT_DEF_PARAM
(
  DYNEL_ELEMENT_DEF_PARAM_ID INT AUTO_INCREMENT
    PRIMARY KEY,
  DYNEL_ELEMENT_DEF_ID_FK    INT         NOT NULL,
  NAME                       VARCHAR(30) NOT NULL,
  VALUE                      VARCHAR(50) NOT NULL,
  CONSTRAINT IDX_DYNEL_NAME_PARAM_UNIQUE
  UNIQUE (DYNEL_ELEMENT_DEF_ID_FK, NAME),
  CONSTRAINT FK_DYNEL_ELEMENT_DEF_ID
  FOREIGN KEY (DYNEL_ELEMENT_DEF_ID_FK) REFERENCES goatada_test.DYNEL_ELEMENT_DEF (DYNEL_ELEMENT_DEF_ID)
    ON DELETE CASCADE
);

CREATE TABLE goatada_test.ELEMENT_MANAGED
(
  ELEMENT_MANAGED_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID         VARCHAR(12) NOT NULL,
  ELEMENT_TYPE       VARCHAR(35) NOT NULL
);

CREATE INDEX goatada_test.IDX_EM_SUBJECT_ELEMENT_TYPE
  ON goatada_test.ELEMENT_MANAGED (SUBJECT_ID, ELEMENT_TYPE);

CREATE TABLE goatada_test.ELEMENT_MANAGED_LK
(
  ELEMENT_MANAGED_LK_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  ELEMENT_MANAGED_FK    INT          NOT NULL,
  PROP_NAME             VARCHAR(35)  NULL,
  PROP_VALUE            VARCHAR(100) NULL,
  CONSTRAINT FK_ELE_MANAGED_LK_ELE_MANAGED
  FOREIGN KEY (ELEMENT_MANAGED_FK) REFERENCES goatada_test.ELEMENT_MANAGED (ELEMENT_MANAGED_PK)
);

CREATE INDEX goatada_test.IDX_FK_ELEMENT_MANAGED_LK
  ON goatada_test.ELEMENT_MANAGED_LK (ELEMENT_MANAGED_FK);

CREATE TABLE goatada_test.EL_C_ADDRESS
(
  LOGICAL_KEY        INT          NOT NULL,
  COUNTRY_CODE       VARCHAR(35)  NULL,
  CITY               VARCHAR(250) NULL,
  POSTAL_CODE        VARCHAR(35)  NULL,
  STATE              VARCHAR(35)  NULL,
  STREET             VARCHAR(250) NULL,
  APPLICABILITY_DATE DATETIME(6)  NOT NULL,
  UUID               VARCHAR(40)  NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)  NOT NULL,
  USER_ID            VARCHAR(10)  NOT NULL,
  VERSION            DECIMAL      NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_ADDRESS
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_ADDRESS_A
(
  LOGICAL_KEY        INT          NULL,
  COUNTRY_CODE       VARCHAR(35)  NULL,
  CITY               VARCHAR(250) NULL,
  POSTAL_CODE        VARCHAR(35)  NULL,
  STATE              VARCHAR(35)  NULL,
  STREET             VARCHAR(250) NULL,
  APPLICABILITY_DATE DATETIME(6)  NULL,
  UUID               VARCHAR(40)  NULL,
  LAST_MODIFIED_DATE DATETIME(6)  NULL,
  USER_ID            VARCHAR(10)  NULL,
  VERSION            DECIMAL      NULL,
  REVISION_NUMBER    INT          NOT NULL,
  REVISION_TYPE      INT          NULL
);

CREATE TABLE goatada_test.EL_C_AMOUNT
(
  LOGICAL_KEY        INT             NOT NULL,
  CURRENCY           VARCHAR(35)     NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  AMOUNT             DECIMAL(30, 10) NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_AMOUNT
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_AMOUNT_A
(
  LOGICAL_KEY        INT             NOT NULL,
  CURRENCY           VARCHAR(35)     NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  AMOUNT             DECIMAL(30, 10) NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_BEST_TRADING_VENUE
(
  LOGICAL_KEY        INT         NOT NULL,
  CURRENCY           VARCHAR(35) NULL,
  EXCHANGE           VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_BEST_TRADING_VENUE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_BEST_TRADING_VENUE_A
(
  LOGICAL_KEY        INT         NULL,
  CURRENCY           VARCHAR(35) NULL,
  EXCHANGE           VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_CAPITAL_PROTECTION
(
  LOGICAL_KEY        INT             NOT NULL,
  CODE               VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CAPITAL_PROTECTION
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CAPITAL_PROTECTION_A
(
  LOGICAL_KEY        INT             NULL,
  CODE               VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_CLASSIFICATION
(
  LOGICAL_KEY        INT         NOT NULL,
  ASSET_CLASS        VARCHAR(35) NULL,
  INSTRUMENT_CLASS   VARCHAR(35) NULL,
  ASSET_SUBCLASS     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CLASSIFICATION
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CLASSIFICATION_A
(
  LOGICAL_KEY        INT         NULL,
  ASSET_CLASS        VARCHAR(35) NULL,
  INSTRUMENT_CLASS   VARCHAR(35) NULL,
  ASSET_SUBCLASS     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_CODE
(
  LOGICAL_KEY        INT         NOT NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CODE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CODES_6
(
  LOGICAL_KEY        INT         NOT NULL,
  CODE1              VARCHAR(35) NULL,
  CODE2              VARCHAR(35) NULL,
  CODE3              VARCHAR(35) NULL,
  CODE4              VARCHAR(35) NULL,
  CODE5              VARCHAR(35) NULL,
  CODE6              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE INDEX goatada_test.IDX_FK_EL_C_CODES_6
  ON goatada_test.EL_C_CODES_6 (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_C_CODES_6_A
(
  LOGICAL_KEY        INT         NULL,
  CODE1              VARCHAR(35) NULL,
  CODE2              VARCHAR(35) NULL,
  CODE3              VARCHAR(35) NULL,
  CODE4              VARCHAR(35) NULL,
  CODE5              VARCHAR(35) NULL,
  CODE6              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_CODE_A
(
  LOGICAL_KEY        INT         NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_CODE_NUMBER
(
  LOGICAL_KEY        INT             NOT NULL,
  CODE               VARCHAR(35)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CODE_NUMBER_A
(
  LOGICAL_KEY        INT             NULL,
  CODE               VARCHAR(35)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_CODE_TEXT
(
  LOGICAL_KEY        INT           NOT NULL,
  CODE               VARCHAR(35)   NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NOT NULL,
  UUID               VARCHAR(40)   NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)   NOT NULL,
  USER_ID            VARCHAR(10)   NOT NULL,
  VERSION            DECIMAL       NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CODE_TEXT
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CODE_TEXT_A
(
  LOGICAL_KEY        INT           NULL,
  CODE               VARCHAR(35)   NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NULL,
  UUID               VARCHAR(40)   NULL,
  LAST_MODIFIED_DATE DATETIME(6)   NULL,
  USER_ID            VARCHAR(10)   NULL,
  VERSION            DECIMAL       NULL,
  REVISION_NUMBER    INT           NOT NULL,
  REVISION_TYPE      INT           NULL
);

CREATE TABLE goatada_test.EL_C_CONVERSION_FACTOR
(
  LOGICAL_KEY        INT             NOT NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CONVERSION_FACTOR
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_CONVERSION_FACTOR_A
(
  LOGICAL_KEY        INT             NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_CORRECTED_PRICE
(
  LOGICAL_KEY           INT             NOT NULL,
  BASE_PRICE_UUID       VARCHAR(40)     NULL,
  INFLATION_FACTOR      DECIMAL(30, 10) NULL,
  PROVIDER_PRICE_SOURCE VARCHAR(35)     NULL,
  QUOTATION_TYPE        VARCHAR(35)     NULL,
  VALUE_TIME            BIGINT          NULL,
  VALUE_DATE            DATE            NULL,
  VALUE                 DECIMAL(30, 10) NULL,
  TIMEZONE_OFFSET       DECIMAL(12, 2)  NULL,
  APPLICABILITY_DATE    DATETIME(6)     NOT NULL,
  UUID                  VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE    DATETIME(6)     NOT NULL,
  USER_ID               VARCHAR(10)     NOT NULL,
  VERSION               DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_CORRECTED_PRICE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE INDEX goatada_test.EL_C_CORRECTED_PRICE_SDD
  ON goatada_test.EL_C_CORRECTED_PRICE (LOGICAL_KEY, VALUE_DATE);

CREATE INDEX goatada_test.IDX_C_CORRECTED_PRICE_VAL_DATE
  ON goatada_test.EL_C_CORRECTED_PRICE (VALUE_DATE);

CREATE TABLE goatada_test.EL_C_CORRECTED_PRICE_A
(
  LOGICAL_KEY           INT             NULL,
  BASE_PRICE_UUID       VARCHAR(40)     NULL,
  INFLATION_FACTOR      DECIMAL(30, 10) NULL,
  PROVIDER_PRICE_SOURCE VARCHAR(35)     NULL,
  QUOTATION_TYPE        VARCHAR(35)     NULL,
  VALUE_TIME            BIGINT          NULL,
  VALUE_DATE            DATE            NULL,
  VALUE                 DECIMAL(30, 10) NULL,
  TIMEZONE_OFFSET       DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE    DATETIME(6)     NULL,
  UUID                  VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE    DATETIME(6)     NULL,
  USER_ID               VARCHAR(10)     NULL,
  VERSION               DECIMAL         NULL,
  REVISION_NUMBER       INT             NOT NULL,
  REVISION_TYPE         INT             NULL
);

CREATE TABLE goatada_test.EL_C_COUPON_INFO
(
  LOGICAL_KEY        INT         NOT NULL,
  INFLATION_CODE     VARCHAR(35) NULL,
  REPAYMENT_LINKED   VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_COUPON_INFO
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_COUPON_INFO_A
(
  LOGICAL_KEY        INT         NULL,
  INFLATION_CODE     VARCHAR(35) NULL,
  REPAYMENT_LINKED   VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_DATE
(
  LOGICAL_KEY        INT         NOT NULL,
  DATE_VALUE         DATETIME(6) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_DATE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_DATE_A
(
  LOGICAL_KEY        INT         NULL,
  DATE_VALUE         DATETIME(6) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_DENOMINATION_ITEM
(
  LOGICAL_KEY        INT             NOT NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_DENOMINATION_ITEM
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_DENOMINATION_ITEM_A
(
  LOGICAL_KEY        INT             NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_DURATION
(
  LOGICAL_KEY        INT         NOT NULL,
  DURATION_VALUE     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_DURATION
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_DURATION_A
(
  LOGICAL_KEY        INT         NULL,
  DURATION_VALUE     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_FIXING
(
  LOGICAL_KEY        INT             NOT NULL,
  PREPOST            VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_FIXING
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_FIXING_A
(
  LOGICAL_KEY        INT             NULL,
  PREPOST            VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_FREQUENCY
(
  LOGICAL_KEY        INT         NOT NULL,
  FREQUENCY          VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_FREQUENCY
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_FREQUENCY_A
(
  LOGICAL_KEY        INT         NULL,
  FREQUENCY          VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_INTEREST_RATE
(
  LOGICAL_KEY          INT             NOT NULL,
  INTEREST_RATE_PERIOD VARCHAR(35)     NULL,
  VALUE                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE   DATETIME(6)     NOT NULL,
  UUID                 VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE   DATETIME(6)     NOT NULL,
  USER_ID              VARCHAR(10)     NOT NULL,
  VERSION              DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_INTEREST_RATE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE)
);

CREATE TABLE goatada_test.EL_C_INTEREST_RATE_A
(
  LOGICAL_KEY          INT             NULL,
  INTEREST_RATE_PERIOD VARCHAR(35)     NULL,
  VALUE                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE   DATETIME(6)     NULL,
  UUID                 VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE   DATETIME(6)     NULL,
  USER_ID              VARCHAR(10)     NULL,
  VERSION              DECIMAL         NULL,
  REVISION_NUMBER      INT             NOT NULL,
  REVISION_TYPE        INT             NULL
);

CREATE TABLE goatada_test.EL_C_LOGICAL_KEY
(
  LOGICAL_KEY_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID     VARCHAR(12) NOT NULL,
  ELEMENT_TYPE   VARCHAR(35) NOT NULL,
  PROVIDER       VARCHAR(35) NOT NULL,
  SUBJECT_ID_2   VARCHAR(12) NULL,
  CODE_1         VARCHAR(35) NULL,
  CODE_2         VARCHAR(35) NULL,
  CODE_3         VARCHAR(35) NULL,
  CODE_4         VARCHAR(35) NULL,
  INTEGER_1      INT         NULL,
  INTEGER_2      INT         NULL,
  DATE_1         DATE        NULL,
  TEXT_1         VARCHAR(40) NULL,
  CONSTRAINT UK_C_LOGICAL_KEY
  UNIQUE (SUBJECT_ID, ELEMENT_TYPE, PROVIDER, SUBJECT_ID_2, CODE_1, CODE_2, CODE_3, CODE_4, INTEGER_1, INTEGER_2, DATE_1, TEXT_1)
);

ALTER TABLE goatada_test.EL_C_ADDRESS
  ADD CONSTRAINT goatada_test.FK_C_ADDRESS_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_AMOUNT
  ADD CONSTRAINT goatada_test.FK_C_AMOUNT_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_BEST_TRADING_VENUE
  ADD CONSTRAINT goatada_test.FK_C_BEST_TRADING_VENUE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CAPITAL_PROTECTION
  ADD CONSTRAINT goatada_test.FK_C_CAPITAL_PROTECTION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CLASSIFICATION
  ADD CONSTRAINT goatada_test.FK_C_CLASSIFICATION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CODE
  ADD CONSTRAINT goatada_test.FK_C_CODE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CODES_6
  ADD CONSTRAINT goatada_test.FK_C_CODES_6_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CODE_NUMBER
  ADD CONSTRAINT goatada_test.FK_C_CODE_NUMBER_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CODE_TEXT
  ADD CONSTRAINT goatada_test.FK_C_CODE_TEXT_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CONVERSION_FACTOR
  ADD CONSTRAINT goatada_test.FK_C_CONVERSION_FACTOR_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_CORRECTED_PRICE
  ADD CONSTRAINT goatada_test.FK_C_CORRECTED_PRICE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_COUPON_INFO
  ADD CONSTRAINT goatada_test.FK_C_COUPON_INFO_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_DATE
  ADD CONSTRAINT goatada_test.FK_C_DATE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_DENOMINATION_ITEM
  ADD CONSTRAINT goatada_test.FK_C_DENOM_ITEM_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_DURATION
  ADD CONSTRAINT goatada_test.FK_C_DURATION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_FIXING
  ADD CONSTRAINT goatada_test.FK_C_FIXING_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_FREQUENCY
  ADD CONSTRAINT goatada_test.FK_C_FREQUENCY_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_C_INTEREST_RATE
  ADD CONSTRAINT goatada_test.FK_C_INTEREST_RATE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK);

CREATE TABLE goatada_test.EL_C_MIFID
(
  LOGICAL_KEY        INT         NOT NULL,
  REPORTER           VARCHAR(35) NULL,
  VALUE              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_MIFID
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_MIFID_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_MIFID_A
(
  LOGICAL_KEY        INT         NULL,
  REPORTER           VARCHAR(35) NULL,
  VALUE              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_NUMBER
(
  LOGICAL_KEY        INT             NOT NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_NUMBER
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_NUMBER_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_NUMBER_A
(
  LOGICAL_KEY        INT             NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_PAY_EVENT_DET_AMOUNT
(
  LOGICAL_KEY        INT             NOT NULL,
  INV_CURRENCY       VARCHAR(35)     NULL,
  INV_INSTRUMENT     VARCHAR(12)     NULL,
  INV_QUOTATION_TYPE VARCHAR(35)     NULL,
  INV_UNIT_QUANTITY  DECIMAL(30, 10) NULL,
  INV_VALUE          DECIMAL(30, 10) NULL,
  PAY_AMOUNT_TYPE    VARCHAR(35)     NULL,
  PAY_CURRENCY       VARCHAR(35)     NULL,
  PAY_QUOTATION_TYPE VARCHAR(35)     NULL,
  PAY_UNIT_QUANTITY  DECIMAL(30, 10) NULL,
  PAY_VALUE          DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_PAY_EVENT_DET_AMOUNT
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_PAY_EVT_DTL_AMT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_PAY_EVENT_DET_AMOUNT_A
(
  LOGICAL_KEY        INT             NULL,
  INV_CURRENCY       VARCHAR(35)     NULL,
  INV_INSTRUMENT     VARCHAR(12)     NULL,
  INV_QUOTATION_TYPE VARCHAR(35)     NULL,
  INV_UNIT_QUANTITY  DECIMAL(30, 10) NULL,
  INV_VALUE          DECIMAL(30, 10) NULL,
  PAY_AMOUNT_TYPE    VARCHAR(35)     NULL,
  PAY_CURRENCY       VARCHAR(35)     NULL,
  PAY_QUOTATION_TYPE VARCHAR(35)     NULL,
  PAY_UNIT_QUANTITY  DECIMAL(30, 10) NULL,
  PAY_VALUE          DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_PAY_EVENT_DET_INSTR
(
  LOGICAL_KEY        INT             NOT NULL,
  INSTRUMENT         VARCHAR(12)     NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_PAY_EVENT_DET_INSTR
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_PAY_EVT_DET_INSTR_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_PAY_EVENT_DET_INSTR_A
(
  LOGICAL_KEY        INT             NULL,
  INSTRUMENT         VARCHAR(12)     NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_PERIOD
(
  LOGICAL_KEY        INT         NOT NULL,
  START_DATE         DATE        NULL,
  END_DATE           DATE        NULL,
  NUMBER_OF_DAYS     INT         NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_PERIOD
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_PERIOD_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_PERIOD_A
(
  LOGICAL_KEY        INT         NULL,
  START_DATE         DATE        NULL,
  END_DATE           DATE        NULL,
  NUMBER_OF_DAYS     INT         NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_QUOTATION
(
  LOGICAL_KEY        INT             NOT NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_QUOTATION
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_QUOTATION_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_QUOTATION_A
(
  LOGICAL_KEY        INT             NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_QUOT_FORMULA_PRICE
(
  LOGICAL_KEY        INT             NOT NULL,
  CURRENCY           VARCHAR(35)     NULL,
  FORMULA            VARCHAR(35)     NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_QUOT_FORMULA_PRICE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_QUOT_FORM_PRICE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_QUOT_FORMULA_PRICE_A
(
  LOGICAL_KEY        INT             NULL,
  CURRENCY           VARCHAR(35)     NULL,
  FORMULA            VARCHAR(35)     NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_RANGED_NUM_CODE
(
  LOGICAL_KEY        INT             NOT NULL,
  STARTDATE          DATETIME(6)     NULL,
  ENDDATE            DATETIME(6)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  CODE               VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_RANGED_NUM_CODE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.IDX_FK_EL_C_RANGED_NUM_CODE
  ON goatada_test.EL_C_RANGED_NUM_CODE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_C_RANGED_NUM_CODE_A
(
  LOGICAL_KEY        INT             NULL,
  STARTDATE          DATETIME(6)     NULL,
  ENDDATE            DATETIME(6)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  CODE               VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_RATING
(
  LOGICAL_KEY        INT         NOT NULL,
  ACTION             VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  OUTLOOK            VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_RATING
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_RATING_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_RATING_A
(
  LOGICAL_KEY        INT         NULL,
  ACTION             VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  OUTLOOK            VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_REFERENCE_RATE
(
  LOGICAL_KEY             INT             NOT NULL,
  REFERENCE_RATE          VARCHAR(35)     NULL,
  FORMULA_BASED_INDICATOR VARCHAR(35)     NULL,
  SPREAD_VALUE            DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE      DATETIME(6)     NOT NULL,
  UUID                    VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE      DATETIME(6)     NOT NULL,
  USER_ID                 VARCHAR(10)     NOT NULL,
  VERSION                 DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_REFERENCE_RATE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_REFERENCE_RATE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_REFERENCE_RATE_A
(
  LOGICAL_KEY             INT             NULL,
  REFERENCE_RATE          VARCHAR(35)     NULL,
  FORMULA_BASED_INDICATOR VARCHAR(35)     NULL,
  SPREAD_VALUE            DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE      DATETIME(6)     NULL,
  UUID                    VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE      DATETIME(6)     NULL,
  USER_ID                 VARCHAR(10)     NULL,
  VERSION                 DECIMAL         NULL,
  REVISION_NUMBER         INT             NOT NULL,
  REVISION_TYPE           INT             NULL
);

CREATE TABLE goatada_test.EL_C_STRIKE
(
  LOGICAL_KEY        INT             NOT NULL,
  STRIKE_VALUE       DECIMAL(30, 10) NULL,
  STRIKE_TYPE        VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_STRIKE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_STRIKE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_STRIKE_A
(
  LOGICAL_KEY        INT             NULL,
  STRIKE_VALUE       DECIMAL(30, 10) NULL,
  STRIKE_TYPE        VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_SUBJECT
(
  LOGICAL_KEY        INT         NOT NULL,
  SUBJECT_ID         VARCHAR(12) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_SUBJECT
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_ELEM_SUBJECT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_SUBJECT_A
(
  LOGICAL_KEY        INT         NULL,
  SUBJECT_ID         VARCHAR(12) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_C_SUBJECT_CONVERSION
(
  LOGICAL_KEY        INT             NOT NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  SUBJECT_ID         VARCHAR(12)     NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_SUBJECT_CONVERSION
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_SUBJECT_CONVERSION_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_SUBJECT_CONVERSION_A
(
  LOGICAL_KEY        INT             NULL,
  CONVERSION_TO      DECIMAL(30, 10) NULL,
  SUBJECT_ID         VARCHAR(12)     NULL,
  CONVERSION_FROM    DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_SUBJECT_PRICE
(
  LOGICAL_KEY        INT             NOT NULL,
  SUBJECT_ID         VARCHAR(12)     NULL,
  CURRENCY           VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NOT NULL,
  USER_ID            VARCHAR(10)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_SUBJECT_PRICE
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_SUBJECT_PRICE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_SUBJECT_PRICE_A
(
  LOGICAL_KEY        INT             NULL,
  SUBJECT_ID         VARCHAR(12)     NULL,
  CURRENCY           VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  UUID               VARCHAR(40)     NULL,
  LAST_MODIFIED_DATE DATETIME(6)     NULL,
  USER_ID            VARCHAR(10)     NULL,
  VERSION            DECIMAL         NULL,
  REVISION_NUMBER    INT             NOT NULL,
  REVISION_TYPE      INT             NULL
);

CREATE TABLE goatada_test.EL_C_TEXT
(
  LOGICAL_KEY        INT           NOT NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NOT NULL,
  UUID               VARCHAR(40)   NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6)   NOT NULL,
  USER_ID            VARCHAR(10)   NOT NULL,
  VERSION            DECIMAL       NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_TEXT
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_TEXT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_TEXT_A
(
  LOGICAL_KEY        INT           NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NULL,
  UUID               VARCHAR(40)   NULL,
  LAST_MODIFIED_DATE DATETIME(6)   NULL,
  USER_ID            VARCHAR(10)   NULL,
  VERSION            DECIMAL       NULL,
  REVISION_NUMBER    INT           NOT NULL,
  REVISION_TYPE      INT           NULL
);

CREATE TABLE goatada_test.EL_C_UNIQUE_ID
(
  LOGICAL_KEY        INT         NOT NULL,
  UNIQUE_ID          VARCHAR(50) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  LAST_MODIFIED_DATE DATETIME(6) NOT NULL,
  USER_ID            VARCHAR(10) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  PRIMARY KEY (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT UK_C_UNIQUE_ID
  UNIQUE (LOGICAL_KEY, APPLICABILITY_DATE),
  CONSTRAINT FK_C_UNIQUE_ID_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_C_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE TABLE goatada_test.EL_C_UNIQUE_ID_A
(
  LOGICAL_KEY        INT         NULL,
  UNIQUE_ID          VARCHAR(50) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  UUID               VARCHAR(40) NULL,
  LAST_MODIFIED_DATE DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  VERSION            DECIMAL     NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL
);

CREATE TABLE goatada_test.EL_N_ADDRESS
(
  ADDRESS_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT          NOT NULL,
  COUNTRY_CODE       VARCHAR(35)  NULL,
  CITY               VARCHAR(250) NULL,
  POSTAL_CODE        VARCHAR(35)  NULL,
  STATE              VARCHAR(35)  NULL,
  STREET             VARCHAR(250) NULL,
  APPLICABILITY_DATE DATETIME(6)  NULL,
  FEED_ID            INT          NOT NULL,
  UUID               VARCHAR(40)  NOT NULL,
  VERSION            DECIMAL      NOT NULL
);

CREATE INDEX goatada_test.FK_N_ADDRESS_LOGKEY
  ON goatada_test.EL_N_ADDRESS (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_AMOUNT
(
  AMOUNT_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  CURRENCY           VARCHAR(35)     NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  AMOUNT             DECIMAL(30, 10) NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_AMOUNT_LOGKEY
  ON goatada_test.EL_N_AMOUNT (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_BEST_TRADING_VENUE
(
  BEST_TRADING_VENUE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY           INT         NOT NULL,
  CURRENCY              VARCHAR(35) NULL,
  EXCHANGE              VARCHAR(35) NULL,
  APPLICABILITY_DATE    DATETIME(6) NULL,
  FEED_ID               INT         NOT NULL,
  UUID                  VARCHAR(40) NOT NULL,
  VERSION               DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_BEST_TRADING_VENUE_LOGKEY
  ON goatada_test.EL_N_BEST_TRADING_VENUE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CAPITAL_PROTECTION
(
  CAPITAL_PROTECTION_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY           INT             NOT NULL,
  CODE                  VARCHAR(35)     NULL,
  VALUE                 DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE    DATETIME(6)     NULL,
  FEED_ID               INT             NOT NULL,
  UUID                  VARCHAR(40)     NOT NULL,
  VERSION               DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_CAPITAL_PROTECTION_LOGKEY
  ON goatada_test.EL_N_CAPITAL_PROTECTION (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CLASSIFICATION
(
  CLASSIFICATION_PK  INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  ASSET_CLASS        VARCHAR(35) NULL,
  INSTRUMENT_CLASS   VARCHAR(35) NULL,
  ASSET_SUBCLASS     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_CLASSIFICATION_LOGKEY
  ON goatada_test.EL_N_CLASSIFICATION (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CODE
(
  CODE_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_CODE_LOGKEY
  ON goatada_test.EL_N_CODE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CODES_6
(
  CODES_6_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  CODE1              VARCHAR(35) NULL,
  CODE2              VARCHAR(35) NULL,
  CODE3              VARCHAR(35) NULL,
  CODE4              VARCHAR(35) NULL,
  CODE5              VARCHAR(35) NULL,
  CODE6              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NOT NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.IDX_FK_EL_N_CODES_6
  ON goatada_test.EL_N_CODES_6 (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CODE_NUMBER
(
  CODE_NUMBER_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  CODE               VARCHAR(35)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.IDX_FK_EL_N_CODE_NUMBER
  ON goatada_test.EL_N_CODE_NUMBER (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CODE_TEXT
(
  CODE_TEXT_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT           NOT NULL,
  CODE               VARCHAR(35)   NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NOT NULL,
  FEED_ID            INT           NOT NULL,
  UUID               VARCHAR(40)   NOT NULL,
  VERSION            DECIMAL       NOT NULL
);

CREATE INDEX goatada_test.IDX_FK_EL_N_CODE_TEXT
  ON goatada_test.EL_N_CODE_TEXT (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_CONVERSION_FACTOR
(
  CONVERSION_FACTOR_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY          INT             NOT NULL,
  CONVERSION_FROM      DECIMAL(30, 10) NULL,
  CONVERSION_TO        DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE   DATETIME(6)     NULL,
  FEED_ID              INT             NOT NULL,
  UUID                 VARCHAR(40)     NOT NULL,
  VERSION              DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_CONVERSION_FACTOR_LOGKEY
  ON goatada_test.EL_N_CONVERSION_FACTOR (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_COUPON_INFO
(
  COUPON_INFO_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  INFLATION_CODE     VARCHAR(35) NULL,
  REPAYMENT_LINKED   VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_COUPON_INFO_LOGKEY
  ON goatada_test.EL_N_COUPON_INFO (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_DATE
(
  DATE_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  DATE_VALUE         DATETIME(6) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_DATE_LOGKEY
  ON goatada_test.EL_N_DATE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_DENOMINATION_ITEM
(
  DENOMINATION_ITEM_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY          INT             NOT NULL,
  QUOTATION_TYPE       VARCHAR(35)     NULL,
  UNIT_QUANTITY        DECIMAL(30, 10) NULL,
  VALUE                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE   DATETIME(6)     NULL,
  FEED_ID              INT             NOT NULL,
  UUID                 VARCHAR(40)     NOT NULL,
  VERSION              DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_DENOM_ITEM_LOGKEY
  ON goatada_test.EL_N_DENOMINATION_ITEM (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_DURATION
(
  DURATION_PK        INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  DURATION_VALUE     VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_DURATION_LOGKEY
  ON goatada_test.EL_N_DURATION (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_FIXING
(
  FIXING_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  PREPOST            VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_FIXING_LOGKEY
  ON goatada_test.EL_N_FIXING (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_FREQUENCY
(
  FREQUENCY_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  FREQUENCY          VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL
);

CREATE INDEX goatada_test.FK_N_FREQUENCY_LOGKEY
  ON goatada_test.EL_N_FREQUENCY (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_INTEREST_RATE
(
  INTEREST_RATE_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY          INT             NOT NULL,
  INTEREST_RATE_PERIOD VARCHAR(35)     NULL,
  VALUE                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE   DATETIME(6)     NULL,
  FEED_ID              INT             NOT NULL,
  UUID                 VARCHAR(40)     NOT NULL,
  VERSION              DECIMAL         NOT NULL
);

CREATE INDEX goatada_test.FK_N_INTEREST_RATE_LOGKEY
  ON goatada_test.EL_N_INTEREST_RATE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_LOGICAL_KEY
(
  LOGICAL_KEY_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID     VARCHAR(12) NOT NULL,
  ELEMENT_TYPE   VARCHAR(35) NOT NULL,
  SUBJECT_ID_2   VARCHAR(12) NULL,
  CODE_1         VARCHAR(35) NULL,
  CODE_2         VARCHAR(35) NULL,
  CODE_3         VARCHAR(35) NULL,
  CODE_4         VARCHAR(35) NULL,
  INTEGER_1      INT         NULL,
  INTEGER_2      INT         NULL,
  DATE_1         DATE        NULL,
  TEXT_1         VARCHAR(40) NULL,
  CONSTRAINT UK_N_LOGICAL_KEY
  UNIQUE (SUBJECT_ID, ELEMENT_TYPE, SUBJECT_ID_2, CODE_1, CODE_2, CODE_3, CODE_4, INTEGER_1, INTEGER_2, DATE_1, TEXT_1)
);

CREATE INDEX goatada_test.IDX_N_LK_SUBJECT_EL_TYPE
  ON goatada_test.EL_N_LOGICAL_KEY (SUBJECT_ID, ELEMENT_TYPE);

ALTER TABLE goatada_test.EL_N_ADDRESS
  ADD CONSTRAINT goatada_test.FK_N_ADDRESS_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_AMOUNT
  ADD CONSTRAINT goatada_test.FK_N_AMOUNT_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_BEST_TRADING_VENUE
  ADD CONSTRAINT goatada_test.FK_N_BEST_TRADING_VENUE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CAPITAL_PROTECTION
  ADD CONSTRAINT goatada_test.FK_N_CAPITAL_PROTECTION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CLASSIFICATION
  ADD CONSTRAINT goatada_test.FK_N_CLASSIFICATION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CODE
  ADD CONSTRAINT goatada_test.FK_N_CODE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CODES_6
  ADD CONSTRAINT goatada_test.FK_N_CODES_6_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CODE_NUMBER
  ADD CONSTRAINT goatada_test.FK_N_CODE_NUMBER_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CODE_TEXT
  ADD CONSTRAINT goatada_test.FK_N_CODE_TEXT_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_CONVERSION_FACTOR
  ADD CONSTRAINT goatada_test.FK_N_CONVERSION_FACTOR_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_COUPON_INFO
  ADD CONSTRAINT goatada_test.FK_N_COUPON_INFO_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_DATE
  ADD CONSTRAINT goatada_test.FK_N_DATE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_DENOMINATION_ITEM
  ADD CONSTRAINT goatada_test.FK_N_DENOM_ITEM_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_DURATION
  ADD CONSTRAINT goatada_test.FK_N_DURATION_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_FIXING
  ADD CONSTRAINT goatada_test.FK_N_FIXING_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_FREQUENCY
  ADD CONSTRAINT goatada_test.FK_N_FREQUENCY_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

ALTER TABLE goatada_test.EL_N_INTEREST_RATE
  ADD CONSTRAINT goatada_test.FK_N_INTEREST_RATE_LOGKEY
FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK);

CREATE TABLE goatada_test.EL_N_MIFID
(
  MIFID_PK           INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  REPORTER           VARCHAR(35) NULL,
  VALUE              VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  CONSTRAINT FK_N_MIFID_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_MIFID_LOGKEY
  ON goatada_test.EL_N_MIFID (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_NORMALIZED_PRICE
(
  NORMALIZED_PRICE_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY            INT             NOT NULL,
  PROVIDER_PRICE_SOURCE  VARCHAR(35)     NULL,
  INFLATION_FACTOR       DECIMAL(30, 10) NULL,
  VALUE_TIME             BIGINT          NULL,
  VALUE_DATE             DATE            NULL,
  VALUE                  DECIMAL(30, 10) NULL,
  TIMEZONE_OFFSET        DECIMAL(30, 10) NULL,
  QUOTATION_TYPE         VARCHAR(35)     NULL,
  APPLIED_SCALING_FACTOR DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE     DATETIME(6)     NULL,
  FEED_ID                INT             NOT NULL,
  UUID                   VARCHAR(40)     NOT NULL,
  VERSION                DECIMAL         NOT NULL,
  CONSTRAINT FK_N_NORMALIZED_PRICE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_NORMALIZED_PRICE_LOGKEY
  ON goatada_test.EL_N_NORMALIZED_PRICE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_NUMBER
(
  NUMBER_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  NBR                DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  CONSTRAINT FK_N_NUMBER_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_NUMBER_LOGKEY
  ON goatada_test.EL_N_NUMBER (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_PAY_EVENT_DET_AMOUNT
(
  PAY_EVENT_DET_AMOUNT_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY             INT             NOT NULL,
  INV_CURRENCY            VARCHAR(35)     NULL,
  INV_INSTRUMENT          VARCHAR(12)     NULL,
  INV_QUOTATION_TYPE      VARCHAR(35)     NULL,
  INV_UNIT_QUANTITY       DECIMAL(30, 10) NULL,
  INV_VALUE               DECIMAL(30, 10) NULL,
  PAY_AMOUNT_TYPE         VARCHAR(35)     NULL,
  PAY_CURRENCY            VARCHAR(35)     NULL,
  PAY_QUOTATION_TYPE      VARCHAR(35)     NULL,
  PAY_UNIT_QUANTITY       DECIMAL(30, 10) NULL,
  PAY_VALUE               DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE      DATETIME(6)     NULL,
  FEED_ID                 INT             NOT NULL,
  UUID                    VARCHAR(40)     NOT NULL,
  VERSION                 DECIMAL         NOT NULL,
  CONSTRAINT FK_N_PAY_EVT_DTL_AMT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_PAY_EVT_DTL_AMT_LOGKEY
  ON goatada_test.EL_N_PAY_EVENT_DET_AMOUNT (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_PAY_EVENT_DET_INSTR
(
  PAY_EVENT_DET_INSTR_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY            INT             NOT NULL,
  INSTRUMENT             VARCHAR(12)     NULL,
  CONVERSION_FROM        DECIMAL(30, 10) NULL,
  CONVERSION_TO          DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE     DATETIME(6)     NULL,
  FEED_ID                INT             NOT NULL,
  UUID                   VARCHAR(40)     NOT NULL,
  VERSION                DECIMAL         NOT NULL,
  CONSTRAINT FK_N_PAY_EVT_DET_INSTR_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_PAY_EVT_DET_INSTR_LOGKEY
  ON goatada_test.EL_N_PAY_EVENT_DET_INSTR (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_PERIOD
(
  PERIOD_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  START_DATE         DATE        NULL,
  END_DATE           DATE        NULL,
  NUMBER_OF_DAYS     INT         NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  CONSTRAINT FK_N_PERIOD_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_PERIOD_LOGKEY
  ON goatada_test.EL_N_PERIOD (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_QUOTATION
(
  QUOTATION_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  CONSTRAINT FK_N_QUOTATION_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_QUOTATION_LOGKEY
  ON goatada_test.EL_N_QUOTATION (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_QUOT_FORMULA_PRICE
(
  QUOT_FORMULA_PRICE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY           INT             NOT NULL,
  CURRENCY              VARCHAR(35)     NULL,
  FORMULA               VARCHAR(35)     NULL,
  QUOTATION_TYPE        VARCHAR(35)     NULL,
  VALUE                 DECIMAL(30, 10) NULL,
  UNIT_QUANTITY         DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE    DATETIME(6)     NULL,
  FEED_ID               INT             NOT NULL,
  UUID                  VARCHAR(40)     NOT NULL,
  VERSION               DECIMAL         NOT NULL,
  CONSTRAINT FK_N_QUOT_FORM_PRICE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_QUOT_FORM_PRICE_LOGKEY
  ON goatada_test.EL_N_QUOT_FORMULA_PRICE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_RANGED_NUM_CODE
(
  RANGED_NUM_CODE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  STARTDATE          DATETIME(6)     NULL,
  ENDDATE            DATETIME(6)     NULL,
  NBR                DECIMAL(30, 10) NULL,
  CODE               VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  CONSTRAINT FK_N_RANGED_NUM_CODE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.IDX_FK_EL_N_RANGED_NUM_CODE
  ON goatada_test.EL_N_RANGED_NUM_CODE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_RATING
(
  RATING_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  ACTION             VARCHAR(35) NULL,
  CODE               VARCHAR(35) NULL,
  OUTLOOK            VARCHAR(35) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  CONSTRAINT FK_N_RATING_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_RATING_LOGKEY
  ON goatada_test.EL_N_RATING (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_REFERENCE_RATE
(
  REFERENCE_RATE_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY             INT             NOT NULL,
  REFERENCE_RATE          VARCHAR(35)     NULL,
  FORMULA_BASED_INDICATOR VARCHAR(35)     NULL,
  SPREAD_VALUE            DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE      DATETIME(6)     NULL,
  FEED_ID                 INT             NOT NULL,
  UUID                    VARCHAR(40)     NOT NULL,
  VERSION                 DECIMAL         NOT NULL,
  CONSTRAINT FK_N_REFERENCE_RATE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_REFERENCE_RATE_LOGKEY
  ON goatada_test.EL_N_REFERENCE_RATE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_STRIKE
(
  STRIKE_PK          INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  STRIKE_VALUE       DECIMAL(30, 10) NULL,
  STRIKE_TYPE        VARCHAR(35)     NULL,
  APPLICABILITY_DATE DATETIME(6)     NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  CONSTRAINT FK_N_STRIKE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_STRIKE_LOGKEY
  ON goatada_test.EL_N_STRIKE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_SUBJECT
(
  SUBJECT_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  SUBJECT_ID         VARCHAR(12) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  CONSTRAINT FK_N_ELEM_SUBJECT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_ELEM_SUBJECT_LOGKEY
  ON goatada_test.EL_N_SUBJECT (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_SUBJECT_CONVERSION
(
  SUBJECT_CONVERSION_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY           INT             NOT NULL,
  CONVERSION_TO         DECIMAL(30, 10) NULL,
  SUBJECT_ID            VARCHAR(12)     NULL,
  CONVERSION_FROM       DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE    DATETIME(6)     NOT NULL,
  FEED_ID               INT             NOT NULL,
  UUID                  VARCHAR(40)     NOT NULL,
  VERSION               DECIMAL         NOT NULL,
  CONSTRAINT FK_N_SUBJECT_CONVERSION_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.IDX_FK_EL_N_SBJCT_CONVERSION
  ON goatada_test.EL_N_SUBJECT_CONVERSION (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_SUBJECT_PRICE
(
  SUBJECT_PRICE_PK   INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT             NOT NULL,
  SUBJECT_ID         VARCHAR(12)     NULL,
  CURRENCY           VARCHAR(35)     NULL,
  VALUE              DECIMAL(30, 10) NULL,
  QUOTATION_TYPE     VARCHAR(35)     NULL,
  UNIT_QUANTITY      DECIMAL(30, 10) NULL,
  APPLICABILITY_DATE DATETIME(6)     NOT NULL,
  FEED_ID            INT             NOT NULL,
  UUID               VARCHAR(40)     NOT NULL,
  VERSION            DECIMAL         NOT NULL,
  CONSTRAINT FK_N_SUBJECT_PRICE_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.IDX_FK_EL_N_SUBJECT_PRICE
  ON goatada_test.EL_N_SUBJECT_PRICE (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_TEXT
(
  TEXT_PK            INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT           NOT NULL,
  TEXT               VARCHAR(1000) NULL,
  APPLICABILITY_DATE DATETIME(6)   NULL,
  FEED_ID            INT           NOT NULL,
  UUID               VARCHAR(40)   NOT NULL,
  VERSION            DECIMAL       NOT NULL,
  CONSTRAINT FK_N_TEXT_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_TEXT_LOGKEY
  ON goatada_test.EL_N_TEXT (LOGICAL_KEY);

CREATE TABLE goatada_test.EL_N_UNIQUE_ID
(
  UNIQUE_ID_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  LOGICAL_KEY        INT         NOT NULL,
  UNIQUE_ID          VARCHAR(50) NULL,
  APPLICABILITY_DATE DATETIME(6) NULL,
  FEED_ID            INT         NOT NULL,
  UUID               VARCHAR(40) NOT NULL,
  VERSION            DECIMAL     NOT NULL,
  CONSTRAINT FK_N_UNIQUE_ID_LOGKEY
  FOREIGN KEY (LOGICAL_KEY) REFERENCES goatada_test.EL_N_LOGICAL_KEY (LOGICAL_KEY_PK)
);

CREATE INDEX goatada_test.FK_N_UNIQUE_ID_LOGKEY
  ON goatada_test.EL_N_UNIQUE_ID (LOGICAL_KEY);

CREATE TABLE goatada_test.EXCP_VALIDATION_EXCEPTION
(
  EXCEPTION_ID             INT AUTO_INCREMENT
    PRIMARY KEY,
  VALIDATION_IDENTIFIER    VARCHAR(30)            NOT NULL,
  VALIDATION_RESULT        VARCHAR(30)            NOT NULL,
  FEED_IDENTIFIER_CODE     INT                    NULL,
  TESTED_ELEMENT_TYPE_CODE VARCHAR(30)            NOT NULL,
  TESTED_PROPERTY_NAME     VARCHAR(100)           NULL,
  RULE_SEVERITY            DECIMAL(9) DEFAULT '0' NOT NULL,
  ELEMENT_UID              VARCHAR(40)            NULL,
  VERSION                  INT DEFAULT '0'        NOT NULL,
  STATUS                   VARCHAR(30)            NOT NULL,
  USER_ID                  VARCHAR(10)            NOT NULL,
  DESCRIPTION              VARCHAR(2000)          NOT NULL,
  CREATED_DATETIME         DATETIME(6)            NOT NULL,
  SUBJECT_ID               VARCHAR(12)            NOT NULL
);

CREATE INDEX goatada_test.EXCP_VALIDATION_EXCEPTION_IDX1
  ON goatada_test.EXCP_VALIDATION_EXCEPTION (VALIDATION_IDENTIFIER);

CREATE INDEX goatada_test.EXCP_VALIDATION_EXCEPTION_IDX2
  ON goatada_test.EXCP_VALIDATION_EXCEPTION (FEED_IDENTIFIER_CODE);

CREATE INDEX goatada_test.IDX_VAL_EXCP_STATUS
  ON goatada_test.EXCP_VALIDATION_EXCEPTION (STATUS);

CREATE INDEX goatada_test.IDX_VAL_EXCP_SUBJECT_ID
  ON goatada_test.EXCP_VALIDATION_EXCEPTION (SUBJECT_ID);

CREATE TABLE goatada_test.EXCP_VAL_ELEMENT_PROPERTY
(
  ELEMENT_PROPERTY_ID INT AUTO_INCREMENT
    PRIMARY KEY,
  EXCEPTION_ID        INT             NOT NULL,
  PROPERTY_NAME       VARCHAR(200)    NOT NULL,
  PROPERTY_VALUE      VARCHAR(500)    NOT NULL,
  VERSION             INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_EXCP_VAL_ELEMENT_PROPERTY
  FOREIGN KEY (EXCEPTION_ID) REFERENCES goatada_test.EXCP_VALIDATION_EXCEPTION (EXCEPTION_ID)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_EXCP_VAL_ELEMENT_PROPERTY
  ON goatada_test.EXCP_VAL_ELEMENT_PROPERTY (EXCEPTION_ID);

CREATE TABLE goatada_test.EXCP_VAL_REFERENCE_ELEMENT
(
  REF_ELEMENT_ID    INT AUTO_INCREMENT
    PRIMARY KEY,
  EXCEPTION_ID      INT             NOT NULL,
  ELEMENT_TYPE_CODE VARCHAR(30)     NOT NULL,
  ELEMENT_LOCATION  VARCHAR(30)     NOT NULL,
  VERSION           INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_EXCP_REFELEMENT_VALEXCEPT
  FOREIGN KEY (EXCEPTION_ID) REFERENCES goatada_test.EXCP_VALIDATION_EXCEPTION (EXCEPTION_ID)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_EXCP_REFELEMENT_VALEXCEPT
  ON goatada_test.EXCP_VAL_REFERENCE_ELEMENT (EXCEPTION_ID);

CREATE TABLE goatada_test.EXCP_VAL_REF_ELEMENT_PROPERTY
(
  REF_ELEMENT_PROPERTY_ID INT AUTO_INCREMENT
    PRIMARY KEY,
  REF_ELEMENT_ID          INT             NOT NULL,
  PROPERTY_NAME           VARCHAR(200)    NOT NULL,
  PROPERTY_VALUE          VARCHAR(500)    NOT NULL,
  VERSION                 INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_EXCP_VAL_REF_ELEMENT_PROP
  FOREIGN KEY (REF_ELEMENT_ID) REFERENCES goatada_test.EXCP_VAL_REFERENCE_ELEMENT (REF_ELEMENT_ID)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_EXCP_VAL_REF_ELEMENT_PROP
  ON goatada_test.EXCP_VAL_REF_ELEMENT_PROPERTY (REF_ELEMENT_ID);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_DIMENSION
(
  ANALYTICAL_DIMENSION_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)     NOT NULL,
  DIMENSION_IDENTIFIER        VARCHAR(30)     NOT NULL,
  DIMENSION_TYPE              VARCHAR(30)     NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NOT NULL,
  USER_ID                     VARCHAR(10)     NOT NULL,
  VERSION                     INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_DIMENSION_IDX1
  ON goatada_test.FIMA_ANALYTICAL_DIMENSION (DIMENSION_IDENTIFIER);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_DIMENSION_IDX2
  ON goatada_test.FIMA_ANALYTICAL_DIMENSION (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_DIMENSIONPT
(
  ANALYTICAL_DIMENSIONPOINT_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30)     NOT NULL,
  DIMENSION_IDENTIFIER         VARCHAR(30)     NOT NULL,
  DIMENSION_POINT_IDENTIFIER   VARCHAR(30)     NOT NULL,
  DIMENSION_POINT_SEQUENCE     INT             NOT NULL,
  DIMENSION_POINT_VALUE        VARCHAR(250)    NOT NULL,
  MODIFIED_DATE_TIME           DATETIME(6)     NOT NULL,
  USER_ID                      VARCHAR(10)     NOT NULL,
  VERSION                      INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_DIMPOINT_IDX1
  ON goatada_test.FIMA_ANALYTICAL_DIMENSIONPT (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_DIMPOINT_IDX2
  ON goatada_test.FIMA_ANALYTICAL_DIMENSIONPT (DIMENSION_POINT_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_DIMENSIONPT_A
(
  ANALYTICAL_DIMENSIONPOINT_PK INT          NOT NULL,
  REVISION_NUMBER              INT          NOT NULL,
  REVISION_TYPE                INT          NULL,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30)  NULL,
  DIMENSION_IDENTIFIER         VARCHAR(30)  NULL,
  DIMENSION_POINT_IDENTIFIER   VARCHAR(30)  NULL,
  DIMENSION_POINT_SEQUENCE     INT          NULL,
  DIMENSION_POINT_VALUE        VARCHAR(250) NULL,
  MODIFIED_DATE_TIME           DATETIME(6)  NULL,
  USER_ID                      VARCHAR(10)  NULL,
  VERSION                      INT          NULL,
  PRIMARY KEY (ANALYTICAL_DIMENSIONPOINT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANALY_DIMPNT_IDX1_A
  ON goatada_test.FIMA_ANALYTICAL_DIMENSIONPT_A (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_DIMENSION_A
(
  ANALYTICAL_DIMENSION_PK     INT         NOT NULL,
  REVISION_NUMBER             INT         NOT NULL,
  REVISION_TYPE               INT         NULL,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30) NULL,
  DIMENSION_IDENTIFIER        VARCHAR(30) NULL,
  DIMENSION_TYPE              VARCHAR(30) NULL,
  MODIFIED_DATE_TIME          DATETIME(6) NULL,
  USER_ID                     VARCHAR(10) NULL,
  VERSION                     INT         NULL,
  PRIMARY KEY (ANALYTICAL_DIMENSION_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANALYT_DIMEN_IDX1_A
  ON goatada_test.FIMA_ANALYTICAL_DIMENSION_A (DIMENSION_IDENTIFIER);

CREATE INDEX goatada_test.FIMA_ANALYT_DIMEN_IDX2_A
  ON goatada_test.FIMA_ANALYTICAL_DIMENSION_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_GRID_COORD
(
  ANALYTICAL_GRID_COORD_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)     NOT NULL,
  DIMENSION_IDENTIFIER        VARCHAR(30)     NOT NULL,
  DIMENSION_POINT_IDENTIFIER  VARCHAR(30)     NOT NULL,
  GRID_POINT_IDENTIFIER       VARCHAR(30)     NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NOT NULL,
  USER_ID                     VARCHAR(10)     NOT NULL,
  VERSION                     INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_GRIDCOORD_IDX1
  ON goatada_test.FIMA_ANALYTICAL_GRID_COORD (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER, DIMENSION_POINT_IDENTIFIER, GRID_POINT_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_GRID_COORD_A
(
  ANALYTICAL_GRID_COORD_PK    INT         NOT NULL,
  REVISION_NUMBER             INT         NOT NULL,
  REVISION_TYPE               INT         NULL,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30) NULL,
  DIMENSION_IDENTIFIER        VARCHAR(30) NULL,
  DIMENSION_POINT_IDENTIFIER  VARCHAR(30) NULL,
  GRID_POINT_IDENTIFIER       VARCHAR(30) NULL,
  MODIFIED_DATE_TIME          DATETIME(6) NULL,
  USER_ID                     VARCHAR(10) NULL,
  VERSION                     INT         NULL,
  PRIMARY KEY (ANALYTICAL_GRID_COORD_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANA_GRIDCRD_IDX1_A
  ON goatada_test.FIMA_ANALYTICAL_GRID_COORD_A (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER, DIMENSION_POINT_IDENTIFIER, GRID_POINT_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_GRID_POINT
(
  ANALYTICAL_GRID_POINT_PK       INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER    VARCHAR(30)     NOT NULL,
  GRID_POINT_IDENTIFIER          VARCHAR(30)     NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NOT NULL,
  USER_ID                        VARCHAR(10)     NOT NULL,
  VERSION                        INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_GRIDPOINT_IDX1
  ON goatada_test.FIMA_ANALYTICAL_GRID_POINT (ANALYTICAL_MODEL_IDENTIFIER);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_GRIDPOINT_IDX2
  ON goatada_test.FIMA_ANALYTICAL_GRID_POINT (GRID_POINT_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_GRID_POINT_A
(
  ANALYTICAL_GRID_POINT_PK       INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  ANALYTICAL_MODEL_IDENTIFIER    VARCHAR(30) NULL,
  GRID_POINT_IDENTIFIER          VARCHAR(30) NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (ANALYTICAL_GRID_POINT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANA_GRIDPNT_IDX1_A
  ON goatada_test.FIMA_ANALYTICAL_GRID_POINT_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE INDEX goatada_test.FIMA_ANA_GRIDPNT_IDX2_A
  ON goatada_test.FIMA_ANALYTICAL_GRID_POINT_A (GRID_POINT_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL
(
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)     NOT NULL
    PRIMARY KEY,
  ANALYTICAL_MODEL_TYPE       VARCHAR(30)     NOT NULL,
  ANALYTICAL_MODEL_SUB_TYPE   VARCHAR(30)     NOT NULL,
  COMPOUNDING_FREQUENCY       VARCHAR(30)     NULL,
  DAY_COUNT_CONVENTION        VARCHAR(30)     NULL,
  DEFAULT_LONG_NAME           VARCHAR(250)    NULL,
  DEFAULT_SHORT_NAME          VARCHAR(100)    NULL,
  POINT_COHESION              VARCHAR(30)     NOT NULL,
  PRICE_CURRENCY              VARCHAR(30)     NULL,
  PRICE_PRICING_ENTITY        VARCHAR(30)     NOT NULL,
  PRICE_QUOTE_TYPE            VARCHAR(30)     NOT NULL,
  PRICE_SNAP                  VARCHAR(30)     NOT NULL,
  PRICE_TYPE                  VARCHAR(30)     NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NOT NULL,
  USER_ID                     VARCHAR(10)     NOT NULL,
  VERSION                     INT DEFAULT '0' NOT NULL,
  CONSTRAINT FIMA_ANALYTICAL_MODEL_IDX
  UNIQUE (ANALYTICAL_MODEL_IDENTIFIER)
);

ALTER TABLE goatada_test.FIMA_ANALYTICAL_DIMENSION
  ADD CONSTRAINT goatada_test.FK_FIMA_ANALYTICAL_DIMENSION
FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER);

ALTER TABLE goatada_test.FIMA_ANALYTICAL_DIMENSIONPT
  ADD CONSTRAINT goatada_test.FK_FIMA_ANALYTICAL_DIMENSIONPT
FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER);

ALTER TABLE goatada_test.FIMA_ANALYTICAL_GRID_COORD
  ADD CONSTRAINT goatada_test.FK_FIMA_ANALYTICAL_GRID_COORD
FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER);

ALTER TABLE goatada_test.FIMA_ANALYTICAL_GRID_POINT
  ADD CONSTRAINT goatada_test.FK_FIMA_ANALYTICAL_GRID_POINT
FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL_A
(
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)  NULL,
  ANALYTICAL_MODEL_TYPE       VARCHAR(30)  NULL,
  ANALYTICAL_MODEL_SUB_TYPE   VARCHAR(30)  NULL,
  COMPOUNDING_FREQUENCY       VARCHAR(30)  NULL,
  DAY_COUNT_CONVENTION        VARCHAR(30)  NULL,
  DEFAULT_LONG_NAME           VARCHAR(250) NULL,
  DEFAULT_SHORT_NAME          VARCHAR(100) NULL,
  POINT_COHESION              VARCHAR(30)  NULL,
  PRICE_CURRENCY              VARCHAR(30)  NULL,
  PRICE_PRICING_ENTITY        VARCHAR(30)  NULL,
  PRICE_QUOTE_TYPE            VARCHAR(30)  NULL,
  PRICE_SNAP                  VARCHAR(30)  NULL,
  PRICE_TYPE                  VARCHAR(30)  NULL,
  MODIFIED_DATE_TIME          DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  VERSION                     INT          NULL
);

CREATE INDEX goatada_test.FIMA_ANA_MDL_IDX_A
  ON goatada_test.FIMA_ANALYTICAL_MODEL_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL_NAME
(
  ANALYTICAL_MODEL_NAME_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)     NOT NULL,
  LANGUAGE_CODE               VARCHAR(30)     NOT NULL,
  ANALYTICAL_MODEL_LONG_NAME  VARCHAR(250)    NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NOT NULL,
  USER_ID                     VARCHAR(10)     NOT NULL,
  VERSION                     INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_FIMA_ANALYTICAL_MODEL_NAME
  FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER)
);

CREATE INDEX goatada_test.IDX_FK_FIMA_ANALYTICAL_MDL_NA
  ON goatada_test.FIMA_ANALYTICAL_MODEL_NAME (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL_NAME_A
(
  ANALYTICAL_MODEL_NAME_PK    INT          NOT NULL,
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)  NULL,
  LANGUAGE_CODE               VARCHAR(30)  NULL,
  ANALYTICAL_MODEL_LONG_NAME  VARCHAR(250) NULL,
  MODIFIED_DATE_TIME          DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  VERSION                     INT          NULL,
  PRIMARY KEY (ANALYTICAL_MODEL_NAME_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANA_MDL_NM_IDX_A
  ON goatada_test.FIMA_ANALYTICAL_MODEL_NAME_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL_REF
(
  ANALYTICAL_MODEL_REF_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)     NOT NULL,
  XREF_IDENTIFIER_TYPE_CODE   VARCHAR(30)     NULL,
  XREF_IDENTIFIER_VALUE       VARCHAR(250)    NOT NULL,
  MODIFIED_DATE_TIME          DATETIME(6)     NOT NULL,
  USER_ID                     VARCHAR(10)     NOT NULL,
  VERSION                     INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_FIMA_ANALYTICAL_MODEL_REF
  FOREIGN KEY (ANALYTICAL_MODEL_IDENTIFIER) REFERENCES goatada_test.FIMA_ANALYTICAL_MODEL (ANALYTICAL_MODEL_IDENTIFIER)
);

CREATE INDEX goatada_test.FIMA_ANALYTICAL_MODEL_REF_IDX
  ON goatada_test.FIMA_ANALYTICAL_MODEL_REF (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_ANALYTICAL_MODEL_REF_A
(
  ANALYTICAL_MODEL_REF_PK     INT          NOT NULL,
  REVISION_NUMBER             INT          NOT NULL,
  REVISION_TYPE               INT          NULL,
  ANALYTICAL_MODEL_IDENTIFIER VARCHAR(30)  NULL,
  XREF_IDENTIFIER_TYPE_CODE   VARCHAR(30)  NULL,
  XREF_IDENTIFIER_VALUE       VARCHAR(250) NULL,
  MODIFIED_DATE_TIME          DATETIME(6)  NULL,
  USER_ID                     VARCHAR(10)  NULL,
  VERSION                     INT          NULL,
  PRIMARY KEY (ANALYTICAL_MODEL_REF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FIMA_ANA_MDL_R_IDX_A
  ON goatada_test.FIMA_ANALYTICAL_MODEL_REF_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTRUMENT
(
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)                                      NOT NULL
    PRIMARY KEY,
  FREQUENCY_CODE                 VARCHAR(30)                                      NOT NULL,
  FOLLOW_UP_STATUS               VARCHAR(30) DEFAULT '20'                         NOT NULL,
  MAIN_STATUS                    VARCHAR(30) DEFAULT '01'                         NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)                                      NOT NULL,
  USER_ID                        VARCHAR(10)                                      NOT NULL,
  INSTRUMENT_START_DATE          DATETIME(6)                                      NULL,
  PREDECESSOR_INSTRUMENT_ID      VARCHAR(10)                                      NULL,
  VERSION                        INT DEFAULT '0'                                  NOT NULL,
  HISTORY_CD                     VARCHAR(10) DEFAULT '10'                         NOT NULL,
  VALIDATION_STATUS              VARCHAR(35) DEFAULT 'INITIAL'                    NOT NULL,
  CREATION_DATE                  DATETIME(6) DEFAULT '2000-01-01 00:00:01.000000' NOT NULL,
  CONSTRAINT U_FIMA_FINANCIAL_INSTRUMENT
  UNIQUE (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTRUMENT_A
(
  REVISION_NUMBER                INT                                              NOT NULL,
  REVISION_TYPE                  INT                                              NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)                                      NULL,
  FREQUENCY_CODE                 VARCHAR(30)                                      NULL,
  FOLLOW_UP_STATUS               VARCHAR(30)                                      NULL,
  MAIN_STATUS                    VARCHAR(30)                                      NULL,
  MODIFIED_DATE_TIME             DATETIME(6)                                      NULL,
  USER_ID                        VARCHAR(10)                                      NULL,
  INSTRUMENT_START_DATE          DATETIME(6)                                      NULL,
  PREDECESSOR_INSTRUMENT_ID      VARCHAR(10)                                      NULL,
  VERSION                        INT                                              NULL,
  HISTORY_CD                     VARCHAR(10)                                      NULL,
  VALIDATION_STATUS              VARCHAR(35) DEFAULT 'INITIAL'                    NOT NULL,
  CREATION_DATE                  DATETIME(6) DEFAULT '2000-01-01 00:00:01.000000' NOT NULL
);

CREATE INDEX goatada_test.FIMA_FIN_I_IDX_A
  ON goatada_test.FIMA_FINANCIAL_INSTRUMENT_A (INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_CMNT
(
  FIMA_FINANCIAL_INSTR_CMNT_PK   INT AUTO_INCREMENT
    PRIMARY KEY,
  SEQUENCE_NUMBER                INT             NOT NULL,
  COMMENT_TEXT                   VARCHAR(3500)   NOT NULL,
  COMMENT_USER                   VARCHAR(10)     NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NOT NULL,
  USER_ID                        VARCHAR(10)     NOT NULL,
  VERSION                        INT DEFAULT '0' NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  CONSTRAINT U_FIMA_FINANCIAL_INSTR_CMNT
  UNIQUE (INSTRUMENT_IDENTIFICATION_CODE, SEQUENCE_NUMBER),
  CONSTRAINT FK_FINANCIAL_INSTRUMENT_CMT
  FOREIGN KEY (INSTRUMENT_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_FINANCIAL_INSTRUMENT (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_CMNT_A
(
  FIMA_FINANCIAL_INSTR_CMNT_PK   INT AUTO_INCREMENT,
  REVISION_NUMBER                INT             NOT NULL,
  REVISION_TYPE                  INT             NULL,
  SEQUENCE_NUMBER                INT             NULL,
  COMMENT_TEXT                   VARCHAR(3500)   NULL,
  COMMENT_USER                   VARCHAR(10)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NULL,
  USER_ID                        VARCHAR(10)     NULL,
  VERSION                        INT DEFAULT '0' NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  PRIMARY KEY (FIMA_FINANCIAL_INSTR_CMNT_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_REF
(
  XREF_IDENTIFIER_TYPE_CODE      VARCHAR(30)     NOT NULL,
  XREF_IDENTIFIER_VALUE          VARCHAR(255)    NOT NULL,
  PRICING_ENTITY                 VARCHAR(30)     NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NOT NULL,
  USER_ID                        VARCHAR(10)     NOT NULL,
  VERSION                        INT DEFAULT '0' NOT NULL,
  CURRENCY                       VARCHAR(35)     NULL,
  SCALING_FACTOR                 INT             NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  PRIMARY KEY (XREF_IDENTIFIER_TYPE_CODE, XREF_IDENTIFIER_VALUE),
  CONSTRAINT U_FIMA_FIN_INSTR_REF
  UNIQUE (XREF_IDENTIFIER_TYPE_CODE, XREF_IDENTIFIER_VALUE),
  CONSTRAINT FK_FINANCIAL_INSTRUMENT_REF
  FOREIGN KEY (INSTRUMENT_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_FINANCIAL_INSTRUMENT (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FIMA_FIN_INSTR_REF_IDX1
  ON goatada_test.FIMA_FINANCIAL_INSTR_REF (XREF_IDENTIFIER_TYPE_CODE);

CREATE INDEX goatada_test.FIMA_FIN_INSTR_REF_IDX2
  ON goatada_test.FIMA_FINANCIAL_INSTR_REF (XREF_IDENTIFIER_VALUE);

CREATE INDEX goatada_test.FK_FINANCIAL_INSTRUMENT_REF
  ON goatada_test.FIMA_FINANCIAL_INSTR_REF (INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_REF_A
(
  REVISION_NUMBER                INT          NOT NULL,
  REVISION_TYPE                  INT          NULL,
  XREF_IDENTIFIER_TYPE_CODE      VARCHAR(30)  NULL,
  XREF_IDENTIFIER_VALUE          VARCHAR(255) NULL,
  PRICING_ENTITY                 VARCHAR(30)  NULL,
  MODIFIED_DATE_TIME             DATETIME(6)  NULL,
  USER_ID                        VARCHAR(10)  NULL,
  VERSION                        INT          NULL,
  CURRENCY                       VARCHAR(35)  NULL,
  SCALING_FACTOR                 INT          NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)  NULL
);

-- CREATE INDEX goatada_test.FIMA_FIN_INSTR_REF_IDX1
--	on goatada_test.FIMA_FINANCIAL_INSTR_REF_A (XREF_IDENTIFIER_TYPE_CODE)
-- ;

CREATE INDEX goatada_test.FIMA_FIN_I_REF_IDX2_A
  ON goatada_test.FIMA_FINANCIAL_INSTR_REF_A (XREF_IDENTIFIER_VALUE);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_TAG
(
  FINANCIAL_INSTRUMENT_TAG_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  TAG_TYPE                       VARCHAR(30)     NOT NULL,
  TAG_VALUE                      VARCHAR(30)     NOT NULL,
  TAG_ORDER                      INT             NOT NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NOT NULL,
  USER_ID                        VARCHAR(10)     NOT NULL,
  VERSION                        INT DEFAULT '0' NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  CONSTRAINT UK_FIMA_FINANCIAL_INSTR_TAG
  UNIQUE (INSTRUMENT_IDENTIFICATION_CODE, TAG_TYPE),
  CONSTRAINT FK_FINANCIAL_INSTRUMENT_TAG
  FOREIGN KEY (INSTRUMENT_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_FINANCIAL_INSTRUMENT (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FIMA_FIN_INSTR_TAG_IDX_TAG
  ON goatada_test.FIMA_FINANCIAL_INSTR_TAG (TAG_TYPE, TAG_VALUE);

CREATE TABLE goatada_test.FIMA_FINANCIAL_INSTR_TAG_A
(
  FINANCIAL_INSTRUMENT_TAG_PK    INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  TAG_TYPE                       VARCHAR(30) NULL,
  TAG_VALUE                      VARCHAR(30) NULL,
  TAG_ORDER                      INT         NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  PRIMARY KEY (FINANCIAL_INSTRUMENT_TAG_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.FIMA_INSTR_PROVIDER_DATA
(
  INSTRUMENT_PROVIDER_DATA_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  DATA_PROVIDER                  VARCHAR(30)     NOT NULL,
  DEFAULT_SCALING_FACTOR         INT             NULL,
  MODIFIED_DATE_TIME             DATETIME(6)     NOT NULL,
  USER_ID                        VARCHAR(10)     NOT NULL,
  VERSION                        INT DEFAULT '0' NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  CONSTRAINT U_FIMA_INSTR_PROVIDER_DATA
  UNIQUE (DATA_PROVIDER, INSTRUMENT_IDENTIFICATION_CODE),
  CONSTRAINT FK_FINANCIAL_INSTRUMENT_PRV
  FOREIGN KEY (INSTRUMENT_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_FINANCIAL_INSTRUMENT (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FK_FINANCIAL_INSTRUMENT_PRV
  ON goatada_test.FIMA_INSTR_PROVIDER_DATA (INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_INSTR_PROVIDER_DATA_A
(
  INSTRUMENT_PROVIDER_DATA_PK    INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  DATA_PROVIDER                  VARCHAR(30) NULL,
  DEFAULT_SCALING_FACTOR         INT         NULL,
  MODIFIED_DATE_TIME             DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  PRIMARY KEY (INSTRUMENT_PROVIDER_DATA_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.FIMA_INSTR_STATUS
(
  FIMA_INSTR_STATUS_PK           INT AUTO_INCREMENT
    PRIMARY KEY,
  STATUS_TYPE                    VARCHAR(35) NOT NULL,
  STATUS_VALUE                   VARCHAR(35) NOT NULL,
  STATUS_TIMESTAMP               DATETIME(6) NOT NULL,
  USER_ID                        VARCHAR(10) NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  CONSTRAINT FK_FINANCIAL_INSTRUMENT_STS
  FOREIGN KEY (INSTRUMENT_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_FINANCIAL_INSTRUMENT (INSTRUMENT_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FK_FINANCIAL_INSTRUMENT_STS
  ON goatada_test.FIMA_INSTR_STATUS (INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_PARTY
(
  PARTY_IDENTIFICATION_CODE VARCHAR(10)                   NOT NULL
    PRIMARY KEY,
  FREQUENCY_CODE            VARCHAR(30)                   NULL,
  MAIN_STATUS               VARCHAR(30) DEFAULT '01'      NOT NULL,
  FOLLOW_UP_STATUS          VARCHAR(30) DEFAULT '11'      NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)                   NOT NULL,
  USER_ID                   VARCHAR(10)                   NOT NULL,
  VERSION                   INT DEFAULT '0'               NOT NULL,
  VALIDATION_STATUS         VARCHAR(35) DEFAULT 'INITIAL' NOT NULL
);

CREATE TABLE goatada_test.FIMA_PARTY_A
(
  REVISION_NUMBER           INT                           NOT NULL,
  REVISION_TYPE             INT                           NULL,
  PARTY_IDENTIFICATION_CODE VARCHAR(10)                   NULL,
  FREQUENCY_CODE            VARCHAR(30)                   NULL,
  MAIN_STATUS               VARCHAR(30)                   NULL,
  FOLLOW_UP_STATUS          VARCHAR(30)                   NULL,
  MODIFIED_DATE_TIME        DATETIME(6)                   NULL,
  USER_ID                   VARCHAR(10)                   NULL,
  VERSION                   INT                           NULL,
  VALIDATION_STATUS         VARCHAR(35) DEFAULT 'INITIAL' NOT NULL
);

CREATE INDEX goatada_test.FIMA_PARTY_IDX_A
  ON goatada_test.FIMA_PARTY_A (PARTY_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_PARTY_COMMENT
(
  FIMA_PARTY_COMMENT_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  SEQUENCE_NUMBER           INT             NOT NULL,
  COMMENT_TEXT              VARCHAR(3500)   NOT NULL,
  COMMENT_USER              VARCHAR(10)     NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)     NOT NULL,
  USER_ID                   VARCHAR(10)     NOT NULL,
  VERSION                   INT DEFAULT '0' NOT NULL,
  PARTY_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  CONSTRAINT U_FIMA_PARTY_COMMENT
  UNIQUE (FIMA_PARTY_COMMENT_PK, SEQUENCE_NUMBER),
  CONSTRAINT FK_FIMA_PARTY_CMT
  FOREIGN KEY (PARTY_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_PARTY (PARTY_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FK_FIMA_PARTY_CMT
  ON goatada_test.FIMA_PARTY_COMMENT (PARTY_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_PARTY_COMMENT_A
(
  FIMA_PARTY_COMMENT_PK     INT             NOT NULL,
  REVISION_NUMBER           INT             NOT NULL,
  REVISION_TYPE             INT             NULL,
  SEQUENCE_NUMBER           INT             NULL,
  COMMENT_TEXT              VARCHAR(3500)   NULL,
  COMMENT_USER              VARCHAR(10)     NULL,
  MODIFIED_DATE_TIME        DATETIME(6)     NULL,
  USER_ID                   VARCHAR(10)     NULL,
  VERSION                   INT DEFAULT '0' NULL,
  PARTY_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  PRIMARY KEY (FIMA_PARTY_COMMENT_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.FIMA_PARTY_REF
(
  XREF_IDENTIFIER_TYPE_CODE VARCHAR(30)     NOT NULL,
  XREF_IDENTIFIER_VALUE     VARCHAR(255)    NOT NULL,
  MODIFIED_DATE_TIME        DATETIME(6)     NOT NULL,
  USER_ID                   VARCHAR(10)     NOT NULL,
  VERSION                   INT DEFAULT '0' NOT NULL,
  PARTY_IDENTIFICATION_CODE VARCHAR(10)     NULL,
  PRIMARY KEY (XREF_IDENTIFIER_TYPE_CODE, XREF_IDENTIFIER_VALUE),
  CONSTRAINT U_FIMA_PARTY_REF
  UNIQUE (XREF_IDENTIFIER_TYPE_CODE, XREF_IDENTIFIER_VALUE),
  CONSTRAINT FK_FIMA_PARTY_REF
  FOREIGN KEY (PARTY_IDENTIFICATION_CODE) REFERENCES goatada_test.FIMA_PARTY (PARTY_IDENTIFICATION_CODE)
);

CREATE INDEX goatada_test.FK_FIMA_PARTY_REF
  ON goatada_test.FIMA_PARTY_REF (PARTY_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.FIMA_PARTY_REF_A
(
  REVISION_NUMBER           INT          NOT NULL,
  REVISION_TYPE             INT          NULL,
  XREF_IDENTIFIER_TYPE_CODE VARCHAR(30)  NULL,
  XREF_IDENTIFIER_VALUE     VARCHAR(255) NULL,
  MODIFIED_DATE_TIME        DATETIME(6)  NULL,
  USER_ID                   VARCHAR(10)  NULL,
  VERSION                   INT          NULL,
  PARTY_IDENTIFICATION_CODE VARCHAR(10)  NULL
);

CREATE TABLE goatada_test.ISSUE
(
  ISSUE_PK                 INT AUTO_INCREMENT
    PRIMARY KEY,
  ISSUE_TYPE               VARCHAR(50)   NOT NULL,
  ISSUE_SUB_TYPE           VARCHAR(60)   NULL,
  EXTERNAL_ISSUE_LINK      VARCHAR(30)   NULL,
  EXTERNAL_ISSUE_LINK_TYPE VARCHAR(50)   NULL,
  PRIMARY_SUBJECT_ID       VARCHAR(12)   NULL,
  DESCRIPTION              VARCHAR(2000) NULL,
  STATUS                   VARCHAR(15)   NOT NULL,
  STATUS_START_DATE        DATETIME(6)   NOT NULL,
  CREATION_DATE_TIME       DATETIME(6)   NOT NULL,
  MODIFIED_DATE_TIME       DATETIME      NOT NULL,
  USER_ID                  VARCHAR(10)   NOT NULL,
  VERSION                  INT           NOT NULL,
  CHECKSUM                 VARCHAR(32)   NULL,
  PRIMARY_SUBJECT_TYPE     VARCHAR(1)    NOT NULL
);

CREATE INDEX goatada_test.IDX_ISSUE
  ON goatada_test.ISSUE (PRIMARY_SUBJECT_ID, CHECKSUM, ISSUE_TYPE, ISSUE_SUB_TYPE);

CREATE INDEX goatada_test.IDX_ISSUE_TYPE_STATUS
  ON goatada_test.ISSUE (ISSUE_TYPE, STATUS);

CREATE TABLE goatada_test.ISSUE_MANAGEMENT
(
  SUBJECT_ID VARCHAR(12) NOT NULL
    PRIMARY KEY,
  MANAGER_ID VARCHAR(30) NULL,
  VERSION    INT         NOT NULL
);

CREATE TABLE goatada_test.ISSUE_MANAGEMENT_HISTORY
(
  ISSUE_MANAGEMENT_HISTORY_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID                  VARCHAR(12) NOT NULL,
  MANAGER_ID                  VARCHAR(30) NULL,
  START_TIME                  DATETIME(6) NOT NULL
);

CREATE TABLE goatada_test.ISSUE_OCCURRENCE_TRACKER
(
  ISSUE_OCCURRENCE_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  ISSUE_PK            INT             NOT NULL,
  OPENED              DATETIME(6)     NOT NULL,
  CLOSED              DATETIME(6)     NULL,
  CLOSING_USER        VARCHAR(15)     NULL,
  VERSION             INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_ISSUE_OCCURRENCE_PK
  FOREIGN KEY (ISSUE_PK) REFERENCES goatada_test.ISSUE (ISSUE_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.IDX_FK_ISSUE_OCCURRENCE_TRACK
  ON goatada_test.ISSUE_OCCURRENCE_TRACKER (ISSUE_PK);

CREATE TABLE goatada_test.ISSUE_PARAMETER
(
  ISSUE_PARAMETER_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  ISSUE_PK           INT          NOT NULL,
  NAME               VARCHAR(150) NOT NULL,
  VALUE              VARCHAR(500) NULL,
  DATA_TYPE          VARCHAR(50)  NOT NULL,
  SEQUENCE_NUMBER    INT          NULL,
  CONSTRAINT FK_ISSUE_PARAM_ISSUE
  FOREIGN KEY (ISSUE_PK) REFERENCES goatada_test.ISSUE (ISSUE_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.I_IPR_ISSUE_PK
  ON goatada_test.ISSUE_PARAMETER (ISSUE_PK);

CREATE TABLE goatada_test.ISSUE_PROCESS
(
  ISSUE_PROCESS_PK           INT AUTO_INCREMENT
    PRIMARY KEY,
  ISSUE_PK                   INT          NOT NULL,
  TRIGGER_VALUE              VARCHAR(100) NOT NULL,
  PROCESS_TYPE               VARCHAR(50)  NULL,
  TRIGGER_TIME               DATETIME(6)  NULL,
  PROCESS_APPLICABILITY_DATE DATE         NULL,
  CONSTRAINT FK_ISSUE_PROCESS_ISSUE
  FOREIGN KEY (ISSUE_PK) REFERENCES goatada_test.ISSUE (ISSUE_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.I_IPS_ISSUE_PK
  ON goatada_test.ISSUE_PROCESS (ISSUE_PK);

CREATE TABLE goatada_test.META_DATATYPE_USAGE
(
  ELEMENT_TYPE_CODE VARCHAR(30)  NOT NULL,
  GENDER_CODE       CHAR         NOT NULL,
  DATATYPE_ID       VARCHAR(100) NOT NULL,
  PRIMARY KEY (ELEMENT_TYPE_CODE, GENDER_CODE, DATATYPE_ID)
);

CREATE INDEX goatada_test.I_MDU_DATATYPE_ID
  ON goatada_test.META_DATATYPE_USAGE (DATATYPE_ID);

CREATE INDEX goatada_test.I_MDU_GENDER_CODE
  ON goatada_test.META_DATATYPE_USAGE (GENDER_CODE);

CREATE TABLE goatada_test.META_ELEMENT_DATATYPE_COMP
(
  LOGICAL_KEY_ID         VARCHAR(100) NOT NULL,
  DATATYPE_ID            VARCHAR(100) NOT NULL,
  ELEMENT_DATA_TYPE_CODE VARCHAR(30)  NOT NULL,
  PRIMARY KEY (LOGICAL_KEY_ID, DATATYPE_ID)
);

CREATE INDEX goatada_test.I_MEDC_DATATYPE_ID
  ON goatada_test.META_ELEMENT_DATATYPE_COMP (DATATYPE_ID);

CREATE TABLE goatada_test.META_ELEMENT_TECHNICAL_ENTITY
(
  TECHNICAL_ENTITY_CODE VARCHAR(30) NULL,
  ELEMENT_TYPE_CODE     VARCHAR(30) NOT NULL
);

CREATE INDEX goatada_test.IDX_FK_MT_ELEMENT_TECHNICAL_E
  ON goatada_test.META_ELEMENT_TECHNICAL_ENTITY (ELEMENT_TYPE_CODE);

CREATE INDEX goatada_test.IDX_FK_MT_ELEMENT_TECHNICAL_E2
  ON goatada_test.META_ELEMENT_TECHNICAL_ENTITY (TECHNICAL_ENTITY_CODE);

CREATE TABLE goatada_test.META_ELEMENT_TYPE
(
  ELEMENT_TYPE_CODE  VARCHAR(30)   NOT NULL
    PRIMARY KEY,
  ENTITY_CODE        VARCHAR(30)   NOT NULL,
  SHORT_NAME         VARCHAR(255)  NULL,
  NORMALIZED_SUPPORT CHAR          NOT NULL,
  CORRECTED_SUPPORT  CHAR          NOT NULL,
  ARBITRATED_SUPPORT CHAR          NOT NULL,
  ELEMENT_TAG_CODE   VARCHAR(30)   NOT NULL,
  DESCRIPTION        VARCHAR(3500) NULL,
  STATUS             VARCHAR(30)   NOT NULL
);

CREATE INDEX goatada_test.I_MET_ENTITY_CODE
  ON goatada_test.META_ELEMENT_TYPE (ENTITY_CODE);

ALTER TABLE goatada_test.META_DATATYPE_USAGE
  ADD CONSTRAINT goatada_test.FK_DATATYPE_USAGE_ELEMENT_TYPE
FOREIGN KEY (ELEMENT_TYPE_CODE) REFERENCES goatada_test.META_ELEMENT_TYPE (ELEMENT_TYPE_CODE);

ALTER TABLE goatada_test.META_ELEMENT_TECHNICAL_ENTITY
  ADD CONSTRAINT goatada_test.FK_ELEMENT_TYPE
FOREIGN KEY (ELEMENT_TYPE_CODE) REFERENCES goatada_test.META_ELEMENT_TYPE (ELEMENT_TYPE_CODE);

CREATE TABLE goatada_test.META_ENTITY
(
  ENTITY_CODE     VARCHAR(30)   NOT NULL
    PRIMARY KEY,
  ENTITY_NAME     VARCHAR(100)  NOT NULL,
  ENTITY_DESC     VARCHAR(3500) NULL,
  SUBJECT_TYPE    CHAR          NOT NULL,
  STATUS          VARCHAR(30)   NOT NULL,
  ENTITY_LISTENER VARCHAR(3500) NULL
);

ALTER TABLE goatada_test.META_ELEMENT_TYPE
  ADD CONSTRAINT goatada_test.FK_ELEMENT_TYPE_ENTITY
FOREIGN KEY (ENTITY_CODE) REFERENCES goatada_test.META_ENTITY (ENTITY_CODE);

CREATE TABLE goatada_test.META_EXPLICIT_MAP_DEFINITION
(
  GENDER_CODE     CHAR         NOT NULL,
  PROPERTY_SET_ID VARCHAR(100) NOT NULL,
  PROPERTY_NAME   VARCHAR(255) NOT NULL,
  TABLE_NAME      VARCHAR(30)  NOT NULL,
  COLUMN_NAME     VARCHAR(30)  NOT NULL,
  PRIMARY KEY (PROPERTY_SET_ID, PROPERTY_NAME, TABLE_NAME, GENDER_CODE)
);

CREATE INDEX goatada_test.FK_EXPLICIT_MAP_TABLE_COLUMN
  ON goatada_test.META_EXPLICIT_MAP_DEFINITION (TABLE_NAME, COLUMN_NAME);

CREATE INDEX goatada_test.I_MEMD_COLUMN_NAME_TABLE_NAME
  ON goatada_test.META_EXPLICIT_MAP_DEFINITION (COLUMN_NAME, TABLE_NAME);

CREATE TABLE goatada_test.META_GENDER
(
  GENDER_CODE          CHAR         NOT NULL
    PRIMARY KEY,
  GENDER_NAME          VARCHAR(100) NOT NULL,
  GLOBAL_REFERENCE_SET VARCHAR(100) NULL,
  GLOBAL_ATTRIBUTE_SET VARCHAR(100) NULL
);

CREATE INDEX goatada_test.I_MG_GLOBAL_ATTRIBUTE_SET
  ON goatada_test.META_GENDER (GLOBAL_ATTRIBUTE_SET);

CREATE INDEX goatada_test.I_MG_GLOBAL_REFERENCE_SET
  ON goatada_test.META_GENDER (GLOBAL_REFERENCE_SET);

ALTER TABLE goatada_test.META_DATATYPE_USAGE
  ADD CONSTRAINT goatada_test.FK_DATATYPE_USAGE_GENDER
FOREIGN KEY (GENDER_CODE) REFERENCES goatada_test.META_GENDER (GENDER_CODE);

CREATE TABLE goatada_test.META_GLOBAL_PROPERTY_MAP
(
  GENDER_CODE     CHAR         NOT NULL,
  PROPERTY_SET_ID VARCHAR(100) NOT NULL,
  PROPERTY_NAME   VARCHAR(255) NOT NULL,
  TABLE_NAME      VARCHAR(30)  NOT NULL,
  COLUMN_NAME     VARCHAR(30)  NOT NULL,
  PRIMARY KEY (PROPERTY_SET_ID, PROPERTY_NAME, TABLE_NAME, GENDER_CODE)
);

CREATE INDEX goatada_test.FK_GLOBAL_PROP_MAP_TABLE_COL
  ON goatada_test.META_GLOBAL_PROPERTY_MAP (TABLE_NAME, COLUMN_NAME);

CREATE INDEX goatada_test.I_MGPM_COLUMN_NAME_TABLE_NAME
  ON goatada_test.META_GLOBAL_PROPERTY_MAP (COLUMN_NAME, TABLE_NAME);

CREATE TABLE goatada_test.META_LOGICAL_KEY_MAP
(
  GENDER_CODE    CHAR         NOT NULL,
  ENTITY_CODE    VARCHAR(30)  NOT NULL,
  LOGICAL_KEY_ID VARCHAR(100) NOT NULL,
  PROPERTY_NAME  VARCHAR(255) NOT NULL,
  TABLE_NAME     VARCHAR(30)  NOT NULL,
  COLUMN_NAME    VARCHAR(30)  NOT NULL,
  PRIMARY KEY (GENDER_CODE, ENTITY_CODE, LOGICAL_KEY_ID, PROPERTY_NAME)
);

CREATE INDEX goatada_test.FK_LOGKEY_MAP_LOGKEY_USAGE
  ON goatada_test.META_LOGICAL_KEY_MAP (ENTITY_CODE, GENDER_CODE, LOGICAL_KEY_ID);

CREATE INDEX goatada_test.IDX_FK_META_LOGICAL_KEY_MAP
  ON goatada_test.META_LOGICAL_KEY_MAP (ENTITY_CODE);

CREATE INDEX goatada_test.I_MLKM_LOGICAL_KEY_ID_PROP_NM
  ON goatada_test.META_LOGICAL_KEY_MAP (LOGICAL_KEY_ID, PROPERTY_NAME);

CREATE INDEX goatada_test.I_MLKM_TABLE_NAME_COLUMN_NAME
  ON goatada_test.META_LOGICAL_KEY_MAP (TABLE_NAME, COLUMN_NAME);

CREATE TABLE goatada_test.META_LOGICAL_KEY_USAGE
(
  ENTITY_CODE    VARCHAR(30)  NOT NULL,
  GENDER_CODE    CHAR         NOT NULL,
  LOGICAL_KEY_ID VARCHAR(100) NOT NULL,
  PRIMARY KEY (ENTITY_CODE, GENDER_CODE, LOGICAL_KEY_ID),
  CONSTRAINT FK_LOGICAL_KEY_USAGE_ENTITY
  FOREIGN KEY (ENTITY_CODE) REFERENCES goatada_test.META_ENTITY (ENTITY_CODE),
  CONSTRAINT FK_LOGICAL_KEY_USAGE_GENDER
  FOREIGN KEY (GENDER_CODE) REFERENCES goatada_test.META_GENDER (GENDER_CODE)
);

CREATE INDEX goatada_test.I_MLKU_GENDER_CODE
  ON goatada_test.META_LOGICAL_KEY_USAGE (GENDER_CODE);

CREATE INDEX goatada_test.I_MLKU_LOGICAL_KEY_ID
  ON goatada_test.META_LOGICAL_KEY_USAGE (LOGICAL_KEY_ID);

CREATE TABLE goatada_test.META_MV_ELEMENT_TYPE_PROP_CONS
(
  MV_ELEMENT_TYPE_PROP_CONS_PK INT           NOT NULL
    PRIMARY KEY,
  ENTITY_CODE                  VARCHAR(30)   NOT NULL,
  GENDER_CODE                  CHAR          NOT NULL,
  ELEMENT_TYPE_CODE            VARCHAR(30)   NOT NULL,
  PROPERTY_TYPE                VARCHAR(30)   NOT NULL,
  PROPERTY_SET                 VARCHAR(100)  NOT NULL,
  PROEPRTY                     VARCHAR(255)  NOT NULL,
  DATATYPE                     VARCHAR(30)   NOT NULL,
  DEFINITION                   VARCHAR(3500) NULL,
  SEQUENCE_NR                  INT           NOT NULL,
  CODE_LIST                    VARCHAR(255)  NULL,
  MANDATORY                    VARCHAR(255)  NULL,
  LENGTH                       VARCHAR(255)  NULL,
  MAX_LENGTH                   VARCHAR(255)  NULL,
  SUBJECT_TYPE                 VARCHAR(255)  NULL
);

CREATE INDEX goatada_test.IX_ELEMENT_TYPE_CODE
  ON goatada_test.META_MV_ELEMENT_TYPE_PROP_CONS (ELEMENT_TYPE_CODE);

CREATE TABLE goatada_test.META_PROPERTY
(
  PROPERTY_SET_ID    VARCHAR(100)  NOT NULL,
  PROPERTY_NAME      VARCHAR(255)  NOT NULL,
  SEQUENCE_NR        INT           NOT NULL,
  BASIC_DATATYPE     VARCHAR(30)   NOT NULL,
  DEFAULT_DEFINITION VARCHAR(3500) NULL,
  PRIMARY KEY (PROPERTY_SET_ID, PROPERTY_NAME)
);

ALTER TABLE goatada_test.META_EXPLICIT_MAP_DEFINITION
  ADD CONSTRAINT goatada_test.FK_EXPLICIT_MAP_PROPERTY
FOREIGN KEY (PROPERTY_SET_ID, PROPERTY_NAME) REFERENCES goatada_test.META_PROPERTY (PROPERTY_SET_ID, PROPERTY_NAME);

ALTER TABLE goatada_test.META_GLOBAL_PROPERTY_MAP
  ADD CONSTRAINT goatada_test.FK_GLOBAL_PROP_MAP_PROPERTY
FOREIGN KEY (PROPERTY_SET_ID, PROPERTY_NAME) REFERENCES goatada_test.META_PROPERTY (PROPERTY_SET_ID, PROPERTY_NAME);

ALTER TABLE goatada_test.META_LOGICAL_KEY_MAP
  ADD CONSTRAINT goatada_test.FK_LOGKEY_MAP_PROPERTY
FOREIGN KEY (LOGICAL_KEY_ID, PROPERTY_NAME) REFERENCES goatada_test.META_PROPERTY (PROPERTY_SET_ID, PROPERTY_NAME);

CREATE TABLE goatada_test.META_PROPERTY_CONSTRAINT
(
  PROPERTY_CONSTRAINT_PK INT          NOT NULL
    PRIMARY KEY,
  PROPERTY_SET_ID        VARCHAR(100) NOT NULL,
  PROPERTY_NAME          VARCHAR(255) NOT NULL,
  ELEMENT_TYPE_CODE      VARCHAR(30)  NULL,
  CONSTRAINT_TYPE        VARCHAR(30)  NOT NULL,
  CONSTRAINT_VALUE       VARCHAR(255) NOT NULL,
  ENTITY_CODE            VARCHAR(30)  NULL,
  CONSTRAINT FK_PROPERTY_CONSTRAINT_PROP
  FOREIGN KEY (PROPERTY_SET_ID, PROPERTY_NAME) REFERENCES goatada_test.META_PROPERTY (PROPERTY_SET_ID, PROPERTY_NAME),
  CONSTRAINT FK_PROPERTY_CONS_ELEMENT_TYPE
  FOREIGN KEY (ELEMENT_TYPE_CODE) REFERENCES goatada_test.META_ELEMENT_TYPE (ELEMENT_TYPE_CODE)
);

CREATE INDEX goatada_test.FK_PROPERTY_CONSTRAINT_PROP
  ON goatada_test.META_PROPERTY_CONSTRAINT (PROPERTY_SET_ID, PROPERTY_NAME);

CREATE INDEX goatada_test.IDX_FK_MT_PROPERTY_CONSTRAINT
  ON goatada_test.META_PROPERTY_CONSTRAINT (ENTITY_CODE);

CREATE INDEX goatada_test.I_MPC_ELEMENT_TYPE_CODE
  ON goatada_test.META_PROPERTY_CONSTRAINT (ELEMENT_TYPE_CODE);

CREATE INDEX goatada_test.I_MPC_PROP_NAME_PROP_SET_ID
  ON goatada_test.META_PROPERTY_CONSTRAINT (PROPERTY_NAME, PROPERTY_SET_ID);

CREATE TABLE goatada_test.META_PROPERTY_SEMANTIC
(
  ELEMENT_TYPE_CODE VARCHAR(30)   NOT NULL,
  PROPERTY_SET_ID   VARCHAR(100)  NOT NULL,
  PROPERTY_NAME     VARCHAR(255)  NOT NULL,
  DEFINITION        VARCHAR(3500) NOT NULL,
  ENTITY_CODE       VARCHAR(30)   NULL,
  PRIMARY KEY (ELEMENT_TYPE_CODE, PROPERTY_SET_ID, PROPERTY_NAME),
  CONSTRAINT FK_PROP_SEMANTIC_ELEMENT_TYPE
  FOREIGN KEY (ELEMENT_TYPE_CODE) REFERENCES goatada_test.META_ELEMENT_TYPE (ELEMENT_TYPE_CODE),
  CONSTRAINT FK_PROP_SEMANTIC_PROPERTY
  FOREIGN KEY (PROPERTY_SET_ID, PROPERTY_NAME) REFERENCES goatada_test.META_PROPERTY (PROPERTY_SET_ID, PROPERTY_NAME)
);

CREATE INDEX goatada_test.IDX_FK_META_PROPERTY_SEMANTIC
  ON goatada_test.META_PROPERTY_SEMANTIC (ENTITY_CODE);

CREATE INDEX goatada_test.I_MPS_PROP_SET_ID_PROP_NAME
  ON goatada_test.META_PROPERTY_SEMANTIC (PROPERTY_SET_ID, PROPERTY_NAME);

CREATE TABLE goatada_test.META_PROPERTY_SET
(
  PROPERTY_SET_ID   VARCHAR(100) NOT NULL
    PRIMARY KEY,
  PROPERTY_SET_NAME VARCHAR(255) NOT NULL,
  PROPERTY_SET_TYPE VARCHAR(30)  NOT NULL
);

ALTER TABLE goatada_test.META_DATATYPE_USAGE
  ADD CONSTRAINT goatada_test.FK_DATATYPE_USAGE_PROERPTY_SET
FOREIGN KEY (DATATYPE_ID) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_ELEMENT_DATATYPE_COMP
  ADD CONSTRAINT goatada_test.FK_ELEM_DATATYPE_LOGICAL_KEY
FOREIGN KEY (LOGICAL_KEY_ID) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_ELEMENT_DATATYPE_COMP
  ADD CONSTRAINT goatada_test.FK_ELEM_DATATYPE_DATATYPE
FOREIGN KEY (DATATYPE_ID) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_GENDER
  ADD CONSTRAINT goatada_test.FK_GENDER_REFERENCE
FOREIGN KEY (GLOBAL_REFERENCE_SET) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_GENDER
  ADD CONSTRAINT goatada_test.FK_GENDER_ATTRIBUTE
FOREIGN KEY (GLOBAL_ATTRIBUTE_SET) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_LOGICAL_KEY_USAGE
  ADD CONSTRAINT goatada_test.FK_LOGICAL_KEY_USAGE_LOG_KEY
FOREIGN KEY (LOGICAL_KEY_ID) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

ALTER TABLE goatada_test.META_PROPERTY
  ADD CONSTRAINT goatada_test.FK_PROPERTY_PROPERTY_SET
FOREIGN KEY (PROPERTY_SET_ID) REFERENCES goatada_test.META_PROPERTY_SET (PROPERTY_SET_ID);

CREATE TABLE goatada_test.META_TABLE
(
  TABLE_NAME                VARCHAR(24) NOT NULL
    PRIMARY KEY,
  GENDER_CODE               CHAR        NULL,
  ENTITY_CODE               VARCHAR(30) NULL,
  ELEMENT_MAPPING_TYPE_CODE VARCHAR(30) NOT NULL,
  ELEMENT_TYPE_COLUMN_NAME  VARCHAR(30) NULL,
  CONSTRAINT UK_META_TABLE_ENTITY_GENDER
  UNIQUE (ENTITY_CODE, GENDER_CODE),
  CONSTRAINT FK_TABLE_GENDER
  FOREIGN KEY (GENDER_CODE) REFERENCES goatada_test.META_GENDER (GENDER_CODE)
);

CREATE INDEX goatada_test.I_MT_GENDER_CODE
  ON goatada_test.META_TABLE (GENDER_CODE);

CREATE TABLE goatada_test.META_TABLE_COLUMN
(
  TABLE_NAME        VARCHAR(30)   NOT NULL,
  COLUMN_NAME       VARCHAR(30)   NOT NULL,
  COLUMN_ORDER      INT           NOT NULL,
  DB_DATA_TYPE      VARCHAR(30)   NOT NULL,
  DB_DATA_LENGTH    INT           NOT NULL,
  DB_DATA_PRECISION INT           NULL,
  DB_DATA_SCALE     INT           NULL,
  NULLABLE          CHAR          NOT NULL,
  DEFAULT_VALUE     VARCHAR(255)  NULL,
  COMMENTS          VARCHAR(3500) NULL,
  PRIMARY KEY (TABLE_NAME, COLUMN_NAME)
);

ALTER TABLE goatada_test.META_EXPLICIT_MAP_DEFINITION
  ADD CONSTRAINT goatada_test.FK_EXPLICIT_MAP_TABLE_COLUMN
FOREIGN KEY (TABLE_NAME, COLUMN_NAME) REFERENCES goatada_test.META_TABLE_COLUMN (TABLE_NAME, COLUMN_NAME);

ALTER TABLE goatada_test.META_GLOBAL_PROPERTY_MAP
  ADD CONSTRAINT goatada_test.FK_GLOBAL_PROP_MAP_TABLE_COL
FOREIGN KEY (TABLE_NAME, COLUMN_NAME) REFERENCES goatada_test.META_TABLE_COLUMN (TABLE_NAME, COLUMN_NAME);

ALTER TABLE goatada_test.META_LOGICAL_KEY_MAP
  ADD CONSTRAINT goatada_test.FK_LOGKEY_MAP_TABLE_COLUMN
FOREIGN KEY (TABLE_NAME, COLUMN_NAME) REFERENCES goatada_test.META_TABLE_COLUMN (TABLE_NAME, COLUMN_NAME);

CREATE TABLE goatada_test.META_TECHNICAL_ENTITY
(
  ENTITY_CODE      VARCHAR(30)  NOT NULL
    PRIMARY KEY,
  ENTITY_NAME      VARCHAR(100) NULL,
  ENTITY_LISTENER  VARCHAR(350) NULL,
  ELEMENT_DATATYPE VARCHAR(100) NOT NULL,
  TABLE_NAME       VARCHAR(24)  NULL,
  CONSTRAINT FK_TECH_ENTITY_TABLE_NAME
  FOREIGN KEY (TABLE_NAME) REFERENCES goatada_test.META_TABLE (TABLE_NAME)
);

CREATE INDEX goatada_test.IDX_FK_META_TECHNICAL_ENTITY
  ON goatada_test.META_TECHNICAL_ENTITY (TABLE_NAME);

ALTER TABLE goatada_test.META_ELEMENT_TECHNICAL_ENTITY
  ADD CONSTRAINT goatada_test.FK_TECHNICAL_ENTITY
FOREIGN KEY (TECHNICAL_ENTITY_CODE) REFERENCES goatada_test.META_TECHNICAL_ENTITY (ENTITY_CODE);

ALTER TABLE goatada_test.META_LOGICAL_KEY_MAP
  ADD CONSTRAINT goatada_test.FK_LOGICAL_KEY_TECHN_ENTITY
FOREIGN KEY (ENTITY_CODE) REFERENCES goatada_test.META_TECHNICAL_ENTITY (ENTITY_CODE);

ALTER TABLE goatada_test.META_PROPERTY_CONSTRAINT
  ADD CONSTRAINT goatada_test.FK_CONSTRAINT_TECHN_ENTITY
FOREIGN KEY (ENTITY_CODE) REFERENCES goatada_test.META_TECHNICAL_ENTITY (ENTITY_CODE);

ALTER TABLE goatada_test.META_PROPERTY_SEMANTIC
  ADD CONSTRAINT goatada_test.FK_SEMANTIC_TECHN_ENTITY
FOREIGN KEY (ENTITY_CODE) REFERENCES goatada_test.META_TECHNICAL_ENTITY (ENTITY_CODE);

CREATE TABLE goatada_test.MIGRATIONLOG
(
  MIGRATION_LOG_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  BATCH_NO         INT           NOT NULL,
  LOG_TIME         DATETIME(6)   NOT NULL,
  LOG_TEXT         VARCHAR(4000) NULL
);

CREATE TABLE goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT
(
  CONSREQ_DIST_NEEDIMPACT_PK   INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10)                                      NOT NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.ORGA_CONSREQ_DIST_ND_IMP_IDX1
  ON goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_CONSREQ_DIST_ND_IMP_IDX2
  ON goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT_A
(
  CONSREQ_DIST_NEEDIMPACT_PK   DECIMAL(38) NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10) NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30) NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30) NULL,
  START_DATE_TIME              DATETIME(6) NULL,
  END_DATE_TIME                DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  PRIMARY KEY (CONSREQ_DIST_NEEDIMPACT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_CONSRQ_D_ND_IMP_IDX1_A
  ON goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT_A (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_CONSRQ_D_ND_IMP_IDX2_A
  ON goatada_test.ORGA_CONSREQ_DIST_NEEDIMPACT_A (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP
(
  CONSREQ_PROVDR_NEEDIMPACT_PK  INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQ_NEED_IDENTIFIER  VARCHAR(10)                                      NOT NULL,
  PROVIDER_FEED_NEED_IDENTIFIER VARCHAR(10)                                      NOT NULL,
  START_DATE_TIME               DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                 DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                       VARCHAR(10)                                      NOT NULL,
  VERSION                       INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                     VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.ORGA_CONSREQ_PROV_ND_IMP_IDX1
  ON goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_CONSREQ_PROV_ND_IMP_IDX2
  ON goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP (PROVIDER_FEED_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP_A
(
  CONSREQ_PROVDR_NEEDIMPACT_PK  DECIMAL(38) NOT NULL,
  REVISION_NUMBER               INT         NOT NULL,
  REVISION_TYPE                 INT         NULL,
  CONSUMER_REQ_NEED_IDENTIFIER  VARCHAR(10) NULL,
  PROVIDER_FEED_NEED_IDENTIFIER VARCHAR(10) NULL,
  START_DATE_TIME               DATETIME(6) NULL,
  END_DATE_TIME                 DATETIME(6) NULL,
  USER_ID                       VARCHAR(10) NULL,
  VERSION                       INT         NULL,
  PRIMARY KEY (CONSREQ_PROVDR_NEEDIMPACT_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_CONSRQ_P_ND_IMP_IDX1_A
  ON goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP_A (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_CONSRQ_P_ND_IMP_IDX2_A
  ON goatada_test.ORGA_CONSREQ_PROVDR_NEEDIMP_A (PROVIDER_FEED_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSUMER_REQ_NEED
(
  CONSUMER_REQUEST_NEED_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10)                                      NOT NULL,
  CONSUMER_REQUEST_NAME        VARCHAR(100)                                     NOT NULL,
  CONSUMER_IDENTIFIER          VARCHAR(30)                                      NULL,
  APPLICATION_IDENTIFIER       VARCHAR(30)                                      NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N'                           NOT NULL
);

CREATE INDEX goatada_test.ORGA_CONSUMER_REQ_NEED_IDX1
  ON goatada_test.ORGA_CONSUMER_REQ_NEED (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSUMER_REQ_NEED_A
(
  CONSUMER_REQUEST_NEED_PK     DECIMAL(38)  NOT NULL,
  REVISION_NUMBER              INT          NOT NULL,
  REVISION_TYPE                INT          NULL,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10)  NULL,
  CONSUMER_REQUEST_NAME        VARCHAR(100) NULL,
  CONSUMER_IDENTIFIER          VARCHAR(30)  NULL,
  APPLICATION_IDENTIFIER       VARCHAR(30)  NULL,
  START_DATE_TIME              DATETIME(6)  NULL,
  END_DATE_TIME                DATETIME(6)  NULL,
  USER_ID                      VARCHAR(10)  NULL,
  VERSION                      INT          NULL,
  PRIMARY KEY (CONSUMER_REQUEST_NEED_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_CONS_REQ_ND_IDX1_A
  ON goatada_test.ORGA_CONSUMER_REQ_NEED_A (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSUMER_REQ_NEED_REF
(
  CONSUMER_REQ_NEED_REF_PK     INT AUTO_INCREMENT
    PRIMARY KEY,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10)            NOT NULL,
  CONSUMER_REQUEST_REF_TYPE    VARCHAR(30)            NOT NULL,
  CONSUMER_REQUEST_REF_VALUE   VARCHAR(4)             NOT NULL,
  USER_ID                      VARCHAR(10)            NOT NULL,
  VERSION                      INT DEFAULT '0'        NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N' NOT NULL,
  BATCH_NAME                   VARCHAR(50)            NULL,
  BUSINESS_UNIT                VARCHAR(10)            NULL,
  CUT_OFF_TIME                 TIME                   NULL,
  CUT_OFF_DATE_OFFSET          INT                    NULL
);

CREATE INDEX goatada_test.ORGA_CONSUMERREQ_NEED_REF_IDX1
  ON goatada_test.ORGA_CONSUMER_REQ_NEED_REF (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_CONSUMER_REQ_NEED_REF_A
(
  CONSUMER_REQ_NEED_REF_PK     DECIMAL(38) NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  CONSUMER_REQ_NEED_IDENTIFIER VARCHAR(10) NULL,
  CONSUMER_REQUEST_REF_TYPE    VARCHAR(30) NULL,
  CONSUMER_REQUEST_REF_VALUE   VARCHAR(4)  NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  BATCH_NAME                   VARCHAR(50) NULL,
  BUSINESS_UNIT                VARCHAR(10) NULL,
  CUT_OFF_TIME                 TIME        NULL,
  CUT_OFF_DATE_OFFSET          INT         NULL,
  PRIMARY KEY (CONSUMER_REQ_NEED_REF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_CONSREQ_ND_REF_IDX1_A
  ON goatada_test.ORGA_CONSUMER_REQ_NEED_REF_A (CONSUMER_REQ_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_NEED
(
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL
    PRIMARY KEY,
  DISTRIBUTION_NEED_NAME       VARCHAR(250)                                     NOT NULL,
  MERGED_DISTRIBUTION_FLAG     TINYINT                                          NOT NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N'                           NOT NULL,
  CONSTRAINT ORGA_DISTRIBUTION_NEED_IDX
  UNIQUE (DISTRIBUTION_NEED_IDENTIFIER)
);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_NEED_A
(
  REVISION_NUMBER              INT          NOT NULL,
  REVISION_TYPE                INT          NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)  NULL,
  DISTRIBUTION_NEED_NAME       VARCHAR(250) NULL,
  MERGED_DISTRIBUTION_FLAG     INT          NULL,
  START_DATE_TIME              DATETIME(6)  NULL,
  END_DATE_TIME                DATETIME(6)  NULL,
  USER_ID                      VARCHAR(10)  NULL,
  VERSION                      INT          NULL
);

CREATE INDEX goatada_test.ORGA_DISTRIBUTION_ND_IDX_A
  ON goatada_test.ORGA_DISTRIBUTION_NEED_A (DISTRIBUTION_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_NEED_REF
(
  DISTRIBUTION_REF_TYPE        VARCHAR(30)            NOT NULL,
  DISTRIBUTION_REF_VALUE       VARCHAR(250)           NOT NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)            NOT NULL,
  USER_ID                      VARCHAR(10)            NOT NULL,
  PROPERTY_STORE_NAME          VARCHAR(60)            NULL,
  VERSION                      INT DEFAULT '0'        NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N' NOT NULL,
  BEST_TIME                    TINYINT DEFAULT '0'    NULL,
  PROFILE                      VARCHAR(35)            NULL,
  BATCH_NAME                   VARCHAR(50)            NULL,
  BUSINESS_UNIT                VARCHAR(10)            NULL,
  CUT_OFF_TIME                 TIME                   NULL,
  DELTA_DIST                   TINYINT DEFAULT '0'    NULL,
  CUT_OFF_DATE_OFFSET          INT                    NULL,
  PRIMARY KEY (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE),
  CONSTRAINT ORGA_DISTRIB_NEED_REF_IDX
  UNIQUE (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE),
  CONSTRAINT FK_ORGA_DISTRIBUTION_NEED_REF
  FOREIGN KEY (DISTRIBUTION_NEED_IDENTIFIER) REFERENCES goatada_test.ORGA_DISTRIBUTION_NEED (DISTRIBUTION_NEED_IDENTIFIER)
);

CREATE INDEX goatada_test.IDX_FK_ORGA_DSTRBTN_NEED_REF
  ON goatada_test.ORGA_DISTRIBUTION_NEED_REF (DISTRIBUTION_NEED_IDENTIFIER);

ALTER TABLE goatada_test.DIST_DISTRIB_CHANNEL_PREF
  ADD CONSTRAINT goatada_test.FK_DIST_DISTRIB_CHANNEL_PREF
FOREIGN KEY (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE) REFERENCES goatada_test.ORGA_DISTRIBUTION_NEED_REF (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_NEED_REF_A
(
  REVISION_NUMBER              INT                 NOT NULL,
  REVISION_TYPE                INT                 NULL,
  DISTRIBUTION_REF_TYPE        VARCHAR(30)         NULL,
  DISTRIBUTION_REF_VALUE       VARCHAR(250)        NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)         NULL,
  USER_ID                      VARCHAR(10)         NULL,
  PROPERTY_STORE_NAME          VARCHAR(60)         NULL,
  VERSION                      INT                 NULL,
  BATCH_NAME                   VARCHAR(50)         NULL,
  BUSINESS_UNIT                VARCHAR(10)         NULL,
  CUT_OFF_TIME                 TIME                NULL,
  DELTA_DIST                   TINYINT DEFAULT '0' NULL,
  CUT_OFF_DATE_OFFSET          INT                 NULL
);

CREATE INDEX goatada_test.ORGA_DISTRIB_ND_R_IDX_A
  ON goatada_test.ORGA_DISTRIBUTION_NEED_REF_A (DISTRIBUTION_REF_TYPE, DISTRIBUTION_REF_VALUE);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_PACKAGE
(
  DISTRIBUTION_PACKAGE_PK      INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  CONSUMER_IDENTIFIER          VARCHAR(30)                                      NOT NULL,
  APPLICATION_IDENTIFIER       VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_NAME        VARCHAR(250)                                     NOT NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N'                           NOT NULL,
  CUSTOMER_CD                  VARCHAR(35) DEFAULT '0287.NONE'                  NOT NULL,
  MANAGEMENT                   VARCHAR(12) DEFAULT 'NO_MGMT'                    NOT NULL,
  CONSTRAINT ORGA_DISTRIBUTION_PACKAGE_IDX
  UNIQUE (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER),
  CONSTRAINT FK_ORGA_DISTRIBUTION_PACKAGE
  FOREIGN KEY (DISTRIBUTION_NEED_IDENTIFIER) REFERENCES goatada_test.ORGA_DISTRIBUTION_NEED (DISTRIBUTION_NEED_IDENTIFIER)
);

CREATE INDEX goatada_test.ORGA_DISTRIBUTION_PACKAGE_IDX2
  ON goatada_test.ORGA_DISTRIBUTION_PACKAGE (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTRIBUTION_PACKAGE_A
(
  DISTRIBUTION_PACKAGE_PK      INT                           NOT NULL,
  REVISION_NUMBER              INT                           NOT NULL,
  REVISION_TYPE                INT                           NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                   NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30)                   NULL,
  CONSUMER_IDENTIFIER          VARCHAR(30)                   NULL,
  APPLICATION_IDENTIFIER       VARCHAR(30)                   NULL,
  DISTRIBUTION_PKG_NAME        VARCHAR(250)                  NULL,
  START_DATE_TIME              DATETIME(6)                   NULL,
  END_DATE_TIME                DATETIME(6)                   NULL,
  USER_ID                      VARCHAR(10)                   NULL,
  VERSION                      INT                           NULL,
  MANAGEMENT                   VARCHAR(12) DEFAULT 'NO_MGMT' NOT NULL,
  PRIMARY KEY (DISTRIBUTION_PACKAGE_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_DISTRIB_PKG_IDX2_A
  ON goatada_test.ORGA_DISTRIBUTION_PACKAGE_A (CONSUMER_IDENTIFIER, APPLICATION_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_DISTRIB_PKG_IDX_A
  ON goatada_test.ORGA_DISTRIBUTION_PACKAGE_A (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED
(
  DISTRIB_PKG_INSTR_NEED_PK      INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_IDENTIFIER    VARCHAR(30)                                      NOT NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10)                                      NOT NULL,
  START_DATE_TIME                DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                  DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                        VARCHAR(10)                                      NOT NULL,
  VERSION                        INT DEFAULT '0'                                  NOT NULL,
  CONSTRAINT FK_ORGA_DISTRIB_PKG_INSTR_NEED
  FOREIGN KEY (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER) REFERENCES goatada_test.ORGA_DISTRIBUTION_PACKAGE (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER)
);

CREATE INDEX goatada_test.ORGA_DISTRIB_PKGINSTRNEED_IDX
  ON goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, INSTRUMENT_IDENTIFICATION_CODE);

CREATE INDEX goatada_test.ORGA_DISTRIB_PKGINSTRNEED_IDX2
  ON goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED (INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED_A
(
  DISTRIB_PKG_INSTR_NEED_PK      INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30) NULL,
  DISTRIBUTION_PKG_IDENTIFIER    VARCHAR(30) NULL,
  INSTRUMENT_IDENTIFICATION_CODE VARCHAR(10) NULL,
  START_DATE_TIME                DATETIME(6) NULL,
  END_DATE_TIME                  DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (DISTRIB_PKG_INSTR_NEED_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_D_PKGINSTRND_IDX2_A
  ON goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED_A (INSTRUMENT_IDENTIFICATION_CODE);

CREATE INDEX goatada_test.ORGA_D_PKGINSTRND_IDX_A
  ON goatada_test.ORGA_DISTRIB_PKG_INSTR_NEED_A (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, INSTRUMENT_IDENTIFICATION_CODE);

CREATE TABLE goatada_test.ORGA_DISTR_PKG_MODELDIMPTS
(
  DISTRIB_PKG_MODEL_DIM_PTS_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  DIMENSION_IDENTIFIER         VARCHAR(10)                                      NOT NULL,
  DIMENSION_POINT_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  CONSTRAINT FK_ORGA_DISTR_PKG_MODELDIMPTS
  FOREIGN KEY (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER) REFERENCES goatada_test.ORGA_DISTRIBUTION_PACKAGE (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER)
);

CREATE INDEX goatada_test.ORGA_DISTRIB_PKG_MDLDIMPTS_IDX
  ON goatada_test.ORGA_DISTR_PKG_MODELDIMPTS (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER, DIMENSION_POINT_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_DISTR_PKG_MDLDIMPTS_IDX2
  ON goatada_test.ORGA_DISTR_PKG_MODELDIMPTS (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTR_PKG_MODELDIMPTS_A
(
  DISTRIB_PKG_MODEL_DIM_PTS_PK INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30) NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30) NULL,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30) NULL,
  DIMENSION_IDENTIFIER         VARCHAR(10) NULL,
  DIMENSION_POINT_IDENTIFIER   VARCHAR(30) NULL,
  START_DATE_TIME              DATETIME(6) NULL,
  END_DATE_TIME                DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  PRIMARY KEY (DISTRIB_PKG_MODEL_DIM_PTS_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_D_PKG_MDLDIMPTS_IDX2_A
  ON goatada_test.ORGA_DISTR_PKG_MODELDIMPTS_A (ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_D_PKG_MDLDIMPTS_IDX_A
  ON goatada_test.ORGA_DISTR_PKG_MODELDIMPTS_A (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, ANALYTICAL_MODEL_IDENTIFIER, DIMENSION_IDENTIFIER, DIMENSION_POINT_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTR_PKG_MODEL_NEED
(
  DISTR_PKG_MODEL_NEED_PK      INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME              DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                      VARCHAR(10)                                      NOT NULL,
  VERSION                      INT DEFAULT '0'                                  NOT NULL,
  CONSTRAINT FK_ORGA_DISTR_PKG_MODEL_NEED
  FOREIGN KEY (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER) REFERENCES goatada_test.ORGA_DISTRIBUTION_PACKAGE (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER)
);

CREATE INDEX goatada_test.ORGA_DISTR_PKG_MODEL_NEED_IDX
  ON goatada_test.ORGA_DISTR_PKG_MODEL_NEED (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, ANALYTICAL_MODEL_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_DISTR_PKG_MODEL_NEED_IDX2
  ON goatada_test.ORGA_DISTR_PKG_MODEL_NEED (ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_DISTR_PKG_MODEL_NEED_A
(
  DISTR_PKG_MODEL_NEED_PK      INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  DISTRIBUTION_NEED_IDENTIFIER VARCHAR(30) NULL,
  DISTRIBUTION_PKG_IDENTIFIER  VARCHAR(30) NULL,
  ANALYTICAL_MODEL_IDENTIFIER  VARCHAR(30) NULL,
  START_DATE_TIME              DATETIME(6) NULL,
  END_DATE_TIME                DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  PRIMARY KEY (DISTR_PKG_MODEL_NEED_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_D_PKG_MODEL_NEED_IDX2_A
  ON goatada_test.ORGA_DISTR_PKG_MODEL_NEED_A (ANALYTICAL_MODEL_IDENTIFIER);

CREATE INDEX goatada_test.ORGA_D_PKG_MODEL_NEED_IDX_A
  ON goatada_test.ORGA_DISTR_PKG_MODEL_NEED_A (DISTRIBUTION_NEED_IDENTIFIER, DISTRIBUTION_PKG_IDENTIFIER, ANALYTICAL_MODEL_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_FEED_NEED
(
  FEED_NEED_IDENTIFIER      VARCHAR(10)                   NOT NULL
    PRIMARY KEY,
  SNAP_CODE                 VARCHAR(30)                   NOT NULL,
  FEED_NEED_NAME            VARCHAR(100)                  NULL,
  AUTO_CREATE_SUBJECTS_FLAG INT                           NULL,
  AUTO_FILL_ELEMENTS_FLAG   INT                           NULL,
  AUTO_FILL_SUBJECTS_FLAG   INT                           NULL,
  FILTER_SUBJECTS_FLAG      INT                           NULL,
  FILTER_ELEMENTS_FLAG      INT                           NULL,
  MODIFIED_DATE_TIME        DATETIME(6)                   NOT NULL,
  USER_ID                   VARCHAR(10)                   NOT NULL,
  VERSION                   INT DEFAULT '0'               NOT NULL,
  TEST_DATA                 VARCHAR(1) DEFAULT 'N'        NOT NULL,
  MANAGEMENT                VARCHAR(12) DEFAULT 'NO_MGMT' NOT NULL,
  TIME_SERIES_FLAG          INT                           NULL,
  CONSTRAINT IDX_FEEDNEED_IDENTIFIER
  UNIQUE (FEED_NEED_IDENTIFIER)
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_A
(
  REVISION_NUMBER           INT                           NOT NULL,
  REVISION_TYPE             INT                           NULL,
  FEED_NEED_IDENTIFIER      VARCHAR(10)                   NULL,
  SNAP_CODE                 VARCHAR(30)                   NULL,
  FEED_NEED_NAME            VARCHAR(100)                  NULL,
  AUTO_CREATE_SUBJECTS_FLAG INT                           NULL,
  AUTO_FILL_ELEMENTS_FLAG   INT                           NULL,
  AUTO_FILL_SUBJECTS_FLAG   INT                           NULL,
  FILTER_SUBJECTS_FLAG      INT                           NULL,
  FILTER_ELEMENTS_FLAG      INT                           NULL,
  MODIFIED_DATE_TIME        DATETIME(6)                   NULL,
  USER_ID                   VARCHAR(10)                   NULL,
  VERSION                   INT                           NULL,
  MANAGEMENT                VARCHAR(12) DEFAULT 'NO_MGMT' NOT NULL,
  TIME_SERIES_FLAG          INT                           NULL
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_ELEMENTS
(
  FEED_NEED_ELEMENTS_PK        INT AUTO_INCREMENT
    PRIMARY KEY,
  ELEMENT_TYPE_IDENTIFIER_CODE VARCHAR(30)            NOT NULL,
  MODIFIED_DATE_TIME           DATETIME(6)            NOT NULL,
  USER_ID                      VARCHAR(10)            NOT NULL,
  VERSION                      INT DEFAULT '0'        NOT NULL,
  TEST_DATA                    VARCHAR(1) DEFAULT 'N' NOT NULL,
  FEED_NEED_IDENTIFIER         VARCHAR(10)            NULL,
  CONSTRAINT FK_ORGA_FEED_NEED_ELEMENTS
  FOREIGN KEY (FEED_NEED_IDENTIFIER) REFERENCES goatada_test.ORGA_FEED_NEED (FEED_NEED_IDENTIFIER)
);

CREATE INDEX goatada_test.FK_ORGA_FEED_NEED_ELEMENTS
  ON goatada_test.ORGA_FEED_NEED_ELEMENTS (FEED_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_FEED_NEED_ELEMENTS_A
(
  FEED_NEED_ELEMENTS_PK        INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  ELEMENT_TYPE_IDENTIFIER_CODE VARCHAR(30) NULL,
  MODIFIED_DATE_TIME           DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  FEED_NEED_IDENTIFIER         VARCHAR(10) NULL,
  PRIMARY KEY (FEED_NEED_ELEMENTS_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_RECORD
(
  FEED_NEED_RECORD_PK  INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID           VARCHAR(12)     NOT NULL,
  MODIFIED_DATE_TIME   DATETIME(6)     NOT NULL,
  USER_ID              VARCHAR(10)     NOT NULL,
  VERSION              INT DEFAULT '0' NOT NULL,
  FEED_NEED_IDENTIFIER VARCHAR(10)     NULL,
  CONSTRAINT UK_FEED_NEED_SUBJECT
  UNIQUE (FEED_NEED_IDENTIFIER, SUBJECT_ID),
  CONSTRAINT FK_ORGA_FEED_NEED_RECORD
  FOREIGN KEY (FEED_NEED_IDENTIFIER) REFERENCES goatada_test.ORGA_FEED_NEED (FEED_NEED_IDENTIFIER)
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_RECORD_A
(
  FEED_NEED_RECORD_PK  INT         NOT NULL,
  REVISION_NUMBER      INT         NOT NULL,
  REVISION_TYPE        INT         NULL,
  SUBJECT_ID           VARCHAR(12) NULL,
  MODIFIED_DATE_TIME   DATETIME(6) NULL,
  USER_ID              VARCHAR(10) NULL,
  VERSION              INT         NULL,
  FEED_NEED_IDENTIFIER VARCHAR(10) NULL,
  PRIMARY KEY (FEED_NEED_RECORD_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_RECORD_ATTR
(
  FEED_NEED_RECORD_ATTR_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  FEED_NEED_RECORD_FK      INT             NOT NULL,
  PRICING_ENTITY           VARCHAR(30)     NULL,
  CURRENCY                 VARCHAR(35)     NULL,
  SCALING_FACTOR           INT             NULL,
  MODIFIED_DATE_TIME       DATETIME(6)     NOT NULL,
  USER_ID                  VARCHAR(10)     NOT NULL,
  VERSION                  INT DEFAULT '0' NOT NULL,
  CONSTRAINT FK_ORGA_FEED_NEED_RECORD_ATTR
  FOREIGN KEY (FEED_NEED_RECORD_FK) REFERENCES goatada_test.ORGA_FEED_NEED_RECORD (FEED_NEED_RECORD_PK)
    ON DELETE CASCADE
);

CREATE INDEX goatada_test.FK_ORGA_FEED_NEED_RECORD_ATTR
  ON goatada_test.ORGA_FEED_NEED_RECORD_ATTR (FEED_NEED_RECORD_FK);

CREATE TABLE goatada_test.ORGA_FEED_NEED_RECORD_ATTR_A
(
  FEED_NEED_RECORD_ATTR_PK INT         NOT NULL,
  REVISION_NUMBER          INT         NOT NULL,
  FEED_NEED_RECORD_FK      INT         NULL,
  PRICING_ENTITY           VARCHAR(30) NULL,
  CURRENCY                 VARCHAR(35) NULL,
  SCALING_FACTOR           INT         NULL,
  MODIFIED_DATE_TIME       DATETIME(6) NULL,
  USER_ID                  VARCHAR(10) NULL,
  VERSION                  INT         NULL,
  REVISION_TYPE            INT         NULL
);

CREATE TABLE goatada_test.ORGA_FEED_NEED_REC_ELEMENTS
(
  FEED_NEED_RECORD_ELEMENTS_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  FEED_NEED_RECORD_PK          INT             NOT NULL,
  ELEMENT_TYPE_IDENTIFIER_CODE VARCHAR(30)     NOT NULL,
  MODIFIED_DATE_TIME           DATETIME(6)     NOT NULL,
  USER_ID                      VARCHAR(10)     NOT NULL,
  VERSION                      INT DEFAULT '0' NOT NULL
);

CREATE INDEX goatada_test.ORGA_FEED_NEED_REC_ELEM_IDX
  ON goatada_test.ORGA_FEED_NEED_REC_ELEMENTS (FEED_NEED_RECORD_PK);

CREATE TABLE goatada_test.ORGA_FEED_NEED_REC_ELEMENTS_A
(
  FEED_NEED_RECORD_ELEMENTS_PK INT         NOT NULL,
  REVISION_NUMBER              INT         NOT NULL,
  REVISION_TYPE                INT         NULL,
  FEED_NEED_RECORD_PK          INT         NULL,
  ELEMENT_TYPE_IDENTIFIER_CODE VARCHAR(30) NULL,
  MODIFIED_DATE_TIME           DATETIME(6) NULL,
  USER_ID                      VARCHAR(10) NULL,
  VERSION                      INT         NULL,
  PRIMARY KEY (FEED_NEED_RECORD_ELEMENTS_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_ORGA_F_N_REC_ELEMENTS_A
  ON goatada_test.ORGA_FEED_NEED_REC_ELEMENTS_A (FEED_NEED_RECORD_PK);

CREATE TABLE goatada_test.ORGA_FEED_NEED_REFERENCE
(
  FEED_REFERENCE_TYPE_CODE      VARCHAR(30)            NOT NULL,
  FEED_REFERENCE_VALUE          VARCHAR(4)             NOT NULL,
  DATA_PROVIDER_CODE            VARCHAR(30)            NOT NULL,
  PROVIDER_REQUEST_PROFILE_CODE VARCHAR(30)            NOT NULL,
  BATCH_NAME                    VARCHAR(50)            NULL,
  BUSINESS_UNIT                 VARCHAR(10)            NULL,
  CUT_OFF_TIME                  TIME                   NULL,
  IS_MANAGED                    TINYINT DEFAULT '0'    NOT NULL,
  MODIFIED_DATE_TIME            DATETIME(6)            NOT NULL,
  USER_ID                       VARCHAR(10)            NOT NULL,
  VERSION                       INT DEFAULT '0'        NOT NULL,
  TEST_DATA                     VARCHAR(1) DEFAULT 'N' NOT NULL,
  CUT_OFF_DATE_OFFSET           INT                    NULL,
  FEED_NEED_IDENTIFIER          VARCHAR(10)            NULL,
  PRIMARY KEY (FEED_REFERENCE_TYPE_CODE, FEED_REFERENCE_VALUE),
  CONSTRAINT UQ_ORGA_FEED_NEED_REFERENCE
  UNIQUE (FEED_REFERENCE_TYPE_CODE, FEED_REFERENCE_VALUE),
  CONSTRAINT FK_ORGA_FEED_NEED_REFERENCE
  FOREIGN KEY (FEED_NEED_IDENTIFIER) REFERENCES goatada_test.ORGA_FEED_NEED (FEED_NEED_IDENTIFIER)
);

CREATE INDEX goatada_test.FK_ORGA_FEED_NEED_REFERENCE
  ON goatada_test.ORGA_FEED_NEED_REFERENCE (FEED_NEED_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_PKG_META
(
  ORGA_PKG_META_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  DIST_NEED_ID     VARCHAR(30) NOT NULL,
  DIST_PKG_NEED_ID VARCHAR(30) NOT NULL,
  SUBJECT_ID       VARCHAR(12) NOT NULL,
  ELEMENT_TYPE     VARCHAR(35) NOT NULL
);

CREATE INDEX goatada_test.IDX_ORGA_PKG_META
  ON goatada_test.ORGA_PKG_META (DIST_NEED_ID, DIST_PKG_NEED_ID, ELEMENT_TYPE, SUBJECT_ID);

CREATE TABLE goatada_test.ORGA_PKG_META_DATA
(
  ORGA_PKG_META_DATA_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  ORGA_PKG_META_FK      INT          NOT NULL,
  NAME                  VARCHAR(30)  NOT NULL,
  VALUE                 VARCHAR(100) NULL,
  CONSTRAINT FK_ORGA_PKG_META
  FOREIGN KEY (ORGA_PKG_META_FK) REFERENCES goatada_test.ORGA_PKG_META (ORGA_PKG_META_PK)
);

CREATE INDEX goatada_test.IDX_FK_ORGA_PKG_META_DATA
  ON goatada_test.ORGA_PKG_META_DATA (ORGA_PKG_META_FK);

CREATE TABLE goatada_test.ORGA_PORTFOLIO_REFS
(
  ORGA_PORTFOLIO_REFS_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SRC_FEED               VARCHAR(10)            NULL,
  SRC_DIST               INT                    NULL,
  TARGET_FEED            VARCHAR(10)            NULL,
  TARGET_DIST            INT                    NULL,
  MODIFIED_DATE_TIME     DATETIME(6)            NOT NULL,
  USER_ID                VARCHAR(10)            NOT NULL,
  VERSION                INT DEFAULT '0'        NOT NULL,
  TEST_DATA              VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT IDX_ORGA_PORTFOLIO_SRC_TARGET
  UNIQUE (SRC_FEED, SRC_DIST, TARGET_FEED, TARGET_DIST),
  CONSTRAINT FK_ORGA_FEED_NEED_SRC
  FOREIGN KEY (SRC_FEED) REFERENCES goatada_test.ORGA_FEED_NEED (FEED_NEED_IDENTIFIER),
  CONSTRAINT FK_ORGA_DIST_PACKAGE_SRC
  FOREIGN KEY (SRC_DIST) REFERENCES goatada_test.ORGA_DISTRIBUTION_PACKAGE (DISTRIBUTION_PACKAGE_PK),
  CONSTRAINT FK_ORGA_FEED_NEED_TGT
  FOREIGN KEY (TARGET_FEED) REFERENCES goatada_test.ORGA_FEED_NEED (FEED_NEED_IDENTIFIER),
  CONSTRAINT FK_ORGA_DIST_PACKAGE_TGT
  FOREIGN KEY (TARGET_DIST) REFERENCES goatada_test.ORGA_DISTRIBUTION_PACKAGE (DISTRIBUTION_PACKAGE_PK)
);

CREATE INDEX goatada_test.FK_ORGA_FEED_NEED_TGT
  ON goatada_test.ORGA_PORTFOLIO_REFS (TARGET_FEED);

CREATE INDEX goatada_test.IDX_ORGA_PORTFOLIO_REFS_SRC
  ON goatada_test.ORGA_PORTFOLIO_REFS (SRC_DIST);

CREATE INDEX goatada_test.IDX_ORGA_PORTFOLIO_REFS_SRC_PK
  ON goatada_test.ORGA_PORTFOLIO_REFS (SRC_DIST);

CREATE INDEX goatada_test.IDX_ORGA_PORTFOLIO_REFS_TARGET
  ON goatada_test.ORGA_PORTFOLIO_REFS (TARGET_DIST);

CREATE INDEX goatada_test.IDX_ORGA_PORTFOLIO_REFS_TGT_PK
  ON goatada_test.ORGA_PORTFOLIO_REFS (TARGET_DIST);

CREATE TABLE goatada_test.ORGA_PORTFOLIO_REFS_A
(
  ORGA_PORTFOLIO_REFS_PK DECIMAL(8)  NOT NULL,
  SRC_FEED               VARCHAR(10) NULL,
  REVISION_NUMBER        INT         NOT NULL,
  REVISION_TYPE          INT         NULL,
  SRC_DIST               VARCHAR(10) NULL,
  TARGET_FEED            VARCHAR(10) NULL,
  TARGET_DIST            VARCHAR(10) NULL,
  MODIFIED_DATE_TIME     DATETIME(6) NULL,
  USER_ID                VARCHAR(10) NULL,
  VERSION                INT         NULL,
  PRIMARY KEY (ORGA_PORTFOLIO_REFS_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.IDX_ORGA_PORTF_REFS_SRC_A
  ON goatada_test.ORGA_PORTFOLIO_REFS_A (SRC_DIST);

CREATE INDEX goatada_test.IDX_ORGA_PORTF_REFS_T_A
  ON goatada_test.ORGA_PORTFOLIO_REFS_A (TARGET_DIST);

CREATE TABLE goatada_test.ORGA_RECONCILED_PACKAGES
(
  RECONCILED_PACKAGES_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  RECONCILIATION_INFO_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  RECONCILE_DIST_NEED_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  RECONCILE_DIST_PKG_IDENTIFIER  VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME                DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                  DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                        VARCHAR(10)                                      NOT NULL,
  VERSION                        INT DEFAULT '0'                                  NOT NULL
);

CREATE INDEX goatada_test.ORGA_RECONCILED_PACKAGES_IDX
  ON goatada_test.ORGA_RECONCILED_PACKAGES (DISTRIBUTION_NEED_IDENTIFIER, RECONCILIATION_INFO_IDENTIFIER, RECONCILE_DIST_NEED_IDENTIFIER, RECONCILE_DIST_PKG_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_RECONCILED_PACKAGES_A
(
  RECONCILED_PACKAGES_PK         INT         NOT NULL,
  REVISION_NUMBER                INT         NOT NULL,
  REVISION_TYPE                  INT         NULL,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30) NULL,
  RECONCILIATION_INFO_IDENTIFIER VARCHAR(30) NULL,
  RECONCILE_DIST_NEED_IDENTIFIER VARCHAR(30) NULL,
  RECONCILE_DIST_PKG_IDENTIFIER  VARCHAR(30) NULL,
  START_DATE_TIME                DATETIME(6) NULL,
  END_DATE_TIME                  DATETIME(6) NULL,
  USER_ID                        VARCHAR(10) NULL,
  VERSION                        INT         NULL,
  PRIMARY KEY (RECONCILED_PACKAGES_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_RECONCILED_PKG_IDX_A
  ON goatada_test.ORGA_RECONCILED_PACKAGES_A (DISTRIBUTION_NEED_IDENTIFIER, RECONCILIATION_INFO_IDENTIFIER, RECONCILE_DIST_NEED_IDENTIFIER, RECONCILE_DIST_PKG_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_RECONCILIATION_INFO
(
  RECONCILIATION_INFO_PK         INT AUTO_INCREMENT
    PRIMARY KEY,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30)                                      NOT NULL,
  RECONCILIATION_INFO_IDENTIFIER VARCHAR(30)                                      NOT NULL,
  RECONCILIATION_INFO_NAME       VARCHAR(250)                                     NOT NULL,
  RECONCILIATION_TYPE            VARCHAR(30)                                      NOT NULL,
  CONSUMER_IDENTIFIER            VARCHAR(30)                                      NOT NULL,
  APPLICATION_IDENTIFIER         VARCHAR(30)                                      NOT NULL,
  START_DATE_TIME                DATETIME(6)                                      NOT NULL,
  END_DATE_TIME                  DATETIME(6) DEFAULT '9999-12-31 23:59:59.000000' NOT NULL,
  USER_ID                        VARCHAR(10)                                      NOT NULL,
  VERSION                        INT DEFAULT '0'                                  NOT NULL
);

CREATE INDEX goatada_test.ORGA_RECONCILIATION_INFO_IDX
  ON goatada_test.ORGA_RECONCILIATION_INFO (DISTRIBUTION_NEED_IDENTIFIER, RECONCILIATION_INFO_IDENTIFIER);

CREATE TABLE goatada_test.ORGA_RECONCILIATION_INFO_A
(
  RECONCILIATION_INFO_PK         INT          NOT NULL,
  REVISION_NUMBER                INT          NOT NULL,
  REVISION_TYPE                  INT          NULL,
  DISTRIBUTION_NEED_IDENTIFIER   VARCHAR(30)  NULL,
  RECONCILIATION_INFO_IDENTIFIER VARCHAR(30)  NULL,
  RECONCILIATION_INFO_NAME       VARCHAR(250) NULL,
  RECONCILIATION_TYPE            VARCHAR(30)  NULL,
  CONSUMER_IDENTIFIER            VARCHAR(30)  NULL,
  APPLICATION_IDENTIFIER         VARCHAR(30)  NULL,
  START_DATE_TIME                DATETIME(6)  NULL,
  END_DATE_TIME                  DATETIME(6)  NULL,
  USER_ID                        VARCHAR(10)  NULL,
  VERSION                        INT          NULL,
  PRIMARY KEY (RECONCILIATION_INFO_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.ORGA_REC_I_IDX_A
  ON goatada_test.ORGA_RECONCILIATION_INFO_A (DISTRIBUTION_NEED_IDENTIFIER, RECONCILIATION_INFO_IDENTIFIER);

CREATE TABLE goatada_test.REFD_CODE_LIST
(
  CODE_LIST_CD       VARCHAR(4)             NOT NULL
    PRIMARY KEY,
  CODE_GROUP_CD      VARCHAR(30)            NOT NULL,
  CODE_LIST_NAME     VARCHAR(100)           NOT NULL,
  USER_MODIFIABLE    VARCHAR(1)             NULL,
  MAIN_CODE_LIST     VARCHAR(1)             NULL,
  MODIFIED_DATE_TIME DATETIME(6)            NOT NULL,
  USER_ID            VARCHAR(10)            NOT NULL,
  VERSION            INT DEFAULT '0'        NOT NULL,
  TEST_DATA          VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT UQ_REFD_CODE_LIST1
  UNIQUE (CODE_LIST_CD),
  CONSTRAINT UQ_REFD_CODE_LIST2
  UNIQUE (CODE_LIST_NAME)
);

CREATE INDEX goatada_test.REFD_CODE_LIST_IDX1
  ON goatada_test.REFD_CODE_LIST (CODE_GROUP_CD);

CREATE TABLE goatada_test.REFD_CODE_LIST_A
(
  REVISION_NUMBER    INT          NOT NULL,
  REVISION_TYPE      INT          NULL,
  CODE_LIST_CD       VARCHAR(4)   NULL,
  CODE_GROUP_CD      VARCHAR(30)  NULL,
  CODE_LIST_NAME     VARCHAR(100) NULL,
  USER_MODIFIABLE    VARCHAR(1)   NULL,
  MAIN_CODE_LIST     VARCHAR(1)   NULL,
  MODIFIED_DATE_TIME DATETIME(6)  NULL,
  USER_ID            VARCHAR(10)  NULL,
  VERSION            INT          NULL
);

CREATE TABLE goatada_test.REFD_CODE_MAPPING
(
  CODE_MAPPING_PK    INT AUTO_INCREMENT
    PRIMARY KEY,
  MAPPING_GROUP_CD   VARCHAR(4)             NOT NULL,
  MAPPING_GROUP_NAME VARCHAR(100)           NOT NULL,
  MODIFIED_DATE_TIME DATETIME(6)            NOT NULL,
  USER_ID            VARCHAR(10)            NOT NULL,
  VERSION            INT DEFAULT '0'        NOT NULL,
  TEST_DATA          VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT UQ_REFD_CODE_MAPPING
  UNIQUE (MAPPING_GROUP_CD)
);

CREATE TABLE goatada_test.REFD_CODE_MAPPING_A
(
  CODE_MAPPING_PK    INT          NOT NULL,
  REVISION_NUMBER    INT          NOT NULL,
  REVISION_TYPE      INT          NULL,
  MAPPING_GROUP_CD   VARCHAR(4)   NULL,
  MAPPING_GROUP_NAME VARCHAR(100) NULL,
  MODIFIED_DATE_TIME DATETIME(6)  NULL,
  USER_ID            VARCHAR(10)  NULL,
  VERSION            INT          NULL,
  PRIMARY KEY (CODE_MAPPING_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.REFD_CODE_TRANSLATION_REF
(
  CODE_TRANSLATION_REF_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CODE_VALUE_PK           INT                       NOT NULL,
  LANGUAGE_CD             VARCHAR(30) DEFAULT 'DFT' NOT NULL,
  CODE_TRANSLATION        VARCHAR(250)              NOT NULL,
  MODIFIED_DATE_TIME      DATETIME(6)               NOT NULL,
  USER_ID                 VARCHAR(10)               NOT NULL,
  VERSION                 INT DEFAULT '0'           NOT NULL,
  TEST_DATA               VARCHAR(1) DEFAULT 'N'    NOT NULL
);

CREATE INDEX goatada_test.FK_REFD_CODE_TRANSLATION_REF
  ON goatada_test.REFD_CODE_TRANSLATION_REF (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_CODE_TRANSLATION_REF_A
(
  CODE_TRANSLATION_REF_PK INT          NOT NULL,
  REVISION_NUMBER         INT          NOT NULL,
  REVISION_TYPE           INT          NULL,
  CODE_VALUE_PK           INT          NULL,
  LANGUAGE_CD             VARCHAR(30)  NULL,
  CODE_TRANSLATION        VARCHAR(250) NULL,
  MODIFIED_DATE_TIME      DATETIME(6)  NULL,
  USER_ID                 VARCHAR(10)  NULL,
  VERSION                 INT          NULL,
  PRIMARY KEY (CODE_TRANSLATION_REF_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_REFD_CODE_TRANSLATION_REF_A
  ON goatada_test.REFD_CODE_TRANSLATION_REF_A (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_CODE_VALUE
(
  CODE_VALUE_PK      INT AUTO_INCREMENT
    PRIMARY KEY,
  CODE_VALUE         VARCHAR(30)            NOT NULL,
  MAIN_CODE_VALUE_PK INT                    NULL,
  MODIFIED_DATE_TIME DATETIME(6)            NOT NULL,
  USER_ID            VARCHAR(10)            NOT NULL,
  ACTIVE             VARCHAR(1) DEFAULT 'Y' NULL,
  VERSION            INT DEFAULT '0'        NOT NULL,
  TEST_DATA          VARCHAR(1) DEFAULT 'N' NOT NULL,
  CODE_LIST_CD       VARCHAR(4)             NULL,
  CONSTRAINT U_REFD_CODE_VALUE
  UNIQUE (CODE_LIST_CD, CODE_VALUE),
  CONSTRAINT FK_CODE_LIST
  FOREIGN KEY (CODE_LIST_CD) REFERENCES goatada_test.REFD_CODE_LIST (CODE_LIST_CD)
);

CREATE INDEX goatada_test.FK_REFD_CODE_VALUE2
  ON goatada_test.REFD_CODE_VALUE (MAIN_CODE_VALUE_PK);

ALTER TABLE goatada_test.REFD_CODE_TRANSLATION_REF
  ADD CONSTRAINT goatada_test.FK_REFD_CODE_TRANSLATION_REF
FOREIGN KEY (CODE_VALUE_PK) REFERENCES goatada_test.REFD_CODE_VALUE (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_CODE_VALUE_A
(
  CODE_VALUE_PK      INT         NOT NULL,
  REVISION_NUMBER    INT         NOT NULL,
  REVISION_TYPE      INT         NULL,
  CODE_VALUE         VARCHAR(30) NULL,
  MAIN_CODE_VALUE_PK INT         NULL,
  MODIFIED_DATE_TIME DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL,
  ACTIVE             VARCHAR(1)  NULL,
  VERSION            INT         NULL,
  CODE_LIST_CD       VARCHAR(4)  NULL,
  PRIMARY KEY (CODE_VALUE_PK, REVISION_NUMBER)
);

CREATE TABLE goatada_test.REFD_SOURCE_CODE_MAPPING
(
  SOURCE_CODE_MAPPING_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CODE_MAPPING_PK        INT                    NOT NULL,
  CODE_VALUE_PK          INT                    NOT NULL,
  MAPPING_IDENTIFIER_CD  VARCHAR(10)            NOT NULL,
  MODIFIED_DATE_TIME     DATETIME(6)            NOT NULL,
  USER_ID                VARCHAR(10)            NOT NULL,
  VERSION                INT DEFAULT '0'        NOT NULL,
  TEST_DATA              VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_REFD_SOURCE_CODE_MAPPING1
  FOREIGN KEY (CODE_MAPPING_PK) REFERENCES goatada_test.REFD_CODE_MAPPING (CODE_MAPPING_PK),
  CONSTRAINT FK_REFD_SOURCE_CODE_MAPPING2
  FOREIGN KEY (CODE_VALUE_PK) REFERENCES goatada_test.REFD_CODE_VALUE (CODE_VALUE_PK)
);

CREATE INDEX goatada_test.FK_REFD_SOURCE_CODE_MAPPING1
  ON goatada_test.REFD_SOURCE_CODE_MAPPING (CODE_MAPPING_PK);

CREATE INDEX goatada_test.FK_REFD_SOURCE_CODE_MAPPING2
  ON goatada_test.REFD_SOURCE_CODE_MAPPING (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_SOURCE_CODE_MAPPING_A
(
  SOURCE_CODE_MAPPING_PK INT         NOT NULL,
  REVISION_NUMBER        INT         NOT NULL,
  REVISION_TYPE          INT         NULL,
  CODE_MAPPING_PK        INT         NULL,
  CODE_VALUE_PK          INT         NULL,
  MAPPING_IDENTIFIER_CD  VARCHAR(10) NULL,
  MODIFIED_DATE_TIME     DATETIME(6) NULL,
  USER_ID                VARCHAR(10) NULL,
  VERSION                INT         NULL,
  PRIMARY KEY (SOURCE_CODE_MAPPING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_REFD_SOURCE_CODE_MAPPING1_A
  ON goatada_test.REFD_SOURCE_CODE_MAPPING_A (CODE_MAPPING_PK);

CREATE INDEX goatada_test.FK_REFD_SOURCE_CODE_MAPPING2_A
  ON goatada_test.REFD_SOURCE_CODE_MAPPING_A (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_TARGET_CODE_MAPPING
(
  TARGET_CODE_MAPPING_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  CODE_MAPPING_PK        INT                    NOT NULL,
  CODE_VALUE_PK          INT                    NOT NULL,
  MAPPING_IDENTIFIER_CD  VARCHAR(10)            NOT NULL,
  MODIFIED_DATE_TIME     DATETIME(6)            NOT NULL,
  USER_ID                VARCHAR(10)            NOT NULL,
  VERSION                INT DEFAULT '0'        NOT NULL,
  TEST_DATA              VARCHAR(1) DEFAULT 'N' NOT NULL,
  CONSTRAINT FK_REFD_TARGET_CODE_MAPPING1
  FOREIGN KEY (CODE_MAPPING_PK) REFERENCES goatada_test.REFD_CODE_MAPPING (CODE_MAPPING_PK),
  CONSTRAINT FK_REFD_TARGET_CODE_MAPPING2
  FOREIGN KEY (CODE_VALUE_PK) REFERENCES goatada_test.REFD_CODE_VALUE (CODE_VALUE_PK)
);

CREATE INDEX goatada_test.FK_REFD_TARGET_CODE_MAPPING1
  ON goatada_test.REFD_TARGET_CODE_MAPPING (CODE_MAPPING_PK);

CREATE INDEX goatada_test.FK_REFD_TARGET_CODE_MAPPING2
  ON goatada_test.REFD_TARGET_CODE_MAPPING (CODE_VALUE_PK);

CREATE TABLE goatada_test.REFD_TARGET_CODE_MAPPING_A
(
  TARGET_CODE_MAPPING_PK INT         NOT NULL,
  REVISION_NUMBER        INT         NOT NULL,
  REVISION_TYPE          INT         NULL,
  CODE_MAPPING_PK        INT         NULL,
  CODE_VALUE_PK          INT         NULL,
  MAPPING_IDENTIFIER_CD  VARCHAR(10) NULL,
  MODIFIED_DATE_TIME     DATETIME(6) NULL,
  USER_ID                VARCHAR(10) NULL,
  VERSION                INT         NULL,
  PRIMARY KEY (TARGET_CODE_MAPPING_PK, REVISION_NUMBER)
);

CREATE INDEX goatada_test.FK_REFD_TARGET_CODE_MAPPING1_A
  ON goatada_test.REFD_TARGET_CODE_MAPPING_A (CODE_MAPPING_PK);

CREATE INDEX goatada_test.FK_REFD_TARGET_CODE_MAPPING2_A
  ON goatada_test.REFD_TARGET_CODE_MAPPING_A (CODE_VALUE_PK);

CREATE TABLE goatada_test.REVINFO
(
  REVISION_NUMBER    INT AUTO_INCREMENT
    PRIMARY KEY,
  REVISION_TIMESTAMP DATETIME(6) NULL,
  USER_ID            VARCHAR(10) NULL
);

CREATE TABLE goatada_test.SUBJECT_CHANGE
(
  SUBJECT_ID  VARCHAR(12) NOT NULL
    PRIMARY KEY,
  CHANGE_DATE DATETIME(6) NOT NULL
);

CREATE TABLE goatada_test.USER_SUBJECT_AUTHORIZATION
(
  SUBJECT_AUTHORIZATION_PK INT AUTO_INCREMENT
    PRIMARY KEY,
  SUBJECT_ID               VARCHAR(10)     NOT NULL,
  SUBJECT_TYPE_CD          VARCHAR(30)     NOT NULL,
  USER_GROUP_ID            VARCHAR(30)     NOT NULL,
  MODIFIED_DATE_TIME       DATETIME(6)     NOT NULL,
  USER_ID                  VARCHAR(10)     NOT NULL,
  VERSION                  INT DEFAULT '0' NOT NULL,
  CONSTRAINT UQ_USER_SUBJECT_AUTHORIZATION
  UNIQUE (SUBJECT_ID, SUBJECT_TYPE_CD, USER_GROUP_ID)
);

-- CREATE VIEW goatada_test.COMMON_MONITOR_V AS
--   (SELECT
--      'Distribution'                                                     AS `event_type `,
--      `goatada_test `.`DIST_DISTRIBUTION`.`DISTRIBUTION_IDENTIFIER`      AS `id`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`DISTRIBUTION_REF_TYPE`         AS `ref_type`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`DISTRIBUTION_REF_VALUE`        AS `ref_value`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`BEGIN_DISTRIBUTION_DATE_TIME`  AS ` BEGIN `,
--      `goatada_test`.`DIST_DISTRIBUTION`.`FINISH_DISTRIBUTION_DATE_TIME` AS `finish`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`APPLICABILITY_DATE`            AS `applicability_date`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`PROCESS_NAME`                  AS `process_name`,
--      NULL                                                               AS `data_provider_code`,
--      `goatada_test`.`DIST_DISTRIBUTION`.`BEST_TIME`                     AS `best_time`
--    FROM `goatada_test `.` DIST_DISTRIBUTION `)
--   UNION (SELECT
--            'Data feed'                                                           AS `event_type `,
--            `goatada_test `.`COLL_PROVIDER_FEED_STATUS`.`FEED_IDENTIFIER_CODE`    AS `id`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_REFERENCE_TYPE_CODE` AS `ref_type`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_REFERENCE_VALUE`     AS `ref_value`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`START_DATE_TIME`          AS ` BEGIN `,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`END_DATE_TIME`            AS `finish`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_APPLICABILITY_DATE`  AS `applicability_date`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`PROCESS_NAME`             AS `process_name`,
--            `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`DATA_PROVIDER_CODE`       AS `data_provider_code`,
--            0                                                                     AS `best_time`
--          FROM `goatada_test `.` COLL_PROVIDER_FEED_STATUS `)
--   UNION (SELECT
--            'Data feed request'                                                     AS `event_type `,
--            `goatada_test `.`COLL_PROVIDER_FEED_REQUEST`.`PROVIDER_FEED_REQUEST_PK` AS `id`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`FEED_REFERENCE_TYPE_CODE`  AS `ref_type`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`FEED_REFERENCE_VALUE`      AS `ref_value`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`CREATION_DATE_TIME`        AS ` BEGIN `,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`CREATION_DATE_TIME`        AS `finish`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`FEED_APPLICABILITY_DATE`   AS `applicability_date`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`PROCESS_NAME`              AS `process_name`,
--            `goatada_test`.`COLL_PROVIDER_FEED_REQUEST`.`DATA_PROVIDER_CODE`        AS `data_provider_code`,
--            0                                                                       AS `best_time`
--          FROM `goatada_test `.` COLL_PROVIDER_FEED_REQUEST `)
--   UNION (SELECT
--            'Consistency data gathering'                                               AS `event_type `,
--            `goatada_test `.`COLL_CONSISTENCY_FEED_STATUS`.`CONSISTENCY_FEED_PK`       AS `id`,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`CONSISTENCY_DATA_REF_TYPE`  AS `ref_type`,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`CONSISTENCY_DATA_REF_VALUE` AS `ref_value`,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`PROCESS_START_DATE_TIME`    AS ` BEGIN `,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`PROCESS_END_DATE_TIME`      AS `finish`,
--            NULL                                                                       AS `applicability_date`,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`PROCESS_NAME`               AS `process_name`,
--            `goatada_test`.`COLL_CONSISTENCY_FEED_STATUS`.`DATA_PROVIDER_CODE`         AS `data_provider_code`,
--            0                                                                          AS `best_time`
--          FROM `goatada_test `.` COLL_CONSISTENCY_FEED_STATUS `)
--   UNION (SELECT
--            'Consumer request'                                                      AS `event_type `,
--            `goatada_test `.`DIST_CONSUMER_REQUEST_LOG`.`CONSUMER_REQUEST_LOG_PK`   AS `id`,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`CONSUMER_REQUEST_REF_TYPE`  AS `ref_type`,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`CONSUMER_REQUEST_REF_VALUE` AS `ref_value`,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`BEGIN_DATE_TIME`            AS ` BEGIN `,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`BEGIN_DATE_TIME`            AS `finish`,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`APPLICABILITY_DATE`         AS `applicability_date`,
--            `goatada_test`.`DIST_CONSUMER_REQUEST_LOG`.`PROCESS_NAME`               AS `process_name`,
--            NULL                                                                    AS `data_provider_code`,
--            0                                                                       AS `best_time`
--          FROM `goatada_test `.` DIST_CONSUMER_REQUEST_LOG `);

-- create view goatada_test.V_ACTIVE_ISSUE_OCCURRENCE as
-- SELECT
--     `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_PK`            AS `ISSUE_PK`,
--     `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`OPENED`              AS `OPENED`,
--     `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`CLOSED`              AS `CLOSED`,
--     `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`CLOSING_USER`        AS `CLOSING_USER`,
--     `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_OCCURRENCE_PK` AS `ISSUE_OCCURRENCE_PK`
--   FROM `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`
--   WHERE
--     (`goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_PK`, `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`OPENED`, `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_OCCURRENCE_PK`)
--     IN (SELECT
--           `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_PK`,
--           max(`goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`OPENED`),
--           max(`goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_OCCURRENCE_PK`)
--         FROM `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`
--         GROUP BY `goatada_test`.`ISSUE_OCCURRENCE_TRACKER`.`ISSUE_PK`);

-- CREATE VIEW goatada_test.V_EXC_COLL_FEED_INFO AS
--   SELECT
--     `goatada_test `.`COLL_PROVIDER_FEED_STATUS`.`FEED_IDENTIFIER_CODE`    AS `FEED_IDENTIFIER_CODE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`DATA_PROVIDER_CODE`       AS `DATA_PROVIDER_CODE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_REFERENCE_TYPE_CODE` AS `FEED_REFERENCE_TYPE_CODE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_REFERENCE_VALUE`     AS `FEED_REFERENCE_VALUE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`FEED_APPLICABILITY_DATE`  AS `FEED_APPLICABILITY_DATE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`SNAP_CODE`                AS `SNAP_CODE`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`START_DATE_TIME`          AS `START_DATE_TIME`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`END_DATE_TIME`            AS `END_DATE_TIME`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`PROCESS_NAME`             AS `PROCESS_NAME`,
--     `goatada_test`.`COLL_PROVIDER_FEED_STATUS`.`RECEIVED_DATE_TIME`       AS `RECEIVED_DATE_TIME`
--   FROM `goatada_test`.`COLL_PROVIDER_FEED_STATUS `;

-- CREATE VIEW goatada_test.V_REFD_CODE_LIST_VALUE_TRANS AS
--   SELECT `a`.`CODE_LIST_CD` AS `code_list_cd`,
--   `a`.`CODE_GROUP_CD` AS `code_group_cd`,
--   `a`.`CODE_LIST_NAME` AS `code_list_name`,
--   `a`.`MAIN_CODE_LIST` AS `main_code_list`,
--   `a`.`USER_MODIFIABLE` AS `user_modifiable`,
--   `b`.`CODE_VALUE_PK` AS `code_value_pk`,
--   `b`.`CODE_VALUE` AS `code_value`,
--   `b`.`ACTIVE` AS `active`,
--   `b`.`MAIN_CODE_VALUE_PK` AS `main_code_value_pk`,
--   `b2`.`CODE_VALUE` AS `main_code_value`,
--   `a2`.`CODE_LIST_CD` AS `main_code_list_cd`,
--   `a2`.`CODE_LIST_CD` AS `main_code_list_cd`,
--   `a2`.`CODE_LIST_NAME` AS `main_code_list_name`,
--   ` C `.`CODE_TRANSLATION_REF_PK` AS `code_translation_ref_pk`,
--   ` C `.`LANGUAGE_CD` AS `language_cd`,
--   ` C `.`CODE_TRANSLATION` AS `code_translation`,
--   `c2`.`CODE_TRANSLATION` AS `main_code_translation`,
--   `a`.`USER_ID` AS `code_list_user_id`,
--   `b`.`USER_ID` AS `code_value_user_id`
-- FROM (((((`goatada_test`.`REFD_CODE_LIST` `a` LEFT JOIN `goatada_test`.`REFD_CODE_VALUE` `b`
-- ON ((`b`.`CODE_LIST_CD` = `a`.`CODE_LIST_CD`))) LEFT JOIN `goatada_test`.`REFD_CODE_VALUE` `b2`
-- ON ((`b2`.`CODE_VALUE_PK` = `b`.`MAIN_CODE_VALUE_PK`))) LEFT JOIN `goatada_test`.`REFD_CODE_LIST` `a2`
-- ON ((`b2`.`CODE_LIST_CD` = `a2`.`CODE_LIST_CD`))) LEFT JOIN `goatada_test`.`REFD_CODE_TRANSLATION_REF` ` C `
-- ON ((` C `.`CODE_VALUE_PK` = `b`.`CODE_VALUE_PK`))) LEFT JOIN `goatada_test`.`REFD_CODE_TRANSLATION_REF` `c2`
-- ON ((`c2`.`CODE_VALUE_PK` = `b`.`MAIN_CODE_VALUE_PK`)));

-- CREATE VIEW goatada_test.V_REFD_CODE_MAPPING_SRC_TRGT AS
--   SELECT `a `.`CODE_MAPPING_PK` AS `code_mapping_pk`,
--   `a`.`MAPPING_GROUP_CD` AS `mapping_group_cd`,
--   `a`.`MAPPING_GROUP_NAME` AS `mapping_group_name`,
--   `b`.`MAPPING_IDENTIFIER_CD` AS `src_mapping_identifier_cd`,
--   `b`.`CODE_VALUE_PK` AS `src_code_value_pk`,
--   ` C `.`CODE_VALUE` AS `src_code_value`,
--   ` D `.`CODE_TRANSLATION` AS `src_code_translation`,
--   `e`.`CODE_LIST_CD` AS `src_code_list_cd`,
--   `e`.`CODE_LIST_NAME` AS `src_code_list_name`,
--   `b2`.`MAPPING_IDENTIFIER_CD` AS `trgt_mapping_identifier_cd`,
--   `b2`.`CODE_VALUE_PK` AS `trgt_code_value_pk`,
--   `c2`.`CODE_VALUE` AS `trgt_code_value`,
--   `d2`.`CODE_TRANSLATION` AS `trgt_code_translation`,
--   `e2`.`CODE_LIST_CD` AS `trgt_code_list_cd`,
--   `e2`.`CODE_LIST_NAME` AS `trgt_code_list_name`
-- FROM ((((((((`goatada_test`.`REFD_CODE_MAPPING` `a`
-- JOIN `goatada_test`.`REFD_SOURCE_CODE_MAPPING` `b` ON ((`a`.`CODE_MAPPING_PK` = `b`.`CODE_MAPPING_PK`))) JOIN
--   `goatada_test`.`REFD_CODE_VALUE` ` C ` ON ((`b`.`CODE_VALUE_PK` = ` C `.`CODE_VALUE_PK`))) LEFT JOIN
--   `goatada_test`.`REFD_CODE_TRANSLATION_REF` ` D ` ON ((`b`.`CODE_VALUE_PK` = ` D `.`CODE_VALUE_PK`))) JOIN
--   `goatada_test`.`REFD_CODE_LIST` `e` ON ((` C `.`CODE_LIST_CD` = `e`.`CODE_LIST_CD`))) JOIN
--   `goatada_test`.`REFD_TARGET_CODE_MAPPING` `b2` ON (((`a`.`CODE_MAPPING_PK` = `b2`.`CODE_MAPPING_PK`) AND
-- (`b2`.`MAPPING_IDENTIFIER_CD` =
--   `b`.`MAPPING_IDENTIFIER_CD`)))) JOIN
--   `goatada_test`.`REFD_CODE_VALUE` `c2` ON ((`b2`.`CODE_VALUE_PK` = `c2`.`CODE_VALUE_PK`))) LEFT JOIN
--   `goatada_test`.`REFD_CODE_TRANSLATION_REF` `d2` ON ((`b2`.`CODE_VALUE_PK` = `d2`.`CODE_VALUE_PK`))) JOIN
--   `goatada_test`.`REFD_CODE_LIST` `e2` ON ((`c2`.`CODE_LIST_CD` = `e2`.`CODE_LIST_CD`)));


-->>